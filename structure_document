<script type="text/javascript" src="/templates/js/inputmask/jquery.inputmask.bundle.min.js"></script>

<style type="text/css" >
.input_big {
	width: 100%;
	height:22px;
}
.input_span {
	width: 99% !important;
}
.input_small {
	width:210px;	
	height:22px;
}

.input_100 {
	width:100px;	
	height:22px;
}

.input_145 {
	width:145px;	
	height:22px;
}

.buttonForwardBack {
	font-size: 14px;
	cursor: pointer;
	padding: 8px 20px;
}
</style>

<?php

function maxsite_testIE() {
	$user_agent = $_SERVER['HTTP_USER_AGENT'];
	$browserIE = false;
	if ( stristr($user_agent, 'MSIE 6.0') ) $browserIE = true; // IE6
	if ( stristr($user_agent, 'MSIE 5.0') ) $browserIE = true; // IE5
	if ( stristr($user_agent, 'MSIE 7.0') ) $browserIE = false; // IE7
	return $browserIE;
}

if ( maxsite_testIE()==1 ) {
	?>
    <div style="text-align:center;">Ваш браузер устарел.<br>Чтобы заполнить заявку, пожалуйста, обновите браузер!</div><br>
    <table border="0" align="center" cellspacing="10" cellpadding="10">
	<tbody>
		<tr>
			<td align="center"><a href="http://www.opera.com/download/" target="_blank" rel="nofollow"><img src="/site_ru/27890/brouser3.png" alt="Opera" title="Opera" width="60" height="60" /><br /><strong>Opera</strong></a> </td>
			<td align="center"><a href="http://www.google.com/intl/ru/chrome/browser/" target="_blank" rel="nofollow"><img src="/site_ru/27890/brouser2.png" alt="Google Chrome" title="Google Chrome" width="60" height="60" /><strong><br />Google Chrome</strong></a> </td>
			<td align="center"><a href="http://www.apple.com/ru/support/safari/" target="_blank" rel="nofollow"><img src="/site_ru/27890/brouser4.png" alt="Safari Mac" title="Safari Mac" width="60" height="60" /><br /><strong>Safari (Mac)</strong></a> </td>
			<td align="center"><a href="http://windows.microsoft.com/ru-RU/internet-explorer/products/ie/home" target="_blank" rel="nofollow"><img src="/site_ru/27890/brouser1.png" alt="Internet Explorer" title="Internet Explorer" width="60" height="60" /><br /><strong>Internet Explorer</strong></a></td>
			<td align="center"><a href="http://www.mozilla.org/ru/firefox/new/" target="_blank" rel="nofollow"><img src="/site_ru/27890/brouser5.png" alt="Mozila Firefox" title="Mozila Firefox" width="60" height="60" /><strong><br />Mozila Firefox</strong></a> </td>
		</tr>
    </tbody>
</table>
<?
} else {
	$MODULE = new module(REG::I()->PARAM, '?');
	$MODULE->getPage();
	return 1;
}

class module{
	protected $action = '';
	protected $tplDir = '';
	protected $tplAbsDir = '';

	public function __construct($PARAM, $action){

		session_start();
		$this->action = $action;
		$this->tplDir = dirname(__FILE__).'/';
		$this->tplAbsDir = F::absDIR($this->tplDir);
		
	}


	public function getPage(){
		$step = ($t=$this->getParam('step'))?$t:1;
		if(isset($_GET["kreditID"])) {

			$GLOBALS['_SESSION']['card_design']['potreb'] = 1;
			foreach ($_GET as $key => $value) {
				$GLOBALS['_SESSION']['temp'][$key] = htmlspecialchars($value,ENT_QUOTES,'');
			}
			$this->redirect($this->action);
		}

		if($GLOBALS['_SESSION']['card_design']['potreb'] == 1){

			switch ($step){
				case 1: $this->doStep1(); break;
			//	case 2:	$this->doStep2(); break;
			//	case 3: $this->doStep3(); break;
				case 4: $this->doStep4(); break;
				case 5: $this->doStep5(); break;
			//	case 6: $this->doStep6(); break;
				case 7: $this->doStep7(); break;
				case 8: $this->doStep8(); break;
				case 9: $this->doStep9(); break;
			}
			return;
		}


		// овердрафт
		if(REG::I()->MnowKey == 30887) {

			switch ($step){
				case 1: $this->doStep1_overdraft(); break;
				case 2:	$this->doStep2_overdraft(); break;
			//	case 3: $this->doStep3(); break;
				case 4: $this->doStep4_overdraft(); break;
				case 5: $this->doStep5_mini(); break;
				case 6: $this->doStep6(); break;
				case 7: $this->doStep7(); break;
				case 8: $this->doStep8_overdraft(); break;
				case 9: $this->doStep9_overdraft(); break;
			}
			return;
		}

		// мини версия анкеты для кредита Деду морозу
		if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] == 5 || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] == 7) {
			switch ($step){
				case 1: $this->doStep1(); break;
				case 2:	$this->doStep2(); break;
			//	case 3: $this->doStep3(); break;
				case 4: $this->doStep4_mini(); break;
				case 5: $this->doStep5_mini(); break;
				case 6: $this->doStep6(); break;
				case 7: $this->doStep7_mini(); break;
				case 8: $this->doStep8_mini(); break;
				case 9: $this->doStep9(); break;
			}		
		} else {
			switch ($step){
				case 1: $this->doStep1(); break;
				case 2:	$this->doStep2(); break;
			//	case 3: $this->doStep3(); break;
				case 4: $this->doStep4(); break;
				case 5: $this->doStep5(); break;
				case 6: $this->doStep6(); break;
				case 7: $this->doStep7(); break;
				case 8: $this->doStep8(); break;
				case 9: $this->doStep9(); break;
			}
		}
	}




	function doStep1(){
		//$this->cleanAllSessionParams(); 
		if($GLOBALS['_SESSION']['card_design']['potreb'] == 1 AND !$this->getParam('next')) {
			// для всех кроме Проверено временем условие установления процентной ставки "на общих основаниях"
			$group_id = DB::select_value("SELECT group_id FROM calc.calc_inf WHERE inf_id=?",$GLOBALS['_SESSION']['temp']['inf_id']);
			if($group_id != 20160713091509306404) 	
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['uslUstProcStavki'] = 'на общих основаниях';
			else 									
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['uslUstProcStavki'] = DB::select_value("SELECT usl_name FROM calc.calc_usl WHERE usl_id=?",$GLOBALS['_SESSION']['temp']['kreditID']);

			$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditNameFull'] = DB::select_value("SELECT group_name FROM calc.calc_group WHERE group_id=?",$group_id);

			 switch ($group_id) {
			 	case 20080225120949961007: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 1;		break;
			 	case 20070215140139483950: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 2;		break;
			 	case 20160616105555605235: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 3;		break;
			 	case 20160713091509306404: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 4;		break;
			 	case 20141201104410006090: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 6;		break;
			 	case 20150715091404799705: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 8;		break;
			 	case 20160713155156371700: 	$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 10;	break;
			 	default:					$GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'] = 1;		break;
			 }

			$GLOBALS['_SESSION']['card_design']['kredit']['summaKredita'] = $GLOBALS['_SESSION']['temp']['summ'];
			$GLOBALS['_SESSION']['card_design']['kredit']['vsegoDolg'] = $GLOBALS['_SESSION']['temp']['month'];
			$GLOBALS['_SESSION']['card_design']['kredit']['osnovnoyDolg'] = $GLOBALS['_SESSION']['temp']['osndolg'];
			$GLOBALS['_SESSION']['card_design']['kredit']['procentyDolg'] = $GLOBALS['_SESSION']['temp']['procmonth'];
			$GLOBALS['_SESSION']['card_design']['kredit']['dohOsn'] = $GLOBALS['_SESSION']['temp']['dohod'];
			$GLOBALS['_SESSION']['card_design']['kredit']['rashodKredits'] = $GLOBALS['_SESSION']['temp']['rashodyKredit'];
			$GLOBALS['_SESSION']['card_design']['kredit']['rashodOther'] = $GLOBALS['_SESSION']['temp']['rashodyOther'];
			$GLOBALS['_SESSION']['card_design']['kredit']['srednemesDohod'] = $GLOBALS['_SESSION']['temp']['dohod'] - $GLOBALS['_SESSION']['temp']['rashodyOther'];

			switch ($GLOBALS['_SESSION']['temp']['obesp']) {
				case 'obespPoruch':			$GLOBALS['_SESSION']['card_design']['CONSTANTS']['obespKreditaPodbor'] = 'поручительство'; 							break;
				case 'obespNeustoyka':		$GLOBALS['_SESSION']['card_design']['CONSTANTS']['obespKreditaPodbor'] = 'неустойка'; 								break;
				case 'obespStrahRiska':		$GLOBALS['_SESSION']['card_design']['CONSTANTS']['obespKreditaPodbor'] = 'страхование риска невозврата кредита'; 	break;
			}




		}

		if ($this->getParam('next') && $GLOBALS['_SESSION']['card_design']['step1_OK']!=1){
			$UserInfo =  $this->getParam('userInfo');
		} else{
			$UserInfo =  $this->getSessionParam('CONSTANTS');
		}

		$KREDITS[1] = 'на потребительские нужды до 1 года';
		$KREDITS[2] = 'на потребительские нужды до 5 лет';
		$KREDITS[3] = 'на потребительские нужды сроком до 5 лет (со страхованием риска невозврата кредита)';
		$KREDITS[4] = 'кредит «Проверено временем»';
		//$KREDITS[5] = 'кредит «Заявка Деду Морозу»';
		$KREDITS[6] = 'кредит «Время Жить»';
		//$KREDITS[7] = 'кредит «ВЕСНА-online»';
		$KREDITS[8] = 'кредит «Серьезные планы»';
		//$KREDITS[9] = 'кредит «К учебному году 2015/2016»';
		$KREDITS[10] = 'кредит «Лето с Беларусбанком»';


		$REF = CONSTS::getRef();

		$OBESPECH_KREDITA = array(
			  'poruchFizLic' => 'поручительство физических лиц',
			  'poruchUrLic' => 'поручительство юридического лица',
			  'zalogImu' => 'залог имущества',
			  'zalogTransport' => 'залог транспортных средств',
			  'zalogCenBumag' => 'залог ценных бумаг',
			  'zalogNedv' => 'залог недвижимости',
			  'garantDeposit' => 'гарантийный депозит денег',
			  'neustoika' => 'неустойка',
			  'drFormyObesp' => 'другие формы обеспечения',

		);

		$OBESPECH_KREDITA_MINI = array(
			  'poruchFizLic' => 'поручительство физического лица',
			  'neustoykaSelect' => 'неустойка (при наличии положительной кредитной истории в банке)', 
		);







		if($this->getParam('next')){
			// извлекаем здесь массив снова, чтобы брать данные именно из формы
			$UserInfo =  $this->getParam('userInfo');
			
			if($GLOBALS['_SESSION']['card_design']['potreb'] == 1) {
				$UserInfo['kreditName'] = $GLOBALS['_SESSION']['card_design']['CONSTANTS']['kreditName'];
				$UserInfo['uslUstProcStavki'] = $GLOBALS['_SESSION']['card_design']['CONSTANTS']['uslUstProcStavki'];
				$UserInfo['obespKreditaPodbor'] = $GLOBALS['_SESSION']['card_design']['CONSTANTS']['obespKreditaPodbor'];
			}



			$ERRORS = array();

			if($UserInfo['formaKredita']=='')  { $ERRORS[] = formaKredita; $ERRORS[] = formaKreditaSelect; }
			if($UserInfo['usloviyaVidachi']=='') { $ERRORS[] = usloviyaVidachi; $ERRORS[] = usloviyaVidachiSelect; }

			if(!isset($GLOBALS['_SESSION']['card_design']['potreb'])){
				if($UserInfo['kreditName']=='') { $ERRORS[] = kreditName;  $ERRORS[] = kreditNameSelect;  }
				


				if ($UserInfo['kreditName'] == 1 || $UserInfo['kreditName'] == 2) {
					if (	$UserInfo['poruchFizLic']=='' && $UserInfo['poruchUrLic']=='' && $UserInfo['zalogImu']=='' && 
							$UserInfo['zalogTransport']=='' && $UserInfo['zalogCenBumag']=='' && $UserInfo['zalogNedv']=='' && 
							$UserInfo['garantDeposit']==''
						)
						$ERRORS[] = obespechKreditaDIV;
					unset($UserInfo['neustoykaSelect']);
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['drFormyObesp']);
					unset($UserInfo['neustoika']);
				}

				if ($UserInfo['kreditName'] == 6) {
					if (	$UserInfo['poruchFizLic']=='' && $UserInfo['poruchUrLic']=='' && $UserInfo['zalogImu']=='' && 
							$UserInfo['zalogTransport']=='' && $UserInfo['zalogCenBumag']=='' && $UserInfo['zalogNedv']=='' && 
							$UserInfo['garantDeposit']=='' && $UserInfo['neustoika']==''
						)
						$ERRORS[] = obespechKreditaDIV;
					unset($UserInfo['neustoykaSelect']);
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['drFormyObesp']);
				}


				if ($UserInfo['kreditName'] == 8) {
					if (	$UserInfo['poruchFizLic']=='' && $UserInfo['neustoykaSelect']=='')
						$ERRORS[] = obespechKreditaDIV4;
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['neustoika']);
				}
				if ($UserInfo['kreditName'] == 3 || $UserInfo['kreditName'] == 10 ) {
					
					if($UserInfo['strahovanieRiska']=='') $ERRORS[] = obespechKreditaDIV3;
					
					unset($UserInfo['neustoykaSelect']);
					unset($UserInfo['poruchFizLic']);
					unset($UserInfo['poruchUrLic']);
					unset($UserInfo['zalogImu']);
					unset($UserInfo['zalogTransport']);
					unset($UserInfo['zalogCenBumag']);
					unset($UserInfo['zalogNedv']);
					unset($UserInfo['garantDeposit']);
					unset($UserInfo['drFormyObesp']);
					unset($UserInfo['neustoika']);
				}
		
				if ($UserInfo['kreditName'] == 5 || $UserInfo['kreditName'] == 7 || $UserInfo['kreditName'] == 9) {
					if($UserInfo['poruchFizLic']=='') $ERRORS[] = obespechKreditaDIV;
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['poruchUrLic']);
					unset($UserInfo['zalogImu']);
					unset($UserInfo['zalogTransport']);
					unset($UserInfo['zalogCenBumag']);
					unset($UserInfo['zalogNedv']);
					unset($UserInfo['garantDeposit']);
					unset($UserInfo['drFormyObesp']);
					unset($UserInfo['neustoika']);
				}

				if ($UserInfo['kreditName'] == 4 ) {
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['poruchFizLic']);
					unset($UserInfo['poruchUrLic']);
					unset($UserInfo['zalogImu']);
					unset($UserInfo['zalogTransport']);
					unset($UserInfo['zalogCenBumag']);
					unset($UserInfo['zalogNedv']);
					unset($UserInfo['garantDeposit']);
					unset($UserInfo['drFormyObesp']);
					unset($UserInfo['neustoika']);
				}





			}			



			//f::debug($UserInfo);exit();
			// Проверяем правильность заполнения полей
			if(empty($ERRORS)){





				if($UserInfo['kreditName'] == 5)	$UserInfo['neustoykaSelect'] = 'неустойка';


				if($GLOBALS['_SESSION']['card_design']['potreb'] == 1) {
					unset($UserInfo['neustoykaSelect']);
					unset($UserInfo['strahovanieRiska']);
					unset($UserInfo['poruchFizLic']);
					unset($UserInfo['poruchUrLic']);
					unset($UserInfo['zalogImu']);
					unset($UserInfo['zalogTransport']);
					unset($UserInfo['zalogCenBumag']);
					unset($UserInfo['zalogNedv']);
					unset($UserInfo['garantDeposit']);
					unset($UserInfo['drFormyObesp']);
					unset($UserInfo['neustoika']);

				}



				$this->setSessionParam('sessionID',$GLOBALS['_COOKIE']['PHPSESSID']);
				$this->setSessionParam('step1_OK',true);
				$GLOBALS['_SESSION']['card_design']['CONSTANTS'] = $UserInfo;
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['ANKETA_START'] = date("Y.m.d H:i");
				if($GLOBALS['_SESSION']['card_design']['potreb'] == 1) {
					$this->setSessionParam('step2_OK',true);
					$this->setSessionParam('step6_OK',true);
					$this->redirect($this->action.'&step=4#content');
				}
				
				$this->redirect($this->action.'&step=2#content');
				return 1;
			}
		}

		$DATA = array(
			'action' => $this->action,
			'REF'=>$REF,
			'KREDITS'=>$KREDITS,
			'OBESPECH_KREDITA'=>$OBESPECH_KREDITA,
			'OBESPECH_KREDITA_MINI'=>$OBESPECH_KREDITA_MINI,
			'ERRORS'=>$ERRORS,
			'UserInfo' => $UserInfo,
		);

		$this->viewStep1($DATA);

	}

	function doStep2(){
		//Проверяем выполнены ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')){
			echo 'Вы не ознакомились с условиями кредитования';
			$this->redirect($this->action.'');
			return 1;
		}
		
		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step2_OK') || $this->getSessionParam('step2_OK')=='')  $UserInfo =  $this->getSessionParam('kredit');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');

		if($this->getParam('prev')){
			$this->setSessionParam('step2_OK',false);
			$this->redirect($this->action.'&step=1#content');
			return 1;
		}
		
		$KREDIT_DOGOVORA = array(
			  '0' => '0',
			  '1' => '1',
			  '2' => '2',
			  '3' => '3',
			  '4' => '4',
			  '5' => '5',
			  '6' => '6',
		);

		
		if($this->getParam('next')){
			// Проверяем правильность заполнения полей
			$ERRORS = array();

			if($UserInfo['summaKredita']=='') $ERRORS[] = 'Вы не произвели расчет необходимой суммы кредита'; 
				
			// Переходим к следующему шагу если все ОК
			if(!$ERRORS){
				foreach ($UserInfo as $key => $value) {
					$UserInfo[$key] = str_replace(' ', '', $value);
				}

				$UserInfo['srednemesDohod'] = $UserInfo['dohOsn'] - $UserInfo['rashodStrahovanie'] - $UserInfo['rashodOther'];

				$this->setSessionParam('step2_OK',true);
				$GLOBALS['_SESSION']['card_design']['kredit'] = $UserInfo;
				$this->redirect($this->action.'&step=4#content');
				return 1;
			}

		}
		
		$DATA = array(
			'session_id'=>$this->getSessionParam('session_id'),
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'KREDIT_DOGOVORA'=>$KREDIT_DOGOVORA,	
			'UserInfo'=>$UserInfo,	
			'ERRORS'=>$ERRORS,
		);
		$this->viewStep2($DATA);
		//F::debug($DATA);
	}

/*
	function doStep3(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK')){
			echo 'Не выполнен шаг 1 или 2';
			$this->redirect($this->action.'');
			return 1;
		}

		if($this->getParam('prev')){
			$this->setSessionParam('step3_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}

		$CONSTANTS = $GLOBALS['_SESSION']['card_design']['CONSTANTS'];
		$CALCVALUES = $GLOBALS['_SESSION']['card_design']['kredit'];

		if($this->getParam('next')){
			// ничего не проверяем
			$this->setSessionParam('step3_OK',true);
			$GLOBALS['_SESSION']['card_design']['PPS'] = $_POST['userInfo'];
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}

		$DATA = array(
			'CONSTANTS'=>$CONSTANTS,
			'CALCVALUES'=>$CALCVALUES
		);

		$this->viewStep3($DATA);
		//F::debug($img_info);
	}
*/

	function doStep4(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK')){
			echo 'Не выполнен шаг 1 или 2 или 3';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step4_OK') || $this->getSessionParam('step4_OK')=='')  $UserInfo =  $this->getSessionParam('anketa');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('prev')){
			$this->setSessionParam('step4_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}

		if($this->getParam('next')){
		//	$ERRORStxt[] = userImy;	
		// Проверяем правильность заполнения полей

			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
			/*
			echo '<pre>';
			print_r ($UserInfo);
			echo '</pre>';			
			*/

			$UserInfo['userFamiliya'] = trim($UserInfo['userFamiliya']);
			$UserInfo['userImya'] = trim($UserInfo['userImya']);
			$UserInfo['userOtchestvo'] = trim($UserInfo['userOtchestvo']);
			$UserInfo['userFamiliyaLatinica'] = trim($UserInfo['userFamiliyaLatinica']);
			$UserInfo['userImyaLatinica'] = trim($UserInfo['userImyaLatinica']);

			// валидность полей - проверяем заполнены ли и соответствие регулярке
			if ($UserInfo['userFamiliya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userFamiliya']) || strlen($UserInfo['userFamiliya'])<2)) $ERRORStxt[] = userFamiliya;			
			if ($UserInfo['userImya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userImya']) || strlen($UserInfo['userImya'])<2)) $ERRORStxt[] = userImya;			
			if ($UserInfo['userOtchestvo']!='' && (!preg_match('/^[а-яА-ЯЁё]+$/', $UserInfo['userOtchestvo']) || strlen($UserInfo['userOtchestvo'])<2)) $ERRORStxt[] = userOtchestvo;			
			if ($UserInfo['userFamiliyaLatinica']!='' && (!preg_match('/^[a-zA-Z-]+$/', $UserInfo['userFamiliyaLatinica']) || strlen($UserInfo['userFamiliyaLatinica'])<2)) $ERRORStxt[] = userFamiliyaLatinica;			
			if ($UserInfo['userImyaLatinica']!='' && (!preg_match('/^[a-zA-Z-]+$/', $UserInfo['userImyaLatinica']) || strlen($UserInfo['userImyaLatinica'])<2)) $ERRORStxt[] = userImyaLatinica;			


			if ($UserInfo[userPasportSeriyaNomer]!='' && 
				(strlen($UserInfo[userPasportSeriyaNomer])!=9 ||
				!preg_match('/^[a-zA-Z0-9]+$/', $UserInfo[userPasportSeriyaNomer]) )  )
			$ERRORStxt[] = userPasportSeriyaNomer;	 	


			if ($UserInfo['userPasportLichnyNomer']=='') {
				$ERRORS[] = userPasportLichnyNomer;
			} else {
				$UserInfo['userPasportLichnyNomer'] = F::toupper($UserInfo['userPasportLichnyNomer']);
				if (strlen($UserInfo[userPasportLichnyNomer])!=14) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],0,7))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],7,1))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],8,3))) $ERRORStxt[] = userPasportLichnyNomer;
				
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],11,2))) $ERRORStxt[] = userPasportLichnyNomer;
				//if (substr($UserInfo[userPasportLichnyNomer],11,2) != 'PB') $ERRORStxt[] = userPasportLichnyNomer;

				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],13,1))) $ERRORStxt[] = userPasportLichnyNomer;
				$masskontrol = array(
					'A'=>10, 'B'=>11, 'C'=>12, 'D'=>13, 'E'=>14, 'F'=>15, 'G'=>16, 'H'=>17, 'I'=>18, 'J'=>19, 'K'=>20, 'L'=>21, 'M'=>22, 
					'N'=>23, 'O'=>24, 'P'=>25, 'Q'=>26, 'R'=>27, 'S'=>28, 'T'=>29, 'U'=>30, 'V'=>31, 'W'=>32, 'X'=>33, 'Y'=>34, 'Z'=>35	);
				$kontrolNumber=7*$UserInfo[userPasportLichnyNomer]{0} + 3*$UserInfo[userPasportLichnyNomer]{1} + 1*$UserInfo[userPasportLichnyNomer]{2} + 
								7*$UserInfo[userPasportLichnyNomer]{3} + 3*$UserInfo[userPasportLichnyNomer]{4} + 1*$UserInfo[userPasportLichnyNomer]{5} + 		
								7*$UserInfo[userPasportLichnyNomer]{6} + 3*$masskontrol[$UserInfo[userPasportLichnyNomer]{7}] + 1*$UserInfo[userPasportLichnyNomer]{8} + 	
								7*$UserInfo[userPasportLichnyNomer]{9} + 3*$UserInfo[userPasportLichnyNomer]{10} + 1*$masskontrol[$UserInfo[userPasportLichnyNomer]{11}] + 	
								7*$masskontrol[$UserInfo[userPasportLichnyNomer]{12}];
				$kontrolNumber = substr($kontrolNumber,-1);
				if (substr($UserInfo[userPasportLichnyNomer],13,1) != $kontrolNumber) $ERRORStxt[] = userPasportLichnyNomer;
			}



			if(!isset($UserInfo[userBirth]) || $UserInfo[userBirth] == '') {
				$ERRORS[] = userBirth;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo[userBirth]) && $UserInfo[userBirth]!='') $ERRORStxt[] = userBirth;	
				$date_format = substr($UserInfo[userBirth],6,4).substr($UserInfo[userBirth],3,2).substr($UserInfo[userBirth],0,2);
				$temp_date = date ("Ymd", mktime(0, 0, 0, date("m"), date("d")+1, date("Y")-18));   // сегодня минус 18 лет
				if(checkdate(substr($UserInfo[userBirth],3,2), substr($UserInfo[userBirth],0,2), substr($UserInfo[userBirth],6,4)) != true) $ERRORStxt[] = userBirth;	
				if ($date_format>$temp_date) $ERRORStxt[] = userBirth;	
			}

	

			if(!isset($UserInfo[userPasportDataVidachy]) || $UserInfo[userPasportDataVidachy] == '') {
				$ERRORS[] = userPasportDataVidachy;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userPasportDataVidachy']) && $UserInfo['userPasportDataVidachy']!='') $ERRORStxt[] = userPasportDataVidachy;
				if(checkdate(substr($UserInfo[userPasportDataVidachy],3,2), substr($UserInfo[userPasportDataVidachy],0,2), substr($UserInfo[userPasportDataVidachy],6,4)) != true) $ERRORStxt[] = userPasportDataVidachy;	
			}

			
			if(!isset($UserInfo[userPasportSrokdeistviya]) || $UserInfo[userPasportSrokdeistviya] == '') {
				$ERRORS[] = userPasportSrokdeistviya;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userPasportSrokdeistviya']) && $UserInfo['userPasportSrokdeistviya']!='') $ERRORStxt[] = userPasportSrokdeistviya;
				if(checkdate(substr($UserInfo[userPasportSrokdeistviya],3,2), substr($UserInfo[userPasportSrokdeistviya],0,2), substr($UserInfo[userPasportSrokdeistviya],6,4)) != true) $ERRORStxt[] = userPasportSrokdeistviya;	
			}




			if ($UserInfo['userMail'] == 'есть') {
				if ($UserInfo['userEmailValue']!='' && !preg_match('/^[0-9a-zA-Z_\.-]+@[0-9a-zA-Z\.-]+$/', $UserInfo['userEmailValue'])) 	$ERRORStxt[] = userEmailValue;
				$MASSDAT['userEmailValue'] = userEmailValue;
			}
			
	
			if ($UserInfo['userSemeynoePologenie'] === 'женат / замужем') {
				
				// удаляем пробелы в начале и конце, а так же двойные пробелы в середине
				$UserInfo[userRoditeliNesovDeteySuprugFIO] = trim($UserInfo[userRoditeliNesovDeteySuprugFIO]);
				$UserInfo[userRoditeliNesovDeteySuprugFIO] = preg_replace("/ +/", " ", $UserInfo[userRoditeliNesovDeteySuprugFIO]);
				if(!isset($UserInfo[userRoditeliNesovDeteySuprugFIO]) || $UserInfo[userRoditeliNesovDeteySuprugFIO] == '') 
					$ERRORS[] = userRoditeliNesovDeteySuprugFIO;
				else {
					// должно быть 2 пробела
					$numSpaces = substr_count($UserInfo[userRoditeliNesovDeteySuprugFIO], ' ');
					if($numSpaces != 2) $ERRORStxt[] = userRoditeliNesovDeteySuprugFIO;	
				}


				$MASSDAT['userRoditeliNesovDeteySuprugFIO'] = userRoditeliNesovDeteySuprugFIO;



				if(!isset($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya]) || $UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya] == '') {
					$ERRORS[] = userRoditeliNesovDeteySuprugDataRogdeniya;
				} else {
					if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userRoditeliNesovDeteySuprugDataRogdeniya']) && $UserInfo['userRoditeliNesovDeteySuprugDataRogdeniya']!='') $ERRORStxt[] = userRoditeliNesovDeteySuprugDataRogdeniya;
					if(checkdate(substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],3,2), substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],0,2), substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],6,4)) != true) $ERRORStxt[] = userRoditeliNesovDeteySuprugDataRogdeniya;	
				}

				
				if(!isset($UserInfo['userRoditeliNesovDeteySuprugDolg']) || $UserInfo['userRoditeliNesovDeteySuprugDolg']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugDolg; $ERRORS[] = userRoditeliNesovDeteySuprugDolgS; }
				if(!isset($UserInfo['userRoditeliNesovDeteySuprugZanyat']) || $UserInfo['userRoditeliNesovDeteySuprugZanyat']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugZanyat; $ERRORS[] = userRoditeliNesovDeteySuprugZanyatS; }
				
				if($UserInfo['userRoditeliNesovDeteySuprugZanyat'] == 'работает'){
					if(!isset($UserInfo['suprugRabotaMesto']) || $UserInfo['suprugRabotaMesto']=='') { $ERRORS[] = suprugRabotaMesto; }
					if(!isset($UserInfo['suprugRabotaDolgnost']) || $UserInfo['suprugRabotaDolgnost']=='') { $ERRORS[] = suprugRabotaDolgnost; }
				}
				
				if(($UserInfo['userRoditeliNesovDeteySuprugTelMobil'] == '') && ($UserInfo['userRoditeliNesovDeteySuprugTelDom'] == '') && ($UserInfo['userRoditeliNesovDeteySuprugTelRab'] == '') ){
					$ERRORS[] = userRoditeliNesovDeteySuprugTelMobil;
					$ERRORS[] = userRoditeliNesovDeteySuprugTelDom;
					$ERRORS[] = userRoditeliNesovDeteySuprugTelRab;
				}

				if(!isset($UserInfo['userRoditeliNesovDeteySuprugSredn']) || $UserInfo['userRoditeliNesovDeteySuprugSredn']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugSredn; }
				elseif($UserInfo['userRoditeliNesovDeteySuprugSredn'] < $GLOBALS['_SESSION']['card_design']['kredit']['srednemesDohod']) { $ERRORStxt[] = userRoditeliNesovDeteySuprugSredn; }
				



				if ($UserInfo['userRoditeliNesovDeteySuprugDolg'] == 'да') {
				if(!isset($UserInfo['userRoditeliNesovDeteySuprugDolgValuta']) || $UserInfo['userRoditeliNesovDeteySuprugDolgValuta']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugDolgValuta; $ERRORS[] = userRoditeliNesovDeteySuprugDolgValutaS; }
					$MASSDAT['userRoditeliNesovDeteySuprugDolgOsnDolg'] = userRoditeliNesovDeteySuprugDolgOsnDolg;
					$MASSDAT['userRoditeliNesovDeteySuprugDolgSumPlatega'] = userRoditeliNesovDeteySuprugDolgSumPlatega;
				}
				
			} else {
				unset($UserInfo['userRoditeliNesovDeteySuprugDolg']);
			}

			
			if(!isset($UserInfo['userRegistrRavnoMestogitel'])) { $ERRORS[] = mestogitDIV; }
			
			if ($UserInfo['userRegistrRavnoMestogitel'] == 'не совпадает с адресом регистрации') {
				if(!isset($UserInfo['nGitelOblast']) || $UserInfo['nGitelOblast']=='') { $ERRORS[] = nGitelOblast; $ERRORS[] = nGitelOblastS; }
				if(!isset($UserInfo['nGitelRayon']) || $UserInfo['nGitelRayon']=='') { $ERRORS[] = nGitelRayon; $ERRORS[] = nGitelRayonS; }
				if(!isset($UserInfo['nGitelCity']) || $UserInfo['nGitelCity']=='') { $ERRORS[] = nGitelCity; $ERRORS[] = nGitelCityS; }
				if(!isset($UserInfo['nGitelUlicaTip']) || $UserInfo['nGitelUlicaTip']=='') { $ERRORS[] = nGitelUlicaTip; $ERRORS[] = nGitelUlicaTipS; }

				$MASSDAT['nGitelUlica'] = nGitelUlica;
				$MASSDAT['nGitelDom'] = nGitelDom;
				$MASSDAT['nGitelKorpus'] = nGitelKorpus;
				$MASSDAT['nGitelKvartira'] = nGitelKvartira;
			} 
			
			if($UserInfo['userSemeynoePologenie'] == 'женат / замужем'){
				if(!isset($UserInfo['suprugAdresMestoProgiv'])) { $ERRORS[] = progivDiv; }
			}
			
			if ($UserInfo['suprugAdresMestoProgiv'] == 'не совпадает с адресом по месту проживания супруга(и)') {
				if(!isset($UserInfo['suprugOblast']) || $UserInfo['suprugOblast']=='') { $ERRORS[] = suprugOblast; $ERRORS[] = suprugOblastS; }
				if(!isset($UserInfo['suprugRayon']) || $UserInfo['suprugRayon']=='') { $ERRORS[] = suprugRayon; $ERRORS[] = suprugRayonS; }
				if(!isset($UserInfo['suprugCity']) || $UserInfo['suprugCity']=='') { $ERRORS[] = suprugCity; $ERRORS[] = suprugCityS; }
				if(!isset($UserInfo['suprugUlicaTip']) || $UserInfo['suprugUlicaTip']=='') { $ERRORS[] = suprugUlicaTip; $ERRORS[] = suprugUlicaTipS; }
				$MASSDAT['suprugUlica'] = suprugUlica;
				$MASSDAT['suprugDom'] = suprugDom;
				$MASSDAT['suprugKorpus'] = suprugKorpus;
				$MASSDAT['suprugKvartira'] = suprugKvartira;
			} 
			
			

			if ($UserInfo['nKreditUchregd']=='') $ERRORS[] = mestoGitKreditForm;
			if ($UserInfo['nKreditUchregd']=='в ином учреждении Банка')  {
				if(!isset($UserInfo['userKreditOther']) || $UserInfo['userKreditOther']=='') { $ERRORS[] = userKreditOther; $ERRORS[] = uchregdeniya; }
			} else {
				unset($UserInfo['userKreditOther']);
			}

	
			if(!isset($UserInfo['userPredFamiliya']) || $UserInfo['userPredFamiliya']=='') { $ERRORS[] = userPredFamiliya; $ERRORS[] = userPredFamiliyaS; }
				
			if ($UserInfo['userPredFamiliya'] == 'да') {
				if ($UserInfo['userPredFamiliyaFamiliya']=='')  $ERRORS[] = userPredFamiliyaFamiliya;
			}

			if ($UserInfo['userVoennoobyazannost'] == 'отсрочка от службы до') {
				if ($UserInfo['userVoennoobyazannostOtsrochkaDo']=='')  $ERRORS[] = userVoennoobyazannostOtsrochkaDo;
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userVoennoobyazannostOtsrochkaDo']) && $UserInfo['userVoennoobyazannostOtsrochkaDo']!='') $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;	
				if(checkdate(substr($UserInfo[userVoennoobyazannostOtsrochkaDo],3,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],0,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],6,4)) != true) $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;
			}


			$vowels = array("(", "_", ")", "-");


			$userTelefonMestogitelstva = str_replace($vowels, "", $UserInfo['userTelefonMestogitelstva']);
			$userTelefonMobilny = str_replace($vowels, "", $UserInfo['userTelefonMobilny']);
			$userTelefonRabota = str_replace($vowels, "", $UserInfo['userTelefonRabota']);

			if($userTelefonMestogitelstva == '')				$ERRORS[] = userTelefonMestogitelstva;
			elseif(strlen($userTelefonMestogitelstva) != 11)	$ERRORStxt[] = userTelefonMestogitelstva; 												

			if($userTelefonMobilny == '')						$ERRORS[] = userTelefonMobilny;
			elseif(strlen($userTelefonMobilny) != 11)			$ERRORStxt[] = userTelefonMobilny; 												

			if($userTelefonRabota == '')						$ERRORS[] = userTelefonRabota;
			elseif(strlen($userTelefonRabota) != 11)			$ERRORStxt[] = userTelefonRabota; 												



			if(!isset($UserInfo['userPol']) || $UserInfo['userPol']=='') { $ERRORS[] = userPol; $ERRORS[] = userPolS; }
			if(!isset($UserInfo['userGragdanstvo']) || $UserInfo['userGragdanstvo']=='') { $ERRORS[] = userGragdanstvo; $ERRORS[] = userGragdanstvoS; }
			if(!isset($UserInfo['userRezidentstvo']) || $UserInfo['userRezidentstvo']=='') { $ERRORS[] = userRezidentstvo; $ERRORS[] = userRezidentstvoS; }
			if(!isset($UserInfo['userVoennoobyazannost']) || $UserInfo['userVoennoobyazannost']=='') { $ERRORS[] = userVoennoobyazannost; $ERRORS[] = userVoennoobyazannostS; }
			if(!isset($UserInfo['nPropiskaOblast']) || $UserInfo['nPropiskaOblast']=='') { $ERRORS[] = nPropiskaOblast; $ERRORS[] = nPropiskaOblastS; }
			if(!isset($UserInfo['nPropiskaRayon']) || $UserInfo['nPropiskaRayon']=='') { $ERRORS[] = nPropiskaRayon; $ERRORS[] = nPropiskaRayonS; }
			if(!isset($UserInfo['nPropiskaCity']) || $UserInfo['nPropiskaCity']=='') { $ERRORS[] = nPropiskaCity; $ERRORS[] = nPropiskaCityS; }
			if(!isset($UserInfo['nPropiskaUlicaTip']) || $UserInfo['nPropiskaUlicaTip']=='') { $ERRORS[] = nPropiskaUlicaTip; $ERRORS[] = nPropiskaUlicaTipS; }
			// если вдруг недогрузился аякс запрос проверяем подгрузилось ли поле nPropiskaPodrAddrInput
			if($UserInfo['nPropiskaCity']!='' && $UserInfo['nPropiskaPodrAddrInput']=='') { 
				$numFil = DB::select_value("SELECT filial FROM soato WHERE number_soato=?",$UserInfo['nPropiskaCity']);
				$PODR_ADDR = DB::select_line(" SELECT f.filial_name, ft.type_name, f.num, m.name_type, m.name,f.street_type,f.street,f.home_number
												FROM filials as f, filials_type as ft,  map as m 
												WHERE ft.type_id=f.type AND f.city_id=m.idkey AND f.num=? AND f.subnum = ''",$numFil);
				$podrFullName = '';
				if ($PODR_ADDR[filial_name]) $podrFullName = $PODR_ADDR[filial_name];
				else 						 $podrFullName = $PODR_ADDR[type_name].' №'.$PODR_ADDR[num];
				$podrFullName .= ' - '.$PODR_ADDR[name_type].$PODR_ADDR[name].', '.$PODR_ADDR[street_type].$PODR_ADDR[street].', '.$PODR_ADDR[home_number];
				echo $UserInfo['nPropiskaPodrAddrInput'] = $podrFullName;
			}


			if(!isset($UserInfo['userMail']) || $UserInfo['userMail']=='') { $ERRORS[] = userMail; $ERRORS[] = userMailS; }
			if(!isset($UserInfo['userDocument']) || $UserInfo['userDocument']=='') { $ERRORS[] = userDocument; $ERRORS[] = userDocumentS; }


			if(!isset($UserInfo['userObrazovanie']) || $UserInfo['userObrazovanie']=='') { $ERRORS[] = userObrazovanie; $ERRORS[] = userObrazovanieS; }
			if(!isset($UserInfo['userSemeynoePologenie']) || $UserInfo['userSemeynoePologenie']=='') { $ERRORS[] = userSemeynoePologenie; $ERRORS[] = userSemeynoePologenieS; }
			if(!isset($UserInfo['userStatusSemyi']) || $UserInfo['userStatusSemyi']=='') { $ERRORS[] = userStatusSemyi; $ERRORS[] = userStatusSemyiS; }
			if(!isset($UserInfo['userChlenySemyi']) || $UserInfo['userChlenySemyi']=='') { $ERRORS[] = userChlenySemyi; $ERRORS[] = userChlenySemyiS; }
			if(!isset($UserInfo['userNesovershennoletnieDeli']) || $UserInfo['userNesovershennoletnieDeli']=='') { $ERRORS[] = userNesovershennoletnieDeli; $ERRORS[] = userNesovershennoletnieDeliS; }

			//if(!preg_match('/^\d+$/', $UserInfo['userChlenySemyi']))  { $ERRORStxt[] = userChlenySemyi;}
			
			
			$MASSMAIN = array(
								'userFamiliya'=>userFamiliya,
								'userImya'=>userImya,
								'userOtchestvo'=>userOtchestvo,
								'userFamiliyaLatinica'=>userFamiliyaLatinica,
								'userImyaLatinica'=>userImyaLatinica,
								'userBirthMesto'=>userBirthMesto,
								'nPropiskaUlica'=>nPropiskaUlica,
								'nPropiskaDom'=>nPropiskaDom,
								'nPropiskaKorpus'=>nPropiskaKorpus,
								'nPropiskaKvartira'=>nPropiskaKvartira,
								'userPasportSeriyaNomer'=>userPasportSeriyaNomer,
								'userPasportROVD'=>userPasportROVD,
							);
			
			if (isset($MASSDAT)) {
				$MASSDATA = array_merge($MASSDAT,$MASSMAIN);
			} else {
				$MASSDATA = $MASSMAIN;	
			}
			

			foreach ($UserInfo as $k=>$v) {
			  if ($v == '' && isset($MASSDATA[$k])) $ERRORS[] = $MASSDATA[$k];
			}
			

			//	if(F::testers()) F::debug($ERRORStxt);

			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				
				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo[userRegistrRavnoMestogitel]=='совпадает с адресом регистрации') {
				  unset($UserInfo[nGitelOblast]);
 				  unset($UserInfo[nGitelRayon]);
 				  unset($UserInfo[nGitelCity]);
 				  unset($UserInfo[nGitelUlicaTip]);
 				  unset($UserInfo[nGitelUlica]);
 				  unset($UserInfo[nGitelDom]);
 				  unset($UserInfo[nGitelKorpus]);
 				  unset($UserInfo[nGitelKvartira]);
				}
				
				if ($UserInfo[suprugAdresMestoProgiv]=='совпадает с адресом по месту проживания супруга(и)') {
				  unset($UserInfo[suprugOblast]);
 				  unset($UserInfo[suprugRayon]);
 				  unset($UserInfo[suprugCity]);
 				  unset($UserInfo[suprugUlicaTip]);
 				  unset($UserInfo[suprugUlica]);
 				  unset($UserInfo[suprugDom]);
 				  unset($UserInfo[suprugKorpus]);
 				  unset($UserInfo[suprugKvartira]);
				}
				
				if($UserInfo['userRoditeliNesovDeteySuprugZanyat'] != 'работает'){
					unset($UserInfo['suprugRabotaMesto']);
					unset($UserInfo['suprugRabotaDolgnost']);
				}

				if ($UserInfo[userPredFamiliya]!='да') {
				  unset($UserInfo[userPredFamiliyaFamiliya]);
				}
				
				if ($UserInfo[userVoennoobyazannost]!='отсрочка от службы до') {
				  unset($UserInfo[userVoennoobyazannostOtsrochkaDo]);
				}
			

				$GLOBALS['_SESSION']['card_design']['anketa'] = $UserInfo;

				$this->setSessionParam('step4_OK',true);
				$this->redirect($this->action.'&step=5#content');
				return 1;
			}

		}

		$CITYS_GITEL = DB::select_array("
							  SELECT idkey, cat_left, cat_right, cat_level,parkey as p,
							  IF (name_type!='',CONCAT((SELECT CONCAT(name_type,name) FROM map WHERE idkey=p ORDER BY name),', ',name_type,name),CONCAT(name_type,name))  AS name 
							  FROM map 
						  WHERE type IN (3,4) 
						  ORDER BY type DESC,name ASC");
		$where_2 = ''; $or_2 = '';
		foreach ($CITYS_GITEL as $city_gitel){
			$where_2 .= $or_2. '(cat_left<='.$city_gitel['cat_left'].' AND cat_right>='.$city_gitel['cat_left'].') ';
			$or_2 = ' OR ';
		}
		
		
		$FILIALS_ALL = DB::select_column("SELECT CONCAT(ft.type_name,' №',f.num,' - ',m.name_type,m.name,', ',f.street_type,f.street,', ',f.home_number) as k
FROM map as m, filials as f,filials_type as ft
WHERE f.type IN (1,2,3) AND f.type=ft.type_id AND f.subnum='' AND m.idkey=f.city_id AND f.num!=519 ORDER BY f.num");
		foreach ($FILIALS_ALL as $key =>$value) {
			if ( strpos($value, '№100') != false ) $FILIALS_ALL[$key] = 'Филиал №100 - г.Брест, бул.Космонавтов, 94';
			if ( strpos($value, '№510') != false ) $FILIALS_ALL[$key] = 'Филиал №510 - г.Минск, ул.Мясникова, 32';
			if ( strpos($value, '№795') != false ) $FILIALS_ALL[$key] = 'ГО №795 - г.Минск, пр.Дзержинского, 18';
		}
		$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
		$FAMS = array('да' => 'да','нет' => 'нет');
		$FAMS2 = array('да' => 'да','нет' => 'нет','не располагаю информацией' => 'не располагаю информацией');
		
		$GRAGDANSTVO = array(
			  'гражданин Республики Беларусь' => 'гражданин Республики Беларусь',
			  'иностранный гражданин' => 'иностранный гражданин',
			  'лицо без гражданства' => 'лицо без гражданства'
		);

		$REZIDENTSTVO = array(
			  'резидент' => 'резидент',
			  'нерезидент' => 'нерезидент'
		);

		$MAIL_AVAIL = array(
			  'есть' => 'есть',
			  'нет' => 'нет'
		);
		
		$VOENNOOBYAZANNOST  = array(
			  'служил' => 'служил',
			  'невоеннообязанный' => 'невоеннообязанный',
			  'освобожден от воинской службы' => 'освобожден от воинской службы',
			  'отсрочка от службы до' => 'отсрочка от службы до',
		);

		$OBRAZOVANIE = array(
			  'высшее' => 'высшее',
			  'среднее специальное' => 'среднее специальное',
			  'среднее' => 'среднее',
			  'базовое' => 'базовое',
			  'без образования' => 'без образования',
		);

		$DOCUMENT_LICHNOST = array(
			  'паспорт гражданина Республики Беларусь' => 'паспорт гражданина Республики Беларусь',
			  'вид на жительство в Республике Беларусь' => 'вид на жительство в Республике Беларусь',
		);

		$SEMEYNOE = array(
			  'холост / не замужем' => 'холост / не замужем',
			  'женат / замужем' => 'женат / замужем',
			  'разведен / разведена' => 'разведен / разведена',
			  'вдовец / вдова' => 'вдовец / вдова'
		);


		$STATUS_SEMYI = array(
			  'многодетная семья' => 'многодетная семья',
			  'семья, имеющая 1-2 несовершеннолетних детей' => 'семья, имеющая 1-2 несовершеннолетних детей',
			  'семья, не имеющая несовершеннолетних детей' => 'семья, не имеющая несовершеннолетних детей',
			  'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей' => 'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей',
			  'одинокий гражданин' => 'одинокий гражданин',
		);

	
		$KREDIT_CEL = array(
			'потребительские нужды' => 'потребительские нужды',
			'финансирование недвижимости' => 'финансирование недвижимости',
			'приобретение автомобиля' => 'приобретение автомобиля',
			'овердрафт' => 'овердрафт',
			'иное' => 'иное',
		);

		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);

		$VAL = DB::select_column("SELECT val_name_ru_many FROM kurs_valuta WHERE val_name_ru_many!='' AND val_group IN (1,5) ORDER BY val_priority");
		foreach ($VAL as $k=>$v)  $VALUTY[$v] = $v;

		$CHLENYSEMYI = array('1' => '1','2' => '2','3' => '3','4' => '4','5' => '5','6' => '6','7' => '7 и более');
		$IGDIVENCY = array('нет' => 'нет','1' => '1','2' => '2','3' => '3','4' => '4','5' => '5 и более');

		$BIRTH_DATE = array('01' => '1','02' => '2','03' => '3','04' => '4','05' => '5','06' => '6','07' => '7','08' => '8','09' => '9','10' => '10','11' => '11','12' => '12','13' => '13','14' => '14','15' => '15','16' => '16','17' => '17','18' => '18','19' => '19','20' => '20','21' => '21','22' => '22','23' => '23','24' => '24','25' => '25','26' => '26','27' => '27','28' => '28','29' => '29','30' => '30','31' => '31');
		$BIRTH_MONTH = array('01' => 'января','02' => 'февраля','03' => 'марта','04' => 'апреля','05' => 'мая','06' => 'июня','07' => 'июля','08' => 'августа','09' => 'сентября','10' => 'октября','11' => 'ноября','12' => 'декабря');
		for($i=(date("Y")-100);$i<(date("Y")-15);$i++) $BIRTH_YEAR[$i]=$i;


		$NE_PORUCHITEL = array(
			'нет источника дохода' => 'нет источника дохода',
			'низкая платежеспособность' => 'низкая платежеспособность',
			'супруг(а) отказался(ась) выступить поручителем' => 'супруг(а) отказался(ась) выступить поручителем',
			'клиент отказался пояснить' => 'клиент отказался пояснить',
			'выбрана иная форма обеспечения' => 'выбрана иная форма обеспечения',
		);

		$ZANSUPRUG = array(
			'пенсионер' => 'пенсионер',
			'не работает/ведет домашнее хозяйство' => 'не работает/ведет домашнее хозяйство',
			'социальный отпуск' => 'социальный отпуск',
			'работает' => 'работает',
		);

		$TIP_ULICY = array(
			'Нет улицы' => 'Нет улицы',
			'Бульвар' => 'Бульвар',
			'Вал' => 'Вал',
			'Военная часть' => 'Военная часть',
			'Военный городок' => 'Военный городок',
			'Квартал' => 'Квартал',
			'Кольцо' => 'Кольцо',
			'Микрорайон' => 'Микрорайон',
			'Набережная' => 'Набережная',
			'Парк' => 'Парк',
			'Переулок' => 'Переулок',
			'Площадь' => 'Площадь',
			'Поселок' => 'Поселок',
			'Проезд' => 'Проезд',
			'Проспект' => 'Проспект',
			'Станция' => 'Станция',
			'Территория' => 'Территория',
			'Тракт' => 'Тракт',
			'Тупик' => 'Тупик',
			'Улица' => 'Улица',
			'Урочище' => 'Урочище',
			'Шоссе' => 'Шоссе',
		);
		
		$SFERA_DEYAT = array(
				'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
				'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
				'Гостиницы и рестораны' => 'Гостиницы и рестораны',
				'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
				'Здравоохранение' => 'Здравоохранение',
				'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
				'Легкая промышленность' => 'Легкая промышленность',
				'Научные исследования и разработки' => 'Научные исследования и разработки',
				'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
				'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
				'Образование' => 'Образование',
				'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
				'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
				'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
				'Прочие' => 'Прочие',
				'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
				'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
				'Страхование' => 'Страхование',
				'Строительство' => 'Строительство',
				'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
				'Торговля' => 'Торговля',
				'Транспорт' => 'Транспорт',
				'Транспорт воздушный' => 'Транспорт воздушный',
				'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
				'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
				'Финансовая деятельность' => 'Финансовая деятельность',
				'Электроэнергетика' => 'Электроэнергетика',
			);
		
		$DATA = array(
			'birth_date'=>$BIRTH_DATE,
			'birth_month'=>$BIRTH_MONTH,
			'birth_year'=>$BIRTH_YEAR,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'DOHOD'=>$GLOBALS['_SESSION']['card_design']['kredit']['srednemesDohod'],
			'POLS' => $POLS,
			'FILIALS_ALL' => $FILIALS_ALL,
			'MAIL_AVAIL' => $MAIL_AVAIL,
			'ZANSUPRUG' => $ZANSUPRUG,
			'BANKI' => $BANKI,
			'FAMS' => $FAMS,
			'FAMS2' => $FAMS2,
			'VALUTY' => $VALUTY,
			'TIP_ULICY' => $TIP_ULICY,
			'KREDIT_CEL' => $KREDIT_CEL,
			'VOENNOOBYAZANNOST' => $VOENNOOBYAZANNOST,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'REZIDENTSTVO' => $REZIDENTSTVO,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'AVTO' => $AVTO,
			'OBRAZOVANIE' => $OBRAZOVANIE,
			'KOLVO_RABOTNIKOV' => $KOLVO_RABOTNIKOV,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'SEMEYNOE' => $SEMEYNOE,
			'CHLENYSEMYI' => $CHLENYSEMYI,
			'IGDIVENCY' => $IGDIVENCY,
			'NE_PORUCHITEL' => $NE_PORUCHITEL,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'UserInfo'=>$UserInfo,
			'SUDIMOST' => $SUDIMOST,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);

		$this->viewStep4($DATA);
	}

	function doStep5(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK') || !$this->getSessionParam('step4_OK')){
			echo 'Не выполнен шаг 1 или 2 или 3 или 4';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step5_OK') || $this->getSessionParam('step5_OK')=='')  $UserInfo =  $this->getSessionParam('anketa2');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('prev')){
			$this->setSessionParam('step5_OK',false);
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}

		if($this->getParam('next')){
		// Проверяем правильность заполнения полей
			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
			/*
			echo '<pre>';
			print_r ($UserInfo);
			echo '</pre>';			
			*/

			// валидность полей - проверяем заполнены ли и соответствие регулярке
			
			if ($UserInfo['dopinfoDom'] == 'да') {
				if(!isset($UserInfo['dopinfoDomVid']) || $UserInfo['dopinfoDomVid']=='') { $ERRORS[] = dopinfoDomVid; $ERRORS[] = dopinfoDomVidS; }
				if(!isset($UserInfo['dopinfoDomOblast']) || $UserInfo['dopinfoDomOblast']=='') { $ERRORS[] = dopinfoDomOblast; $ERRORS[] = dopinfoDomOblastS; }
				if(!isset($UserInfo['dopinfoDomRayon']) || $UserInfo['dopinfoDomRayon']=='') { $ERRORS[] = dopinfoDomRayon; $ERRORS[] = dopinfoDomRayonS; }
				if(!isset($UserInfo['dopinfoDomCity']) || $UserInfo['dopinfoDomCity']=='') { $ERRORS[] = dopinfoDomCity; $ERRORS[] = dopinfoDomCityS; }
				//$MASSDAT[dopinfoDomMesto] = dopinfoDomMesto;
				$MASSDAT[dopinfoDomPloschad] = dopinfoDomPloschad;
			}

			if ($UserInfo['dopinfoAvto'] == 'да') {
				if(!isset($UserInfo['dopinfoAvtoVid']) || $UserInfo['dopinfoAvtoVid']=='') { $ERRORS[] = dopinfoAvtoVid; $ERRORS[] = dopinfoAvtoVidS; }
				$MASSDAT[dopinfoAvtoMarka] = dopinfoAvtoMarka;
				$MASSDAT[dopinfoAvtoGod] = dopinfoAvtoGod;
			}

			if ($UserInfo['dopinfoSudimost'] == 'да') {
				if(!isset($UserInfo['dopinfoSudimostValue']) || $UserInfo['dopinfoSudimostValue']=='') { $ERRORS[] = dopinfoSudimostValue; $ERRORS[] = dopinfoSudimostValueS; }
			}

			if ($UserInfo['userRabota'] == 'работа по контракту' || $UserInfo['userRabota'] == 'работа по гражданско-правовому договору') {
				if($UserInfo[userRabotaSrokKontraktaDo] == '') {
					$ERRORS[] = userRabotaSrokKontraktaDo;
				} else {
					if(!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo[userRabotaSrokKontraktaDo])) $ERRORStxt[] = userRabotaSrokKontraktaDo;
					if(checkdate(substr($UserInfo[userRabotaSrokKontraktaDo],3,2), substr($UserInfo[userRabotaSrokKontraktaDo],0,2), substr($UserInfo[userRabotaSrokKontraktaDo],6,4)) != true) $ERRORStxt[] = userRabotaSrokKontraktaDo;
				}

				if(!isset($UserInfo['dopinfoKolichestvoRAbotnikov']) || $UserInfo['dopinfoKolichestvoRAbotnikov']=='') { $ERRORS[] = dopinfoKolichestvoRAbotnikov; $ERRORS[] = dopinfoKolichestvoRAbotnikovS; }
			}  elseif ($UserInfo['userRabota']=='работа по трудовому договору' || $UserInfo['userRabota']=='предпринимательская деятельность') {
				if(!isset($UserInfo['dopinfoKolichestvoRAbotnikov']) || $UserInfo['dopinfoKolichestvoRAbotnikov']=='') { $ERRORS[] = dopinfoKolichestvoRAbotnikov; $ERRORS[] = dopinfoKolichestvoRAbotnikovS; }
			} 
				

			if ($UserInfo['userRabota'] != 'не работающий') {
				if(!isset($UserInfo['userRabotaSferaDeyat']) || $UserInfo['userRabotaSferaDeyat']=='') { $ERRORS[] = userRabotaSferaDeyat; $ERRORS[] = userRabotaSferaDeyatS; }
				$MASSDAT[userRabotaMestoRaboty] = userRabotaMestoRaboty;
				
				$vowels = array("(", "_", ")", "-");

				$userRabotaTelefonBuhgalter = str_replace($vowels, "", $UserInfo['userRabotaTelefonBuhgalter']);

				if(!isset($UserInfo['userRabotaTelefonBuhgalter']) || $UserInfo['userRabotaTelefonBuhgalter']=='') {
					$ERRORS[] = userRabotaTelefonBuhgalter; 
				} elseif(strlen($userRabotaTelefonBuhgalter) != 11) {
					$ERRORStxt[] = userRabotaTelefonBuhgalter;
				} 

				$MASSDAT[userRabotaDolgnost] = userRabotaDolgnost;
				if(!isset($UserInfo['userRabotaSrokKontrakta']) || $UserInfo['userRabotaSrokKontrakta']=='') { $ERRORS[] = userRabotaSrokKontrakta;					$ERRORS[] = userRabotaSrokKontraktaS; }

				if(!isset($UserInfo['dopinfoKolichestvoMestRaboty']) || $UserInfo['dopinfoKolichestvoMestRaboty']=='') { $ERRORS[] = dopinfoKolichestvoMestRaboty; $ERRORS[] = dopinfoKolichestvoMestRabotyS; }

			}


			
			if ($UserInfo['belarusbankAkcioner']=='' && $UserInfo['belarusbankRabotnik']=='' && $UserInfo['belarusbankKlient']=='' && $UserInfo['belarusbankNetOtnosheniy']=='') {
				$ERRORS[] = belbank;
			}
				
			if(!isset($UserInfo['userRabota']) || $UserInfo['userRabota']=='') { $ERRORS[] = userRabota; $ERRORS[] = userRabotaS; }
			if(!isset($UserInfo['userRabotaStatus']) || $UserInfo['userRabotaStatus']=='') { $ERRORS[] = userRabotaStatus; $ERRORS[] = userRabotaStatusS; }
			if(!isset($UserInfo['belarusbankVklad']) || $UserInfo['belarusbankVklad']=='') { $ERRORS[] = belarusbankVklad; $ERRORS[] = belarusbankVkladS; }
			if(!isset($UserInfo['belarusbankPlastikovayaKarta']) || $UserInfo['belarusbankPlastikovayaKarta']=='') { $ERRORS[] = belarusbankPlastikovayaKarta; $ERRORS[] = belarusbankPlastikovayaKartaS; }
			if(!isset($UserInfo['dopinfoHarakteristikaGilya']) || $UserInfo['dopinfoHarakteristikaGilya']=='') { $ERRORS[] = dopinfoHarakteristikaGilya; $ERRORS[] = dopinfoHarakteristikaGilyaS; }
			if(!isset($UserInfo['dopinfoDom']) || $UserInfo['dopinfoDom']=='') { $ERRORS[] = dopinfoDom; $ERRORS[] = dopinfoDomS; }
			if(!isset($UserInfo['dopinfoAvto']) || $UserInfo['dopinfoAvto']=='') { $ERRORS[] = dopinfoAvto; $ERRORS[] = dopinfoAvtoS; }
			if(!isset($UserInfo['dopinfoSudimost']) || $UserInfo['dopinfoSudimost']=='') { $ERRORS[] = dopinfoSudimost; $ERRORS[] = dopinfoSudimostS; }
				
			$MASSMAIN = array(
							   'pasportFamiliyaMama'=>pasportFamiliyaMama,
							  );
			
			if (isset($MASSDAT)) {
				$MASSDATA = array_merge($MASSDAT,$MASSMAIN);	
			} else {
				$MASSDATA = $MASSMAIN;	
			}
			

			foreach ($UserInfo as $k=>$v) {
			  if ($v == '' && isset($MASSDATA[$k])) $ERRORS[] = $MASSDATA[$k];
			}
			



			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				
				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo['userRabota'] == 'иное' || $UserInfo['userRabota'] == 'не работающий') {
					unset($UserInfo[userRabotaSrokKontraktaDo]);
					unset($UserInfo[dopinfoKolichestvoRAbotnikov]);
				}elseif ($UserInfo['userRabota']=='работа по трудовому договору' || $UserInfo['userRabota']=='предпринимательская деятельность') {
					unset($UserInfo[userRabotaSrokKontraktaDo]);
				}
				
				//if ($UserInfo[userRabotaSferaDeyat]!='иная сфера деятельности')  unset($UserInfo[userSferaDrugaya]);
		
				
				$GLOBALS['_SESSION']['card_design']['anketa2'] = $UserInfo;
				//exit();
				$this->setSessionParam('step5_OK',true);
				if ($GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchFizLic'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchUrLic'] ||
				        $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogImu'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogTransport'] ||
						$GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogCenBumag'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogNedv'] ||
						$GLOBALS['_SESSION']['card_design']['CONSTANTS']['garantDeposit'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['drFormyObesp']) {
					$this->redirect($this->action.'&step=6#content');
				} else {
					$this->redirect($this->action.'&step=7#content');
				}
				return 1;
			}

		}

			$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
			$FAMS = array('да' => 'да','нет' => 'нет');
			
			$SUDIMOST = array(
				  'привлекался(ась) к административной за последние 3 года, до 2 раз' => 'привлекался(ась) к административной за последние 3 года, до 2 раз',
				  'привлекался(ась) к административной за последние 3 года, более 2 раз' => 'привлекался(ась) к административной за последние 3 года, более 2 раз',
				  'возбуждалось уголовное дело, осужден(а), судимость погашена/снята' => 'возбуждалось уголовное дело, осужден(а), судимость погашена/снята',
				  'возбуждалось уголовное дело, осужден(а), судимость не погашена/не снята' => 'возбуждалось уголовное дело, осужден(а), судимость не погашена/не снята',
				  'возбуждалось уголовное дело, дело прекращено/оправдан' => 'возбуждалось уголовное дело, дело прекращено/оправдан',
			);

			$RABOTA = array(
				  'работа по контракту' => 'работа по контракту',
				  'работа по трудовому договору' => 'работа по трудовому договору',
				  'работа по гражданско-правовому договору' => 'работа по гражданско-правовому договору',
				  'предпринимательская деятельность' => 'предпринимательская деятельность',
				  'не работающий' => 'не работающий',
				  'иное' => 'иное',
			);


			$KOLVO_RABOTNIKOV = array(
			  'до 10' => 'до 10',
			  '11–100' => '11–100',
			  '101–1000' => '101–1000',
			  'более 1000' => 'более 1000',
			);

			$VID_NEDVIGIMOSTI = array(
			  'квартира' => 'квартира',
			  'дом' => 'дом',
			  'доля собственности на жилое помещение' => 'доля собственности на жилое помещение',
			  'земельный участок' => 'земельный участок',
			  'доля собственности на земельный участок' => 'доля собственности на земельный участок',
			  'дачный участок' => 'дачный участок',
			  'помещение нежилого фонда' => 'помещение нежилого фонда',
			);

			$GILIE = array(
			  'собственное' => 'собственное',
			  'государственное' => 'государственное',
			  'проживаю у родственников' => 'проживаю у родственников',
			  'служебное/социальное' => 'служебное/социальное',
			  'общежитие' => 'общежитие',
			  'арендованное' => 'арендованное',
			);

			$STAG_RABOTY = array(
				'ранее не работал' => 'ранее не работал',
				'первое место работы' => 'первое место работы',
				'менее 6 месяцев' => 'менее 6 месяцев',
				'от 6 месяцев до 1 года' => 'от 6 месяцев до 1 года',
				'от 1 года до 3 лет' => 'от 1 года до 3 лет',
				'от 3 до 5 лет' => 'от 3 до 5 лет',
				'от 5 до 10 лет' => 'от 5 до 10 лет',
				'более 10 лет' => 'более 10 лет',
			);

			$STAG_RABOTY_SEYCHAS = array(
				'менее 6 месяцев' => 'менее 6 месяцев',
				'от 6 месяцев до 1 года' => 'от 6 месяцев до 1 года',
				'от 1 года до 3 лет' => 'от 1 года до 3 лет',
				'от 3 до 5 лет' => 'от 3 до 5 лет',
				'от 5 до 10 лет' => 'от 5 до 10 лет',
				'более 10 лет' => 'более 10 лет',
			);
			
			$STATUS_RABOTA = array(
				  'учредитель/соучредитель' => 'учредитель/соучредитель',
				  'руководитель' => 'руководитель',
				  'госслужащий' => 'госслужащий',
				  'военнослужащий' => 'военнослужащий',
				  'служащий/специалист' => 'служащий/специалист',
				  'рабочий' => 'рабочий',
				  'пенсионер' => 'пенсионер',
				  'студент/учащийся' => 'студент/учащийся',
				  'учитель/преподаватель' => 'учитель/преподаватель',
				  'врач' => 'врач',
				  'научный работник/профессорский состав' => 'научный работник/профессорский состав',
				  'индивидуальный предприниматель' => 'индивидуальный предприниматель',
				  'ремесленник' => 'ремесленник',
				  'частный нотариус/адвокат' => 'частный нотариус/адвокат',
				  'фермер/крестьянин' => 'фермер/крестьянин',
				  'священнослужитель' => 'священнослужитель',
				  'деятель искусства/культуры' => 'деятель искусства/культуры',
				  'спортсмен' => 'спортсмен',
				  'не работающий' => 'не работающий',
			);
	
			$AVTO = array(
				  'легковой автомобиль' => 'легковой автомобиль',
				  'грузовой автомобиль' => 'грузовой автомобиль',
				  'автобус/микроавтобус' => 'автобус/микроавтобус',
				  'мототранспорт' => 'мототранспорт',
				  'яхта/катер' => 'яхта/катер',
				  'водный мотоцикл' => 'водный мотоцикл',
			);

			$ORG_FORMA = array(
				'Акционерные общества (ОАО, ЗАО)' => 'Акционерные общества (ОАО, ЗАО)',
				'Арендные предприятия' => 'Арендные предприятия',
				'Ассоциации, Союзы' => 'Ассоциации, Союзы',
				'Индивидуальные предприниматели' => 'Индивидуальные предприниматели',
				'Иностранные предприятия' => 'Иностранные предприятия',
				'Колхозы, Совхозы, Коллективные предприятия' => 'Колхозы, Совхозы, Коллективные предприятия',
				'Крестьянские (фермерские) хозяйства' => 'Крестьянские (фермерские) хозяйства',
				'Общества (ООО, ОДО)' => 'Общества (ООО, ОДО)',
				'Общественные и религиозные организации (объединения), Фонды' => 'Общественные и религиозные организации (объединения), Фонды',
				'Потребительские союзы, Общества, Кооперативы, ЖСПК' => 'Потребительские союзы, Общества, Кооперативы, ЖСПК',
				'Представительства, Филиалы' => 'Представительства, Филиалы',
				'Производственные объединения, Кооперативы' => 'Производственные объединения, Кооперативы',
				'Совместные общества и предприятия' => 'Совместные общества и предприятия',
				'Товарищества' => 'Товарищества',
				'Унитарные предприятия' => 'Унитарные предприятия',
				'Учреждения' => 'Учреждения',
			);

			$SFERA_DEYAT = array(
				'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
				'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
				'Гостиницы и рестораны' => 'Гостиницы и рестораны',
				'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
				'Здравоохранение' => 'Здравоохранение',
				'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
				'Легкая промышленность' => 'Легкая промышленность',
				'Научные исследования и разработки' => 'Научные исследования и разработки',
				'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
				'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
				'Образование' => 'Образование',
				'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
				'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
				'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
				'Прочие' => 'Прочие',
				'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
				'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
				'Страхование' => 'Страхование',
				'Строительство' => 'Строительство',
				'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
				'Торговля' => 'Торговля',
				'Транспорт' => 'Транспорт',
				'Транспорт воздушный' => 'Транспорт воздушный',
				'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
				'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
				'Финансовая деятельность' => 'Финансовая деятельность',
				'Электроэнергетика' => 'Электроэнергетика',
			);

		$MEST_RABOTY = array(
			  '0' => '0',
			  '1' => '1',
			  '2' => '2',
			  '3' => '3',
			  '4' => '4',
			  '5' => '5',
			  '6' => '6',
			  '7' => '7',
			  '8' => '8',
			  '9' => '9',
		);		

		$DATA = array(
			'birth_date'=>$BIRTH_DATE,
			'birth_month'=>$BIRTH_MONTH,
			'birth_year'=>$BIRTH_YEAR,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'POLS' => $POLS,
			'MEST_RABOTY' => $MEST_RABOTY,
			'MAIL_AVAIL' => $MAIL_AVAIL,
			'ZANSUPRUG' => $ZANSUPRUG,
			'BANKI' => $BANKI,
			'FAMS' => $FAMS,
			'VALUTY' => $VALUTY,
			'KREDIT_CEL' => $KREDIT_CEL,
			'VOENNOOBYAZANNOST' => $VOENNOOBYAZANNOST,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'ORG_FORMA' => $ORG_FORMA,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'REZIDENTSTVO' => $REZIDENTSTVO,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'VID_NEDVIGIMOSTI' => $VID_NEDVIGIMOSTI,
			'AVTO' => $AVTO,
			'OBRAZOVANIE' => $OBRAZOVANIE,
			'KOLVO_RABOTNIKOV' => $KOLVO_RABOTNIKOV,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STAG_RABOTY_SEYCHAS' => $STAG_RABOTY_SEYCHAS,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'SEMEYNOE' => $SEMEYNOE,
			'CHLENYSEMYI' => $CHLENYSEMYI,
			'IGDIVENCY' => $IGDIVENCY,
			'GILIE' => $GILIE,
			'UserInfo'=>$UserInfo,
			'SUDIMOST' => $SUDIMOST,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);

		$this->viewStep5($DATA);
	}

	function doStep6(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		/*
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK') ||
			!$this->getSessionParam('step4_OK') || !$this->getSessionParam('step5_OK')
			){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5';
			$this->redirect($this->action.'');
			return 1;
		}
		*/
		
		//echo '<pre>';
		//print_r ($GLOBALS['_SESSION']['card_design']);
		//echo '</pre>'; 	
		
		$UserInfo1 = $this->getParam('userInfo1');
		$UserInfo2 = $this->getParam('userInfo2');
		$UserInfo3 = $this->getParam('userInfo3');
		$UserInfo4 = $this->getParam('userInfo4');
		$UserInfo5 = $this->getParam('userInfo5');
		$UserInfo6 = $this->getParam('userInfo6');
		$UserInfo7 = $this->getParam('userInfo7');
		$UserInfo8 = $this->getParam('userInfo8');
		
		if ($this->getSessionParam('step6_OK') || $this->getSessionParam('step6_OK')==''){
			$UserInfo1 = $this->getSessionParam('poruchFizLic');
			$UserInfo2 = $this->getSessionParam('poruchUrLic');
			$UserInfo3 = $this->getSessionParam('zalogImu');
			$UserInfo4 = $this->getSessionParam('zalogTransport');
			$UserInfo5 = $this->getSessionParam('zalogCenBumag');
			$UserInfo6 = $this->getSessionParam('zalogNedv');
			$UserInfo7 = $this->getSessionParam('garantDeposit');
			$UserInfo8 = $this->getSessionParam('drFormyObesp');
		}
		if($this->getParam('next'))	{
			$UserInfo1 = $this->getParam('userInfo1');
			$UserInfo2 = $this->getParam('userInfo2');
			$UserInfo3 = $this->getParam('userInfo3');
			$UserInfo4 = $this->getParam('userInfo4');
			$UserInfo5 = $this->getParam('userInfo5');
			$UserInfo6 = $this->getParam('userInfo6');
			$UserInfo7 = $this->getParam('userInfo7');
			$UserInfo8 = $this->getParam('userInfo8');
		}

		if($this->getParam('prev')){
			$this->setSessionParam('step6_OK',false);
			$this->redirect($this->action.'&step=5#content');
			return 1;
		}

		if($this->getParam('next')){
		// для каждого типа обеспечения здесь пишем свой if

		// Проверяем правильность заполнения полей
			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
		
			//поручительство юр. лица
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchUrLic']){
				if(!isset($UserInfo2['obespechPoruchUrLicNaimenovanie']) || $UserInfo2['obespechPoruchUrLicNaimenovanie'] == '') { $ERRORS[] = obespechPoruchUrLicNaimenovanie; }

				if ($UserInfo2['obespechPoruchUrLicUNP']=='')  { 
					$ERRORS[] = obespechPoruchUrLicUNP;
				} elseif(!preg_match('/^\d{9}$/', $UserInfo2['obespechPoruchUrLicUNP']) && $UserInfo2['obespechPoruchUrLicUNP']!='-') {
					$ERRORStxt[] = obespechPoruchUrLicUNP;
				}
				if(!isset($UserInfo2['obespechPoruchUrLicUrAdres']) || $UserInfo2['obespechPoruchUrLicUrAdres'] == '') { $ERRORS[] = obespechPoruchUrLicUrAdres; }
				if ($UserInfo2['obespechPoruchUrLicUrBIK']=='')  { 
					$ERRORS[] = obespechPoruchUrLicUrBIK;
				} elseif(!preg_match('/^\d{9}$/', $UserInfo2['obespechPoruchUrLicUrBIK']) && $UserInfo2['obespechPoruchUrLicUrBIK']!='-') {
					$ERRORStxt[] = obespechPoruchUrLicUrBIK;
				}
				if ($UserInfo2['obespechPoruchUrLicNrs']=='')  { 
					$ERRORS[] = obespechPoruchUrLicNrs;
				} elseif(!preg_match('/^\d{13}$/', $UserInfo2['obespechPoruchUrLicNrs']) && $UserInfo2['obespechPoruchUrLicNrs']!='-') {
					$ERRORStxt[] = obespechPoruchUrLicNrs;
				}
				if(!isset($UserInfo2['obespechPoruchUrLicRukov']) || $UserInfo2['obespechPoruchUrLicRukov'] == '') { $ERRORS[] = obespechPoruchUrLicRukov; }
				if(!isset($UserInfo2['obespechPoruchUrLicGlBuh']) || $UserInfo2['obespechPoruchUrLicGlBuh'] == '') { $ERRORS[] = obespechPoruchUrLicGlBuh; }
			}

			//залог имущества
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogImu']){
				if(!isset($UserInfo3['obespechZalogImuNaimenovanie']) || $UserInfo3['obespechZalogImuNaimenovanie'] == '') { $ERRORS[] = obespechZalogImuNaimenovanie; }
				if(!isset($UserInfo3['obespechZalogImuStoimost']) || $UserInfo3['obespechZalogImuStoimost'] == '') { $ERRORS[] = obespechZalogImuStoimost; }
			
				if(!isset($UserInfo3['obespechZalogImuOblast']) || $UserInfo3['obespechZalogImuOblast']=='') { $ERRORS[] = obespechZalogImuOblast; $ERRORS[] = obespechZalogImuOblastS; }
				if(!isset($UserInfo3['obespechZalogImuRayon']) || $UserInfo3['obespechZalogImuRayon']=='') { $ERRORS[] = obespechZalogImuRayon; $ERRORS[] = obespechZalogImuRayonS; }
				if(!isset($UserInfo3['obespechZalogImuCity']) || $UserInfo3['obespechZalogImuCity']=='') { $ERRORS[] = obespechZalogImuCity; $ERRORS[] = obespechZalogImuCityS; }
				if(!isset($UserInfo3['obespechZalogImuUlicaTip']) || $UserInfo3['obespechZalogImuUlicaTip']=='') { $ERRORS[] = obespechZalogImuUlicaTip; $ERRORS[] = obespechZalogImuUlicaTipS; }
				if(!isset($UserInfo3['obespechZalogImuUlica']) || $UserInfo3['obespechZalogImuUlica']=='') $ERRORS[] = obespechZalogImuUlica; 
				if(!isset($UserInfo3['obespechZalogImuDom']) || $UserInfo3['obespechZalogImuDom']=='') $ERRORS[] = obespechZalogImuDom; 
				if(!isset($UserInfo3['obespechZalogImuKorpus']) || $UserInfo3['obespechZalogImuKorpus']=='') $ERRORS[] = obespechZalogImuKorpus; 
				if(!isset($UserInfo3['obespechZalogImuKvartira']) || $UserInfo3['obespechZalogImuKvartira']=='') $ERRORS[] = obespechZalogImuKvartira; 
			}
			
			//залог транспортных средств
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogTransport']){
				if(!isset($UserInfo4['obespechZalogTransportVidTS']) || $UserInfo4['obespechZalogTransportVidTS'] == '') { $ERRORS[] = obespechZalogTransportVidTS; }
				if(!isset($UserInfo4['obespechZalogTransportMarkaTS']) || $UserInfo4['obespechZalogTransportMarkaTS'] == '') { $ERRORS[] = obespechZalogTransportMarkaTS; }
				if ($UserInfo4['obespechZalogTransportGodVyp']=='')  { 
					$ERRORS[] = obespechZalogTransportGodVyp;
				} elseif(!preg_match('/^\d{4}$/', $UserInfo4['obespechZalogTransportGodVyp']) && $UserInfo['obespechZalogTransportGodVyp'] != '-') {
					$ERRORStxt[] = obespechZalogTransportGodVyp;
				}
				if(!isset($UserInfo4['obespechZalogTransportRegNomer']) || $UserInfo4['obespechZalogTransportRegNomer'] == '') { $ERRORS[] = obespechZalogTransportRegNomer; }
				if(!isset($UserInfo4['obespechZalogTransportNomerKuz']) || $UserInfo4['obespechZalogTransportNomerKuz'] == '') { $ERRORS[] = obespechZalogTransportNomerKuz; }
				if(!isset($UserInfo4['obespechZalogTransportStoimost']) || $UserInfo4['obespechZalogTransportStoimost'] == '') { $ERRORS[] = obespechZalogTransportStoimost; }
			}
			
			//залог ценных бумаг
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogCenBumag']){
				if(!isset($UserInfo5['obespechZalogCenBumagNaimenovanie']) || $UserInfo5['obespechZalogCenBumagNaimenovanie'] == '') { $ERRORS[] = obespechZalogCenBumagNaimenovanie; }
				if(!isset($UserInfo5['obespechZalogCenBumagSeria']) || $UserInfo5['obespechZalogCenBumagSeria'] == '') { $ERRORS[] = obespechZalogCenBumagSeria; }
				if(!isset($UserInfo5['obespechZalogCenBumagStoimost']) || $UserInfo5['obespechZalogCenBumagStoimost'] == '') { $ERRORS[] = obespechZalogCenBumagStoimost; }
				if(!isset($UserInfo5['obespechZalogCenBumagKol']) || $UserInfo5['obespechZalogCenBumagKol'] == '') { $ERRORS[] = obespechZalogCenBumagKol; }
			}
			
			//залог недвижимости
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogNedv']){
				if(!isset($UserInfo6['obespechZalogNedvNaimenovanie']) || $UserInfo6['obespechZalogNedvNaimenovanie'] == '') { $ERRORS[] = obespechZalogNedvNaimenovanie; }
				if(!isset($UserInfo6['obespechZalogNedvStoimost']) || $UserInfo6['obespechZalogNedvStoimost'] == '') { $ERRORS[] = obespechZalogNedvStoimost; }
			
				if(!isset($UserInfo6['obespechZalogNedvOblast']) || $UserInfo6['obespechZalogNedvOblast']=='') { $ERRORS[] = obespechZalogNedvOblast; $ERRORS[] = obespechZalogNedvOblastS; }
				if(!isset($UserInfo6['obespechZalogNedvRayon']) || $UserInfo6['obespechZalogNedvRayon']=='') { $ERRORS[] = obespechZalogNedvRayon; $ERRORS[] = obespechZalogNedvRayonS; }
				if(!isset($UserInfo6['obespechZalogNedvCity']) || $UserInfo6['obespechZalogNedvCity']=='') { $ERRORS[] = obespechZalogNedvCity; $ERRORS[] = obespechZalogNedvCityS; }
				if(!isset($UserInfo6['obespechZalogNedvUlicaTip']) || $UserInfo6['obespechZalogNedvUlicaTip']=='') { $ERRORS[] = obespechZalogNedvUlicaTip; $ERRORS[] = obespechZalogNedvUlicaTipS; }
				if(!isset($UserInfo6['obespechZalogNedvUlica']) || $UserInfo6['obespechZalogNedvUlica']=='') $ERRORS[] = obespechZalogNedvUlica; 
				if(!isset($UserInfo6['obespechZalogNedvDom']) || $UserInfo6['obespechZalogNedvDom']=='') $ERRORS[] = obespechZalogNedvDom; 
				if(!isset($UserInfo6['obespechZalogNedvKorpus']) || $UserInfo6['obespechZalogNedvKorpus']=='') $ERRORS[] = obespechZalogNedvKorpus; 
				if(!isset($UserInfo6['obespechZalogNedvKvartira']) || $UserInfo6['obespechZalogNedvKvartira']=='') $ERRORS[] = obespechZalogNedvKvartira;
			}
			
			//гарантийный депозит денег
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['garantDeposit']){
				//if ($UserInfo7['obespechGarantDepositNomer']=='')  { 
				//	$ERRORS[] = obespechGarantDepositNomer;
				//} elseif(!preg_match('/^\d{9}$/', $UserInfo7['obespechGarantDepositNomer']) && $UserInfo7['obespechGarantDepositNomer']!='-') {
				//	$ERRORStxt[] = obespechGarantDepositNomer;
				//}
				if(!isset($UserInfo7['obespechGarantDepositNomer']) || $UserInfo7['obespechGarantDepositNomer'] == '') { $ERRORS[] = obespechGarantDepositNomer; }
				if ($UserInfo7['obespechGarantDepositBIK']=='')  { 
					$ERRORS[] = obespechGarantDepositBIK;
				} elseif(!preg_match('/^\d{9}$/', $UserInfo7['obespechGarantDepositBIK']) && $UserInfo7['obespechGarantDepositBIK']!='-') {
					$ERRORStxt[] = obespechGarantDepositBIK;
				}
				if(!isset($UserInfo7['obespechGarantDepositSumma']) || $UserInfo7['obespechGarantDepositSumma'] == '') { $ERRORS[] = obespechGarantDepositSumma; }
			}
			
			//другие формы обеспечения
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['drFormyObesp']){
				if(!isset($UserInfo8['obespechDrFormyObesp']) || $UserInfo8['obespechDrFormyObesp'] == '') { $ERRORS[] = obespechDrFormyObesp; }
			}

			//-------------------------------------------------------------------------------------
			if($GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchFizLic']){
				if(!isset($UserInfo1['poruchOneSovokup']) || $UserInfo1['poruchOneSovokup']=='') { $ERRORS[] = poruchOneSovokup; $ERRORS[] = poruchOneSovokupS; }
				if(!isset($UserInfo1['poruchFamiliya']) || $UserInfo1['poruchFamiliya']=='')  $ERRORS[] = poruchFamiliya; 
				if(!isset($UserInfo1['poruchImya']) || $UserInfo1['poruchImya']=='')  $ERRORS[] = poruchImya; 
				if(!isset($UserInfo1['poruchOtchestvo']) || $UserInfo1['poruchOtchestvo']=='')  $ERRORS[] = poruchOtchestvo; 
				if(!isset($UserInfo1['poruchPol']) || $UserInfo1['poruchPol']=='') { $ERRORS[] = poruchPol; $ERRORS[] = poruchPolS; }
				
				if(!isset($UserInfo1['poruchBirth']) || $UserInfo1['poruchBirth']=='')
					$ERRORS[] = poruchBirth; 
				else {
					if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo1['poruchBirth']) && $UserInfo['poruchBirth']!='') $ERRORStxt[] = poruchBirth;
					if(checkdate(substr($UserInfo1[poruchBirth],3,2), substr($UserInfo1[poruchBirth],0,2), substr($UserInfo1[poruchBirth],6,4)) != true) $ERRORStxt[] = poruchBirth;
				}
						
				if(!isset($UserInfo1['poruchBirthMesto']) || $UserInfo1['poruchBirthMesto']=='') $ERRORS[] = poruchBirthMesto; 
				if(!isset($UserInfo1['poruchOtnKKreditopol']) || $UserInfo1['poruchOtnKKreditopol']=='') { $ERRORS[] = poruchOtnKKreditopol; $ERRORS[] = poruchOtnKKreditopolS; }
				if(!isset($UserInfo1['poruchGragdanstvo']) || $UserInfo1['poruchGragdanstvo']=='') { $ERRORS[] = poruchGragdanstvo; $ERRORS[] = poruchGragdanstvoS; }

				if(!isset($UserInfo1['poruchDocument']) || $UserInfo1['poruchDocument']=='') { $ERRORS[] = poruchDocument; $ERRORS[] = poruchDocumentS; }	
				if(!isset($UserInfo1['poruchPasportSeriyaNomer']) || $UserInfo1['poruchPasportSeriyaNomer']=='')  $ERRORS[] = poruchPasportSeriyaNomer; 
			
				if ($UserInfo1['poruchPasportLichnyNomer']=='') {
					$ERRORS[] = poruchPasportLichnyNomer;
				} else {
					$UserInfo1['poruchPasportLichnyNomer'] = F::toupper($UserInfo1['poruchPasportLichnyNomer']);
					if (strlen($UserInfo1[poruchPasportLichnyNomer])!=14) $ERRORStxt[] = poruchPasportLichnyNomer;
					if (!is_numeric(substr($UserInfo1[poruchPasportLichnyNomer],0,7))) $ERRORStxt[] = poruchPasportLichnyNomer;
					if (!preg_match("/[A-Z]/i", substr($UserInfo1[poruchPasportLichnyNomer],7,1))) $ERRORStxt[] = poruchPasportLichnyNomer;
					if (!is_numeric(substr($UserInfo1[poruchPasportLichnyNomer],8,3))) $ERRORStxt[] = poruchPasportLichnyNomer;
					//if (substr($UserInfo1[poruchPasportLichnyNomer],11,2) != 'PB') $ERRORStxt[] = poruchPasportLichnyNomer;
					if (!preg_match("/[A-Z]/i", substr($UserInfo1[poruchPasportLichnyNomer],11,2))) $ERRORStxt[] = poruchPasportLichnyNomer;
					if (!is_numeric(substr($UserInfo1[poruchPasportLichnyNomer],13,1))) $ERRORStxt[] = poruchPasportLichnyNomer;
						$masskontrol = array(
						'A'=>10, 'B'=>11, 'C'=>12, 'D'=>13, 'E'=>14, 'F'=>15, 'G'=>16, 'H'=>17, 'I'=>18, 'J'=>19, 'K'=>20, 'L'=>21, 'M'=>22, 
						'N'=>23, 'O'=>24, 'P'=>25, 'Q'=>26, 'R'=>27, 'S'=>28, 'T'=>29, 'U'=>30, 'V'=>31, 'W'=>32, 'X'=>33, 'Y'=>34, 'Z'=>35	);
						$kontrolNumber=7*$UserInfo1[poruchPasportLichnyNomer]{0} + 3*$UserInfo1[poruchPasportLichnyNomer]{1} + 1*$UserInfo1[poruchPasportLichnyNomer]{2} + 
								7*$UserInfo1[poruchPasportLichnyNomer]{3} + 3*$UserInfo1[poruchPasportLichnyNomer]{4} + 1*$UserInfo1[poruchPasportLichnyNomer]{5} + 		
								7*$UserInfo1[poruchPasportLichnyNomer]{6} + 3*$masskontrol[$UserInfo1[poruchPasportLichnyNomer]{7}] + 1*$UserInfo1[poruchPasportLichnyNomer]{8} + 	
								7*$UserInfo1[poruchPasportLichnyNomer]{9} + 3*$UserInfo1[poruchPasportLichnyNomer]{10} + 1*$masskontrol[$UserInfo1[poruchPasportLichnyNomer]{11}] + 	
								7*$masskontrol[$UserInfo1[poruchPasportLichnyNomer]{12}];
						$kontrolNumber = substr($kontrolNumber,-1);
					if (substr($UserInfo1[poruchPasportLichnyNomer],13,1) != $kontrolNumber) $ERRORStxt[] = poruchPasportLichnyNomer;
				}


				if(!isset($UserInfo1['poruchPasportROVD']) || $UserInfo1['poruchPasportROVD']=='')  $ERRORS[] = poruchPasportROVD; 
				
				if(!isset($UserInfo1['poruchPasportDataVidachy']) || $UserInfo1['poruchPasportDataVidachy']=='')
					$ERRORS[] = poruchPasportDataVidachy; 
				else {
					if(!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo1['poruchPasportDataVidachy']) && $UserInfo1['poruchPasportDataVidachy']!='') $ERRORStxt[] = poruchPasportDataVidachy;					
					if(checkdate(substr($UserInfo1[poruchPasportDataVidachy],3,2), substr($UserInfo1[poruchPasportDataVidachy],0,2), substr($UserInfo1[poruchPasportDataVidachy],6,4)) != true) $ERRORStxt[] = poruchPasportDataVidachy;
				}

				if(!isset($UserInfo1['poruchPasportSrokdeistviya']) || $UserInfo1['poruchPasportSrokdeistviya']=='')
					$ERRORS[] = poruchPasportSrokdeistviya; 
				else {
					if(!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo1['poruchPasportSrokdeistviya']) && $UserInfo1['poruchPasportSrokdeistviya']!='') $ERRORStxt[] = poruchPasportSrokdeistviya;								
					if(checkdate(substr($UserInfo1[poruchPasportSrokdeistviya],3,2), substr($UserInfo1[poruchPasportSrokdeistviya],0,2), substr($UserInfo1[poruchPasportSrokdeistviya],6,4)) != true) $ERRORStxt[] = poruchPasportSrokdeistviya;
				}


				if(!isset($UserInfo1['poruchnPropiskaOblast']) || $UserInfo1['poruchnPropiskaOblast']=='') { $ERRORS[] = poruchnPropiskaOblast; $ERRORS[] = poruchnPropiskaOblastS; }
				if(!isset($UserInfo1['poruchnPropiskaRayon']) || $UserInfo1['poruchnPropiskaRayon']=='') { $ERRORS[] = poruchnPropiskaRayon; $ERRORS[] = poruchnPropiskaRayonS; }
				if(!isset($UserInfo1['poruchnPropiskaCity']) || $UserInfo1['poruchnPropiskaCity']=='') { $ERRORS[] = poruchnPropiskaCity; $ERRORS[] = poruchnPropiskaCityS; }
				if(!isset($UserInfo1['poruchnPropiskaUlicaTip']) || $UserInfo1['poruchnPropiskaUlicaTip']=='') { $ERRORS[] = poruchnPropiskaUlicaTip; $ERRORS[] = poruchnPropiskaUlicaTipS; }

				if(!isset($UserInfo1['poruchnPropiskaUlica']) || $UserInfo1['poruchnPropiskaUlica']=='') $ERRORS[] = poruchnPropiskaUlica; 
				if(!isset($UserInfo1['poruchnPropiskaDom']) || $UserInfo1['poruchnPropiskaDom']=='') $ERRORS[] = poruchnPropiskaDom; 
				if(!isset($UserInfo1['poruchnPropiskaKorpus']) || $UserInfo1['poruchnPropiskaKorpus']=='') $ERRORS[] = poruchnPropiskaKorpus; 
				if(!isset($UserInfo1['poruchnPropiskaKvartira']) || $UserInfo1['poruchnPropiskaKvartira']=='') $ERRORS[] = poruchnPropiskaKvartira; 
				
				if(!isset($UserInfo1['poruchuserRegistrRavnoMestogitel'])) { $ERRORS[] = mestogitDIV; }

				if($UserInfo1['poruchuserRegistrRavnoMestogitel'] == 'не совпадает с адресом регистрации') {
					if(!isset($UserInfo1['poruchnGitelOblast']) || $UserInfo1['poruchnGitelOblast']=='') { $ERRORS[] = poruchnGitelOblast; $ERRORS[] = poruchnGitelOblastS; }
					if(!isset($UserInfo1['poruchnGitelRayon']) || $UserInfo1['poruchnGitelRayon']=='') { $ERRORS[] = poruchnGitelRayon; $ERRORS[] = poruchnGitelRayonS; }
					if(!isset($UserInfo1['poruchnGitelCity']) || $UserInfo1['poruchnGitelCity']=='') { $ERRORS[] = poruchnGitelCity; $ERRORS[] = poruchnGitelCityS; }
					if(!isset($UserInfo1['poruchnGitelUlicaTip']) || $UserInfo1['poruchnGitelUlicaTip']=='') { $ERRORS[] = poruchnGitelUlicaTip; $ERRORS[] = poruchnGitelUlicaTipS; }
					if(!isset($UserInfo1['poruchnGitelUlica']) || $UserInfo1['poruchnGitelUlica']=='') $ERRORS[] = poruchnGitelUlica; 
					if(!isset($UserInfo1['poruchnGitelDom']) || $UserInfo1['poruchnGitelDom']=='') $ERRORS[] = poruchnGitelDom; 
					if(!isset($UserInfo1['poruchnGitelKorpus']) || $UserInfo1['poruchnGitelKorpus']=='') $ERRORS[] = poruchnGitelKorpus; 
					if(!isset($UserInfo1['poruchnGitelKvartira']) || $UserInfo1['poruchnGitelKvartira']=='') $ERRORS[] = poruchnGitelKvartira;
				} 

				if(!isset($UserInfo1['poruchSemeynoePologenie']) || $UserInfo1['poruchSemeynoePologenie']=='') { $ERRORS[] = poruchSemeynoePologenie; $ERRORS[] = poruchSemeynoePologenieS; }
				if(!isset($UserInfo1['poruchStatusSemyi']) || $UserInfo1['poruchStatusSemyi']=='') { $ERRORS[] = poruchStatusSemyi; $ERRORS[] = poruchStatusSemyiS; }
				if(!isset($UserInfo1['poruchRabota']) || $UserInfo1['poruchRabota']=='') { $ERRORS[] = poruchRabota; $ERRORS[] = poruchRabotaS; }
			
				if ($UserInfo1['poruchRabota'] == 'работа по трудовому договору' || $UserInfo1['poruchRabota'] == 'работа по гражданско-правовому договору') {
					if(!isset($UserInfo1['poruchRabotaSferaDeyat']) || $UserInfo1['poruchRabotaSferaDeyat']=='') { $ERRORS[] = poruchRabotaSferaDeyat; $ERRORS[] = poruchRabotaSferaDeyatS; }
				}

				if(!isset($UserInfo1['poruchRabotaStatus']) || $UserInfo1['poruchRabotaStatus']=='') { $ERRORS[] = poruchRabotaStatus; $ERRORS[] = poruchRabotaStatusS; }
				if(!isset($UserInfo1['poruchRabotaMestoRaboty']) || $UserInfo1['poruchRabotaMestoRaboty']=='') $ERRORS[] = poruchRabotaMestoRaboty; 
				if(!isset($UserInfo1['poruchRabotaDolgnost']) || $UserInfo1['poruchRabotaDolgnost']=='') $ERRORS[] = poruchRabotaDolgnost; 
			
				$vowels = array("(", "_", ")", "-");

				$poruchRabotaTelefonRabochiy = str_replace($vowels, "", $UserInfo1['poruchRabotaTelefonRabochiy']);
				$poruchRabotaTelefonBuhgalter = str_replace($vowels, "", $UserInfo1['poruchRabotaTelefonBuhgalter']);


				if($UserInfo1['poruchRabotaTelefonRabochiy']!='' && strlen($poruchRabotaTelefonRabochiy) != 11) $ERRORStxt[] = poruchRabotaTelefonRabochiy;
				if($UserInfo1['poruchRabotaTelefonBuhgalter']!='' && strlen($poruchRabotaTelefonBuhgalter) != 11) $ERRORStxt[] = poruchRabotaTelefonBuhgalter;

				if(!isset($UserInfo1['poruchRabotaSrokKontrakta']) || $UserInfo1['poruchRabotaSrokKontrakta']=='') { $ERRORS[] = poruchRabotaSrokKontrakta; $ERRORS[] = poruchRabotaSrokKontraktaS; }


				$poruchTelefonRegistraciya = str_replace($vowels, "", $UserInfo1['poruchTelefonRegistraciya']);
				$poruchTelefonMestogitelstva = str_replace($vowels, "", $UserInfo1['poruchTelefonMestogitelstva']);
				$poruchTelefonMobilny = str_replace($vowels, "", $UserInfo1['poruchTelefonMobilny']);
				$poruchTelefonRabota = str_replace($vowels, "", $UserInfo1['poruchTelefonRabota']);

				if ($UserInfo1['poruchTelefonRegistraciya']=='') $ERRORS[] = poruchTelefonRegistraciya;
				elseif(strlen($poruchTelefonRegistraciya) != 11) $ERRORStxt[] = poruchTelefonRegistraciya;

				if ($UserInfo1['poruchTelefonMestogitelstva']=='') $ERRORS[] = poruchTelefonMestogitelstva;
				elseif(strlen($poruchTelefonMestogitelstva) != 11) $ERRORStxt[] = poruchTelefonMestogitelstva;

				if($UserInfo1['poruchTelefonMobilny']=='') $ERRORS[] = poruchTelefonMobilny;
				elseif(strlen($poruchTelefonMobilny) != 11) $ERRORStxt[] = poruchTelefonMobilny;

				if($UserInfo1['poruchTelefonRabota']=='') $ERRORS[] = poruchTelefonRabota;
				elseif(strlen($poruchTelefonRabota) != 11) $ERRORStxt[] = poruchTelefonRabota;

				if(!isset($UserInfo1['poruchEmailValue']) || $UserInfo1['poruchEmailValue']=='') $ERRORS[] = poruchEmailValue; 

				if(!isset($UserInfo1['poruchDohOsn']) || $UserInfo1['poruchDohOsn']=='') $ERRORS[] = poruchDohOsn; 
				if(!isset($UserInfo1['poruchDohDop']) || $UserInfo1['poruchDohDop']=='') $ERRORS[] = poruchDohDop; 
				if(!isset($UserInfo1['poruchDohAlim']) || $UserInfo1['poruchDohAlim']=='') $ERRORS[] = poruchDohAlim; 

				if(!isset($UserInfo1['poruchRashodKredits']) || $UserInfo1['poruchRashodKredits']=='') $ERRORS[] = poruchRashodKredits; 
				if(!isset($UserInfo1['poruchRashodStrahovanie']) || $UserInfo1['poruchRashodStrahovanie']=='') $ERRORS[] = poruchRashodStrahovanie; 
				if(!isset($UserInfo1['poruchRashodOther']) || $UserInfo1['poruchRashodOther']=='') $ERRORS[] = poruchRashodOther;
			}
			
			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)) {

				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo1[poruchuserRegistrRavnoMestogitel]=='совпадает с адресом регистрации') {
				  unset($UserInfo1[poruchnGitelOblast]);
 				  unset($UserInfo1[poruchnGitelRayon]);
 				  unset($UserInfo1[poruchnGitelCity]);
 				  unset($UserInfo1[poruchnGitelUlicaTip]);
 				  unset($UserInfo1[poruchnGitelUlica]);
 				  unset($UserInfo1[poruchnGitelDom]);
 				  unset($UserInfo1[poruchnGitelKorpus]);
 				  unset($UserInfo1[poruchnGitelKvartira]);
				}
				
				
				$GLOBALS['_SESSION']['card_design']['poruchFizLic'] = $UserInfo1;
				$GLOBALS['_SESSION']['card_design']['poruchUrLic'] = $UserInfo2;
				$GLOBALS['_SESSION']['card_design']['zalogImu'] = $UserInfo3;
				$GLOBALS['_SESSION']['card_design']['zalogTransport'] = $UserInfo4;
				$GLOBALS['_SESSION']['card_design']['zalogCenBumag'] = $UserInfo5;
				$GLOBALS['_SESSION']['card_design']['zalogNedv'] = $UserInfo6;
				$GLOBALS['_SESSION']['card_design']['garantDeposit'] = $UserInfo7;
				$GLOBALS['_SESSION']['card_design']['drFormyObesp'] = $UserInfo8;
					
				$this->setSessionParam('step6_OK',true);
				$this->redirect($this->action.'&step=7#content');
				return 1;
			}
		}

		$VID_TS = array(
			'легковой автомобиль' => 'легковой автомобиль',
			'грузовой автомобиль' => 'грузовой автомобиль',
			'автобус' => 'автобус',
			'мототранспорт' => 'мототранспорт',
			'яхта/катер' => 'яхта/катер',
			'водный мотоцикл' => 'водный мотоцикл'
		);
		
		$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
		$FAMS = array('да' => 'да','нет' => 'нет');

		$GRAGDANSTVO = array(
			  'гражданин Республики Беларусь' => 'гражданин Республики Беларусь',
			  'иностранный гражданин' => 'иностранный гражданин',
			  'лицо без гражданства' => 'лицо без гражданства'
		);

		$DOCUMENT_LICHNOST = array(
			  'паспорт гражданина Республики Беларусь' => 'паспорт гражданина Республики Беларусь',
			  'вид на жительство в Республике Беларусь' => 'вид на жительство в Республике Беларусь',
		);

		$ORG_FORMA = array(
			'Акционерные общества (ОАО, ЗАО)' => 'Акционерные общества (ОАО, ЗАО)',
			'Арендные предприятия' => 'Арендные предприятия',
			'Ассоциации, Союзы' => 'Ассоциации, Союзы',
			'Индивидуальные предприниматели' => 'Индивидуальные предприниматели',
			'Иностранные предприятия' => 'Иностранные предприятия',
			'Колхозы, Совхозы, Коллективные предприятия' => 'Колхозы, Совхозы, Коллективные предприятия',
			'Крестьянские (фермерские) хозяйства' => 'Крестьянские (фермерские) хозяйства',
			'Общества (ООО, ОДО)' => 'Общества (ООО, ОДО)',
			'Общественные и религиозные организации (объединения), Фонды' => 'Общественные и религиозные организации (объединения), Фонды',
			'Потребительские союзы, Общества, Кооперативы, ЖСПК' => 'Потребительские союзы, Общества, Кооперативы, ЖСПК',
			'Представительства, Филиалы' => 'Представительства, Филиалы',
			'Производственные объединения, Кооперативы' => 'Производственные объединения, Кооперативы',
			'Совместные общества и предприятия' => 'Совместные общества и предприятия',
			'Товарищества' => 'Товарищества',
			'Унитарные предприятия' => 'Унитарные предприятия',
			'Учреждения' => 'Учреждения',
		);

		$SFERA_DEYAT = array(
			'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
			'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
			'Гостиницы и рестораны' => 'Гостиницы и рестораны',
			'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
			'Здравоохранение' => 'Здравоохранение',
			'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
			'Легкая промышленность' => 'Легкая промышленность',
			'Научные исследования и разработки' => 'Научные исследования и разработки',
			'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
			'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
			'Образование' => 'Образование',
			'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
			'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
			'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
			'Прочие' => 'Прочие',
			'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
			'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
			'Страхование' => 'Страхование',
			'Строительство' => 'Строительство',
			'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
			'Торговля' => 'Торговля',
			'Транспорт' => 'Транспорт',
			'Транспорт воздушный' => 'Транспорт воздушный',
			'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
			'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
			'Финансовая деятельность' => 'Финансовая деятельность',
			'Электроэнергетика' => 'Электроэнергетика',
		);
	

		/*$CITYS = DB::select_array("
							  SELECT idkey, cat_left, cat_right, cat_level,parkey as p, name
							  FROM map 
							  WHERE type = 3
							  ORDER BY type DESC,name ASC");
		$where = ''; $or = '';
		foreach ($CITYS as $city){
			$where .= $or. '(cat_left<='.$city['cat_left'].' AND cat_right>='.$city['cat_left'].') ';
			$or = ' OR ';
		}
		$OBLASTI = DB::select_array("
				SELECT idkey, name, cat_left, cat_right	 
				FROM map 
				WHERE cat_level = 2 AND ($where) ORDER BY map.name");
		*/


		$SEMEYNOE = array(
			  'холост / не замужем' => 'холост / не замужем',
			  'женат / замужем' => 'женат / замужем',
			  'разведен / разведена' => 'разведен / разведена',
			  'вдовец / вдова' => 'вдовец / вдова'
		);

		$STATUS_SEMYI = array(
			  'многодетная семья' => 'многодетная семья',
			  'семья, имеющая 1-2 несовершеннолетних детей' => 'семья, имеющая 1-2 несовершеннолетних детей',
			  'семья, не имеющая несовершеннолетних детей' => 'семья, не имеющая несовершеннолетних детей',
			  'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей' => 'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей',
			  'одинокий гражданин' => 'одинокий гражданин',
		);

		$RABOTA = array(
			  'работа по контракту' => 'работа по контракту',
			  'работа по трудовому договору' => 'работа по трудовому договору',
			  'работа по гражданско-правовому договору' => 'работа по гражданско-правовому договору',
			  'предпринимательская деятельность' => 'предпринимательская деятельность',
			  'не работающий' => 'не работающий',
			  'иное' => 'иное',
		);

		$STATUS_RABOTA = array(
			'учредитель/соучредитель' => 'учредитель/соучредитель',
			'руководитель' => 'руководитель',
			'госслужащий' => 'госслужащий',
			'военнослужащий' => 'военнослужащий',
			'служащий/специалист' => 'служащий/специалист',
			'рабочий' => 'рабочий',
			'пенсионер' => 'пенсионер',
			'студент/учащийся' => 'студент/учащийся',
			'учитель/преподаватель' => 'учитель/преподаватель',
			'врач' => 'врач',
			'научный работник/профессорский состав' => 'научный работник/профессорский состав',
			'индивидуальный предприниматель' => 'индивидуальный предприниматель',
			'ремесленник' => 'ремесленник',
			'частный нотариус/адвокат' => 'частный нотариус/адвокат',
			'фермер/крестьянин' => 'фермер/крестьянин',
			'священнослужитель' => 'священнослужитель',
			'деятель искусства/культуры' => 'деятель искусства/культуры',
			'спортсмен' => 'спортсмен',
			'не работающий' => 'не работающий',
		);


		$STAG_RABOTY = array(
			'менее 6 месяцев' => 'менее 6 месяцев',
			'от 6 месяцев до 1 года' => 'от 6 месяцев до 1 года',
			'от 1 года до 3 лет' => 'от 1 года до 3 лет',
			'от 3 до 5 лет' => 'от 3 до 5 лет',
			'от 5 до 10 лет' => 'от 5 до 10 лет',
			'более 10 лет' => 'более 10 лет',
		);

		$TIP_ULICY = array(
			'Нет улицы' => 'Нет улицы',
			'Бульвар' => 'Бульвар',
			'Вал' => 'Вал',
			'Военная часть' => 'Военная часть',
			'Военный городок' => 'Военный городок',
			'Квартал' => 'Квартал',
			'Кольцо' => 'Кольцо',
			'Микрорайон' => 'Микрорайон',
			'Набережная' => 'Набережная',
			'Парк' => 'Парк',
			'Переулок' => 'Переулок',
			'Площадь' => 'Площадь',
			'Поселок' => 'Поселок',
			'Проезд' => 'Проезд',
			'Проспект' => 'Проспект',
			'Станция' => 'Станция',
			'Территория' => 'Территория',
			'Тракт' => 'Тракт',
			'Тупик' => 'Тупик',
			'Улица' => 'Улица',
			'Урочище' => 'Урочище',
			'Шоссе' => 'Шоссе',
		);


		$OTNOSH_K_KREDITOPOL = array(
			'супруг/супруга' => 'супруг/супруга',
			'друг/подруга' => 'друг/подруга',
			'знакомый/знакомая' => 'знакомый/знакомая',
			'коллега/сослуживец' => 'коллега/сослуживец',
			'близкий родственник' => 'близкий родственник',
			'родственник' => 'родственник',
		);

		$DATA = array(
			'VID_TS' => $VID_TS,
			'POLS' => $POLS,
			'FAMS' => $FAMS,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'ORG_FORMA' => $ORG_FORMA,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'SEMEYNOE' => $SEMEYNOE,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'OTNOSH_K_KREDITOPOL' => $OTNOSH_K_KREDITOPOL,
			'TIP_ULICY' => $TIP_ULICY,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'UserInfo1' => $UserInfo1,
			'UserInfo2' => $UserInfo2,
			'UserInfo3' => $UserInfo3,
			'UserInfo4' => $UserInfo4,
			'UserInfo5' => $UserInfo5,
			'UserInfo6' => $UserInfo6,
			'UserInfo7' => $UserInfo7,
			'UserInfo8' => $UserInfo8,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
		
		$this->viewStep6($DATA);
	}

	function doStep7(){
		//echo '<pre>';
		//print_r ($GLOBALS['_SESSION']['card_design']);
		//echo '</pre>'; 
		
		// проверям был ли шаг поручительства
		/*if ($GLOBALS[_SESSION][card_design][CONSTANTS][poruchFizLic]!='') {
			//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
			if(!$this->getSessionParam('step1_OK')
			|| !$this->getSessionParam('step2_OK')
			|| !$this->getSessionParam('step4_OK')
			|| !$this->getSessionParam('step5_OK')
			|| !$this->getSessionParam('step6_OK')
			){
				echo 'Не выполнен шаг 1 или 2 или 4 или 5 или 6';
				$this->redirect($this->action.'');
				return 1;
			}

			if($this->getParam('prev')){
				$this->setSessionParam('step7_OK',false);
				$this->redirect($this->action.'&step=6#content');
				return 1;
			}
		} else {
			//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
			if(!$this->getSessionParam('step1_OK')
			|| !$this->getSessionParam('step2_OK')
			|| !$this->getSessionParam('step4_OK')
			|| !$this->getSessionParam('step5_OK')
			){
				echo 'Не выполнен шаг 1 или 2 или 4 или 5';
				$this->redirect($this->action.'');
				return 1;
			}

			if($this->getParam('prev')){
				$this->setSessionParam('step7_OK',false);
				$this->redirect($this->action.'&step=5#content');
				return 1;
			}			
		}*/


		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5';
			$this->redirect($this->action.'');
			return 1;
		}

		if (($GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 1 || $GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 2) && !$this->getSessionParam('step6_OK')) {
			echo 'Не выполнен шаг 6';
			$this->redirect($this->action.'');
			return 1;
		}

		if($this->getParam('prev')){
		   $this->setSessionParam('step7_OK',false);
		   $this->redirect($this->action.'&step=6#content');
		   return 1;
		}
		
		$FAMS = array('да' => 'да','нет' => 'нет');

		$KREDIT_CEL = array(
			'потребительские нужды' => 'потребительские нужды',
			'финансирование недвижимости' => 'финансирование недвижимости',
			'приобретение автомобиля' => 'приобретение автомобиля',
			'овердрафт' => 'овердрафт',
			'иное' => 'иное',
		);
		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);
		
		$VAL = DB::select_column("SELECT val_name_ru_many FROM kurs_valuta WHERE val_name_ru_many!='' AND val_group IN (1,5) ORDER BY val_priority");
		foreach ($VAL as $k=>$v)  $VALUTY[$v] = $v;
		
		$NARUSHENIYA_OPLATY  = array(
			'не допускал' => 'не допускал',
			'допускал наличие просроченной задолженности до 3 раз в течение последних 12 месяцев' => 'допускал наличие просроченной задолженности до 3 раз в течение последних 12 месяцев',
			'допускал наличие просроченной задолженности более 3 раз в течение последних 12 месяцев' => 'допускал наличие просроченной задолженности более 3 раз в течение последних 12 месяцев',
			'погашается поручителями (родственниками)' => 'погашается поручителями (родственниками)',
			'погашается по решению суда' => 'погашается по решению суда',
		);
		
		$UserInfo =  $this->getParam('userInfo');
		
		if ($this->getSessionParam('step7_OK') || $this->getSessionParam('step7_OK')=='')  $UserInfo =  $this->getSessionParam('kredity');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('next')){
			// Проверяем правильность заполнения полей
			$ERRORS = array();
			$ERRORStxt = array();

			if(!isset($UserInfo['dolgKredit']) || $UserInfo['dolgKredit']=='') { $ERRORS[] = dolgKredit; $ERRORS[] = dolgKreditS; }
			
			if($UserInfo['dolgKredit']=='да') {
				if(!isset($UserInfo['valutaKredita1']) || $UserInfo['valutaKredita1']=='') { $ERRORS[] = valutaKredita1; $ERRORS[] = valutaKredita1S; }
				if($UserInfo['ostatokSummaBank1']=='')  $ERRORS[] = ostatokSummaBank1;
				if($UserInfo['ostatokPlategBank1']=='')  $ERRORS[] = ostatokPlategBank1;
					if(!isset($UserInfo['kreditNarusheniyaOplaty1']) || $UserInfo['kreditNarusheniyaOplaty1']=='') { $ERRORS[] = kreditNarusheniyaOplaty1; $ERRORS[] = kreditNarusheniyaOplaty1S; }
			
			
				if($UserInfo['ostatokSummaBank2']!='') {
					if(!isset($UserInfo['valutaKredita2']) || $UserInfo['valutaKredita2']=='') { $ERRORS[] = valutaKredita2; $ERRORS[] = valutaKredita2S; }
					if($UserInfo['ostatokSummaBank2']=='')  $ERRORS[] = ostatokSummaBank2;
					if($UserInfo['ostatokPlategBank2']=='')  $ERRORS[] = ostatokPlategBank2;
					if(!isset($UserInfo['kreditNarusheniyaOplaty2']) || $UserInfo['kreditNarusheniyaOplaty2']=='') { $ERRORS[] = kreditNarusheniyaOplaty2; $ERRORS[] = kreditNarusheniyaOplaty2S; }
				}
			
				if($UserInfo['ostatokSummaBank3']!='') {
					if(!isset($UserInfo['valutaKredita3']) || $UserInfo['valutaKredita3']=='') { $ERRORS[] = valutaKredita3; $ERRORS[] = valutaKredita3S; }
					if($UserInfo['ostatokSummaBank3']=='')  $ERRORS[] = ostatokSummaBank3;
					if($UserInfo['ostatokPlategBank3']=='')  $ERRORS[] = ostatokPlategBank3;
					if(!isset($UserInfo['kreditNarusheniyaOplaty3']) || $UserInfo['kreditNarusheniyaOplaty3']=='') { $ERRORS[] = kreditNarusheniyaOplaty3; $ERRORS[] = kreditNarusheniyaOplaty3S; }
				}
			
				if($UserInfo['ostatokSummaBank4']!='') {
					if(!isset($UserInfo['valutaKredita4']) || $UserInfo['valutaKredita4']=='') { $ERRORS[] = valutaKredita4; $ERRORS[] = valutaKredita4S; }
					if($UserInfo['ostatokSummaBank4']=='')  $ERRORS[] = ostatokSummaBank4;
					if($UserInfo['ostatokPlategBank4']=='')  $ERRORS[] = ostatokPlategBank4;
					if(!isset($UserInfo['kreditNarusheniyaOplaty4']) || $UserInfo['kreditNarusheniyaOplaty4']=='') { $ERRORS[] = kreditNarusheniyaOplaty4; $ERRORS[] = kreditNarusheniyaOplaty4S; }
				}
			
				if($UserInfo['ostatokSummaBank5']!='') {
					if(!isset($UserInfo['valutaKredita5']) || $UserInfo['valutaKredita5']=='') { $ERRORS[] = valutaKredita5; $ERRORS[] = valutaKredita5S; }
					if($UserInfo['ostatokSummaBank5']=='')  $ERRORS[] = ostatokSummaBank5;
					if($UserInfo['ostatokPlategBank5']=='')  $ERRORS[] = ostatokPlategBank5;
					if(!isset($UserInfo['kreditNarusheniyaOplaty5']) || $UserInfo['kreditNarusheniyaOplaty5']=='') { $ERRORS[] = kreditNarusheniyaOplaty5; $ERRORS[] = kreditNarusheniyaOplaty5S; }
				}
			
			
			} 
			
			//if(!isset($UserInfo['kreditNarusheniyaOplaty']) || $UserInfo['kreditNarusheniyaOplaty']=='') { $ERRORS[] = kreditNarusheniyaOplaty; $ERRORS[] = kreditNarusheniyaOplatyS; }
			
			
			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				$GLOBALS['_SESSION']['card_design']['kredity'] = $UserInfo;
				$this->setSessionParam('step7_OK',true);
				$this->redirect($this->action.'&step=8#content');
				return 1;
			}

		}

		$DATA = array(
			'UserInfo' => $UserInfo,
			'KREDIT_CEL' => $KREDIT_CEL,
			'FAMS' => $FAMS,
			'VALUTY' => $VALUTY,
			'BANKI' => $BANKI,
			'NARUSHENIYA_OPLATY' => $NARUSHENIYA_OPLATY,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
			
		$this->viewStep7($DATA);

	}

	function doStep8(){
		/*
		echo '<pre>';
		print_r ($GLOBALS['_SESSION']['card_design']);
		echo '</pre>'; 	
		*/
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		|| !$this->getSessionParam('step7_OK')
		){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5 или 7';
			$this->redirect($this->action.'');
			return 1;
		}

		if (($GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 1 || $GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 2) && !$this->getSessionParam('step6_OK')) {
			echo 'Не выполнен шаг 6';
			$this->redirect($this->action.'');
			return 1;
		}		

		if($this->getParam('prev1')){
			$this->setSessionParam('step1_OK',false);
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=1#content');
			return 1;
		}
		if($this->getParam('prev2')){
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}
		
		if($this->getParam('prev4')){
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}
		
		if($this->getParam('prev5')){
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=5#content');
			return 1;
		}
		
		if($this->getParam('prev7')){
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=7#content');
			return 1;
		}
		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);


		$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next')){
			$ERRORS = array();
			$ERRORStxt = array();

			
			 if($UserInfo['resultat']=='') $ERRORS[] = 'Вы не указали, каким образом вас уведомить о принятом решении по заявке на кредит';
			// Переходим к следующему шагу если все ОК
			if(!$ERRORS){

				foreach ($GLOBALS[_SESSION][card_design][anketa] as $k=>$v)
					$GLOBALS[_SESSION][card_design][anketa][$k] = htmlspecialchars_decode($GLOBALS[_SESSION][card_design][anketa][$k]);
				
				
				$GLOBALS['_SESSION']['card_design']['result'] = $UserInfo;
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['ANKETA_END'] = date("Y.m.d H:i");
				if(isset($GLOBALS['_SESSION']['card_design']['CONSTANTS']['neustoika'])) {
					unset($GLOBALS['_SESSION']['card_design']['CONSTANTS']['neustoika']);
					$GLOBALS['_SESSION']['card_design']['CONSTANTS']['neustoykaSelect'] = 'неустойка';
				}
				
				$this->setSessionParam('step8_OK',true);
					

				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchFizLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchFizLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchUrLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchUrLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogImu]) !== true) unset($GLOBALS[_SESSION][card_design][zalogImu]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogTransport]) !== true) unset($GLOBALS[_SESSION][card_design][zalogTransport]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogCenBumag]) !== true) unset($GLOBALS[_SESSION][card_design][zalogCenBumag]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogNedv]) !== true) unset($GLOBALS[_SESSION][card_design][zalogNedv]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][garantDeposit]) !== true) unset($GLOBALS[_SESSION][card_design][garantDeposit]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][drFormyObesp]) !== true) unset($GLOBALS[_SESSION][card_design][drFormyObesp]);

				// для софтклуба парсим на тип населенного пункта и название
				if(isset($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan])) {
					$arr1 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityType] = $arr1[tip];
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityName] = $arr1[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan])) {
					$arr2 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityType] = $arr2[tip];
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityName] = $arr2[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][anketa][suprugCitSpan])) {
					$arr2 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][suprugCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][suprugCityType] = $arr2[tip];
					$GLOBALS[_SESSION][card_design][anketa][suprugCityName] = $arr2[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][anketa2][dopinfoDomCitSpan])) {
					$arr2 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa2][dopinfoDomCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa2][dopinfoDomCityType] = $arr2[tip];
					$GLOBALS[_SESSION][card_design][anketa2][dopinfoDomCityName] = $arr2[name];
				}

				if(isset($GLOBALS[_SESSION][card_design][poruchFizLic][poruchnPropiskaCitSpan])) {
					$arr3 = $this->parseCityName($GLOBALS[_SESSION][card_design][poruchFizLic][poruchnPropiskaCitSpan]);
					$GLOBALS[_SESSION][card_design][poruchFizLic][poruchnPropiskaCityType] = $arr3[tip];
					$GLOBALS[_SESSION][card_design][poruchFizLic][poruchnPropiskaCityName] = $arr3[name];
				}

				if(isset($GLOBALS[_SESSION][card_design][poruchFizLic][poruchnGitelCitSpan])) {
					$arr4 = $this->parseCityName($GLOBALS[_SESSION][card_design][poruchFizLic][poruchnGitelCitSpan]);
					$GLOBALS[_SESSION][card_design][poruchFizLic][poruchnGitelCityType] = $arr4[tip];
					$GLOBALS[_SESSION][card_design][poruchFizLic][poruchnGitelCityName] = $arr4[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][zalogImu][obespechZalogImuCitSpan])) {
					$arr4 = $this->parseCityName($GLOBALS[_SESSION][card_design][zalogImu][obespechZalogImuCitSpan]);
					$GLOBALS[_SESSION][card_design][zalogImu][obespechZalogImuCityType] = $arr4[tip];
					$GLOBALS[_SESSION][card_design][zalogImu][obespechZalogImuCityName] = $arr4[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][zalogNedv][obespechZalogNedvCitSpan])) {
					$arr4 = $this->parseCityName($GLOBALS[_SESSION][card_design][zalogNedv][obespechZalogNedvCitSpan]);
					$GLOBALS[_SESSION][card_design][zalogNedv][obespechZalogNedvCityType] = $arr4[tip];
					$GLOBALS[_SESSION][card_design][zalogNedv][obespechZalogNedvCityName] = $arr4[name];
				}
				// закончили парсить
				//echo '<pre>';
				//print_r ($GLOBALS['_SESSION']['card_design']);
				//echo '</pre>';				
				//exit();	
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == 5) $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = '5 и более';
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == 7) $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = '7 и более';
				
				$this->doPDF($GLOBALS['_SESSION']['card_design']);
				



				
				/* в номерах телефонов оставляем только цифры для XML */
				/* телефоны  anketa */
				$anketaTel = array(		userTelefonMestogitelstva,
										userTelefonRabota,
										userRoditeliNesovDeteySuprugTelDom,
										userRoditeliNesovDeteySuprugTelRab,
										userTelefonMobilny,
										userRoditeliNesovDeteySuprugTelMobil);

				// телефоны  anketa2
				$anketa2Tel =  array(	userRabotaTelefonBuhgalter);

				// телефоны  poruchitel 
				$poruchitelTel = array(poruchRabotaTelefonRabochiy,
										poruchRabotaTelefonBuhgalter,
										poruchTelefonRegistraciya,
										poruchTelefonMestogitelstva,
										poruchTelefonRabota,
										poruchTelefonMobilny);
				$vowels = array("(", "_", ")", "-");

				foreach ($anketaTel as $v) {
					$tempVar ='';
					$tempVar = str_replace($vowels, "", $GLOBALS['_SESSION']['card_design']['anketa'][$v]);
					$GLOBALS['_SESSION']['card_design']['anketa'][$v] = substr($tempVar,2,strlen($tempVar));
				}	

				foreach ($anketa2Tel as $v) {
					$tempVar ='';
					$tempVar = str_replace($vowels, "", $GLOBALS['_SESSION']['card_design']['anketa2'][$v]);
					$GLOBALS['_SESSION']['card_design']['anketa2'][$v] = substr($tempVar,2,strlen($tempVar));
				}	
				
				foreach ($poruchitelTel as $v) {
					$tempVar ='';
					$tempVar = str_replace($vowels, "", $GLOBALS['_SESSION']['card_design']['poruchFizLic'][$v]);
					$GLOBALS['_SESSION']['card_design']['poruchFizLic'][$v] = substr($tempVar,2,strlen($tempVar));
				}

				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == 'нет') $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = '0';
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == '5 и более') $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = 5;
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == '7 и более') $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = 7;

				$massives = array (	CONSTANTS,
									kredit,
									anketa,
									anketa2,
									poruchFizLic,
									poruchUrLic,
									zalogImu,
									zalogTransport,
									zalogCenBumag,
									zalogNedv,
									garantDeposit,
									kredity);
				// убираем дефисы  для XML 
				foreach ($massives as $v) {
					foreach($GLOBALS['_SESSION']['card_design'][$v] as $kk=>$vv) {
						if ($vv == '-') {
							$GLOBALS['_SESSION']['card_design'][$v][$kk] = '';
						}
					}
				}
				//F::debug($GLOBALS['_SESSION']['card_design']);
				// для Минска возвращаем код СОАТО 5000000000, независимо от района
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'], '500000000') !== false ) 
					$GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['suprugCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['anketa']['suprugCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa2']['dopinfoDomCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['anketa2']['dopinfoDomCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['poruchFizLic']['poruchnPropiskaCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['poruchFizLic']['poruchnPropiskaCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['poruchFizLic']['poruchnGitelCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['poruchFizLic']['poruchnGitelCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['zalogImu']['obespechZalogImuCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['zalogImu']['obespechZalogImuCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['zalogNedv']['obespechZalogNedvCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['zalogNedv']['obespechZalogNedvCity'] = 5000000000;

				unset($GLOBALS['_SESSION']['card_design']['kredit']['srednemesDohod']);
				
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka'] = str_replace('.', ',', $GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka']);

				$this->doXML($GLOBALS['_SESSION']['card_design']);
				
				$this->redirect($this->action.'&step=9#content');
				return 1;
			}
		}

		if ($this->getSessionParam('step8_OK') || $this->getSessionParam('step8_OK')=='')  $UserInfo =  $GLOBALS['_SESSION']['card_design'];
		
		$DATA = array(
			'UserInfo' => $UserInfo,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
		
		$this->viewStep8($DATA);

	}

	function doStep9(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		|| !$this->getSessionParam('step7_OK')
		|| !$this->getSessionParam('step8_OK')
		){
			echo 'Не выполнен шаг 1, или 2, или 4, или 5, или 7, или 8';
			$this->redirect($this->action.'');
			return 1;
		}
		
		if (($GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 1 || $GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 2) && !$this->getSessionParam('step6_OK')) {
			echo 'Не выполнен шаг 6';
			$this->redirect($this->action.'');
			return 1;
		}


		$UserInfo =  $GLOBALS['_SESSION']['card_design'];

		if ($UserInfo[anketa][nKreditUchregd]=='по месту регистрации')   	$F_fil = F::rus2translit($UserInfo[anketa][nPropiskaPodrAddrInput]);
		if ($UserInfo[anketa][nKreditUchregd]=='по месту жительства')	    $F_fil = F::rus2translit($UserInfo[anketa][nGitelPodrAddrInput]);
		if ($UserInfo[anketa][nKreditUchregd]=='в ином учреждении Банка')   $F_fil = F::rus2translit($UserInfo[anketa][userKreditOther]);
		
		$F_surname = F::rus2translit($UserInfo[anketa][userFamiliya].'_'.$UserInfo[anketa][userImya][0].$UserInfo[anketa][userOtchestvo][0]);
		$F_name = HOME_URL.'mod/kredit_bez_poruchiteley/site/XML/'.date("Y.m.d H.i").'-'.substr($F_fil,strpos($F_fil, "№")+1,3).'-'.$F_surname.'.pdf';

		$DATA = array(
			'UserInfo' => $UserInfo,
			'way' => $F_name,
		);
		$this->viewStep9($DATA);
		//вернуть строку
		unset($GLOBALS['_SESSION']['card_design']);
	}

	public function viewStep1($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step1.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep1_overdraft($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step1_overdraft.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep2($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step2.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep2_overdraft($DATA){
		$dir = dirname(__FILE__).'/';

		if($DATA["CONSTANTS"]["srokKreditaMonth"] == 24) {
			TPL::LoadTplFile('step2_overdraft_24.htm','step',$dir);	//	F::debug($Mnow);	
		} else {
			TPL::LoadTplFile('step2_overdraft.htm','step',$dir);	//	F::debug($Mnow);	
		}

		TPL::PrnTpl('step',$DATA);
	}

	/*
	public function viewStep3($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step3.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}
	*/

	public function viewStep4($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step4.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep4_mini($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step4_mini.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep4_overdraft($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step4_overdraft.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep5($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step5.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep5_mini($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step5_mini.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep6($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step6.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep7($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step7.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep7_mini($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step7_mini.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep8($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step8.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep8_mini($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step8_mini.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep8_overdraft($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step8_overdraft.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep9($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step9.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}

	public function viewStep9_overdraft($DATA){
		$dir = dirname(__FILE__).'/';
		TPL::LoadTplFile('step9_overdraft.htm','step',$dir);	//	F::debug($Mnow);
		TPL::PrnTpl('step',$DATA);
	}


	public function getParam($name){
		return P::get($name);
	}

	public function getSessionParam($name){
		return $GLOBALS['_SESSION']['card_design'][$name];
	}

	// парсим если втречается точка в имени - берем всё от точки и дальше, если нет, то от первого пробела и дальше
	public function parseCityName($textCity){
		if( strpos($textCity,'.') !== false) { 
			$str[tip] = substr($textCity, 0, strpos($textCity, '.')+1);
			$str[name] = substr($textCity, strpos($textCity, '.')+1, strlen($textCity));
		} else {  
			$str[tip] = substr($textCity, 0, strpos($textCity, ' '));
			$str[name] = substr($textCity, strpos($textCity, ' ')+1, strlen($textCity));
		}
		return $str;
	}

	public function setSessionParam($name, $var){ $GLOBALS['_SESSION']['card_design'][$name] = $var; }

	public function delSessionParam($name){ unset($GLOBALS['_SESSION']['card_design'][$name]); }

	public function cleanAllSessionParams(){ unset($GLOBALS['_SESSION']['card_design']); }

	public function doPDF ($MASS) {
		include_once ($_SERVER['DOCUMENT_ROOT']."/mod/kredit_bez_poruchiteley/site/doPDF.php");
	}

	public function doPDF_mini ($MASS) {
		include_once ($_SERVER['DOCUMENT_ROOT']."/mod/kredit_bez_poruchiteley/site/doPDF_mini.php");
	}

	public function doPDF_overdraft ($MASS) {
		include_once ($_SERVER['DOCUMENT_ROOT']."/mod/kredit_bez_poruchiteley/site/doPDF_overdraft.php");
	}
	
	public function doXML ($MASS) {
		if ($MASS[anketa][nKreditUchregd]=='по месту регистрации') {	
			$F_fil = F::rus2translit($MASS[anketa][nPropiskaPodrAddrInput]);
			$MASS[anketa][kreditFilialName] = substr($MASS[anketa][nPropiskaPodrAddrInput],0,strpos($MASS[anketa][nPropiskaPodrAddrInput], "№")+4); 
		}
		
		if ($MASS[anketa][nKreditUchregd]=='по месту жительства') {
			$F_fil = F::rus2translit($MASS[anketa][nGitelPodrAddrInput]);
			$MASS[anketa][kreditFilialName] = substr($MASS[anketa][nGitelPodrAddrInput],0,strpos($MASS[anketa][nGitelPodrAddrInput], "№")+4); 
		}
		
		if ($MASS[anketa][nKreditUchregd]=='в ином учреждении Банка') {
			$F_fil = F::rus2translit($MASS[anketa][userKreditOther]);
			$MASS[anketa][kreditFilialName] = substr($MASS[anketa][userKreditOther],0,strpos($MASS[anketa][userKreditOther], "№")+4); 
		}

		if (isset($MASS[anketa][userOverdraftFilial])) {
			$F_fil = F::rus2translit($MASS[anketa][userOverdraftFilial]);
			$MASS[anketa][kreditFilialName] = substr($MASS[anketa][userOverdraftFilial],0,strpos($MASS[anketa][userOverdraftFilial], "№")+4);
		}		

		//echo $F_fil;
		$F_surname = F::rus2translit($MASS[anketa][userFamiliya].'_'.$MASS[anketa][userImya][0].$MASS[anketa][userOtchestvo][0]);
		$F_name = 'mod/kredit_bez_poruchiteley/site/XML/'.date("Y.m.d H.i").'-'.substr($F_fil,strpos($F_fil, "№")+1,3).'-'.$F_surname;
		$F_name_test = 'mod/kredit_bez_poruchiteley/site/X/'.date("Y.m.d H.i").'-'.substr($F_fil,strpos($F_fil, "№")+1,3).'-'.$F_surname;
		
		$fp = fopen($F_name.'.xml', 'w');
		$fp_test = fopen($F_name_test.'.xml', 'w');
		$SAVEDATA['create_date_time'] = date('Y-m-d H:i:s');
		$SAVEDATA['IP'] = F::getRemoteUserIP(false);
		$SAVEDATA['BROWSER'] = $_SERVER['HTTP_USER_AGENT'];
	
		$MASS[sess][sessionID] = $MASS[sessionID];
		unset($MASS[sessionID]);
		
		//**************************************************************************
		//****************************      XML       ******************************
		//**************************************************************************
		$text = '<?xml version="1.0" encoding="cp1251"?>'."\n";
		$text .= '<content>'."\n";


		foreach ($SAVEDATA as $k=>$v)  $text .= '<'.$k.'>'.$v.'</'.$k.'>'."\n";
		
		foreach ($MASS as $key=>$value) {
			$text .= '<'.$key.'>'."\n"; 
			
			foreach ($value as $k=>$v) {
			//echo $k.'__'.$v.'<br>';
				$text .= '<'.$k.'>'.$v.'</'.$k.'>'."\n";
			}
			$text .= '</'.$key.'>'."\n";
		}
		
		$text .= '</content>'."\n";
		fwrite($fp, $text);
		fclose($fp);

		fwrite($fp_test, $text);
		fclose($fp_test);

	}

	public function redirect($redirectURL, $debug = false){
		echo '<br><br><a href="'.$redirectURL.'">REDIRECT LINK</a>';
		if(!$debug) header("Location: ".$redirectURL); exit();
	}



	function doStep4_mini(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK')){
			echo 'Не выполнен шаг 1 или 2 или 3';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step4_OK') || $this->getSessionParam('step4_OK')=='')  $UserInfo =  $this->getSessionParam('anketa');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('prev')){
			$this->setSessionParam('step4_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}
		if($this->getParam('next')){
		//	$ERRORStxt[] = userImy;	
		// Проверяем правильность заполнения полей

			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
			/*
			echo '<pre>';
			print_r ($UserInfo);
			echo '</pre>';			
			*/

			$UserInfo['userFamiliya'] = trim($UserInfo['userFamiliya']);
			$UserInfo['userImya'] = trim($UserInfo['userImya']);
			$UserInfo['userOtchestvo'] = trim($UserInfo['userOtchestvo']);

			// валидность полей - проверяем заполнены ли и соответствие регулярке
			if ($UserInfo['userFamiliya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userFamiliya']) || strlen($UserInfo['userFamiliya'])<2)) $ERRORStxt[] = userFamiliya;			
			if ($UserInfo['userImya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userImya']) || strlen($UserInfo['userImya'])<2)) $ERRORStxt[] = userImya;			
			if ($UserInfo['userOtchestvo']!='' && (!preg_match('/^[а-яА-ЯЁё]+$/', $UserInfo['userOtchestvo']) || strlen($UserInfo['userOtchestvo'])<2)) $ERRORStxt[] = userOtchestvo;			


			if ($UserInfo[userPasportSeriyaNomer]!='' && 
				(strlen($UserInfo[userPasportSeriyaNomer])!=9 ||
				!preg_match('/^[a-zA-Z0-9]+$/', $UserInfo[userPasportSeriyaNomer]) )  )
			$ERRORStxt[] = userPasportSeriyaNomer;	 	


			if ($UserInfo['userPasportLichnyNomer']=='') {
				$ERRORS[] = userPasportLichnyNomer;
			} else {
				$UserInfo['userPasportLichnyNomer'] = F::toupper($UserInfo['userPasportLichnyNomer']);
				if (strlen($UserInfo[userPasportLichnyNomer])!=14) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],0,7))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],7,1))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],8,3))) $ERRORStxt[] = userPasportLichnyNomer;
				
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],11,2))) $ERRORStxt[] = userPasportLichnyNomer;
				//if (substr($UserInfo[userPasportLichnyNomer],11,2) != 'PB') $ERRORStxt[] = userPasportLichnyNomer;
				
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],13,1))) $ERRORStxt[] = userPasportLichnyNomer;
				$masskontrol = array(
					'A'=>10, 'B'=>11, 'C'=>12, 'D'=>13, 'E'=>14, 'F'=>15, 'G'=>16, 'H'=>17, 'I'=>18, 'J'=>19, 'K'=>20, 'L'=>21, 'M'=>22, 
					'N'=>23, 'O'=>24, 'P'=>25, 'Q'=>26, 'R'=>27, 'S'=>28, 'T'=>29, 'U'=>30, 'V'=>31, 'W'=>32, 'X'=>33, 'Y'=>34, 'Z'=>35	);
				$kontrolNumber=7*$UserInfo[userPasportLichnyNomer]{0} + 3*$UserInfo[userPasportLichnyNomer]{1} + 1*$UserInfo[userPasportLichnyNomer]{2} + 
								7*$UserInfo[userPasportLichnyNomer]{3} + 3*$UserInfo[userPasportLichnyNomer]{4} + 1*$UserInfo[userPasportLichnyNomer]{5} + 		
								7*$UserInfo[userPasportLichnyNomer]{6} + 3*$masskontrol[$UserInfo[userPasportLichnyNomer]{7}] + 1*$UserInfo[userPasportLichnyNomer]{8} + 	
								7*$UserInfo[userPasportLichnyNomer]{9} + 3*$UserInfo[userPasportLichnyNomer]{10} + 1*$masskontrol[$UserInfo[userPasportLichnyNomer]{11}] + 	
								7*$masskontrol[$UserInfo[userPasportLichnyNomer]{12}];
				$kontrolNumber = substr($kontrolNumber,-1);
				if (substr($UserInfo[userPasportLichnyNomer],13,1) != $kontrolNumber) $ERRORStxt[] = userPasportLichnyNomer;
			}

			if(!isset($UserInfo[userBirth]) || $UserInfo[userBirth] == '') {
				$ERRORS[] = userBirth;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo[userBirth]) && $UserInfo[userBirth]!='') $ERRORStxt[] = userBirth;	
				$date_format = substr($UserInfo[userBirth],6,4).substr($UserInfo[userBirth],3,2).substr($UserInfo[userBirth],0,2);
				$temp_date = date ("Ymd", mktime(0, 0, 0, date("m"), date("d")+1, date("Y")-18));   // сегодня минус 18 лет
				if(checkdate(substr($UserInfo[userBirth],3,2), substr($UserInfo[userBirth],0,2), substr($UserInfo[userBirth],6,4)) != true) $ERRORStxt[] = userBirth;	
				if ($date_format>$temp_date) $ERRORStxt[] = userBirth;	
			}
			
			
			if(!isset($UserInfo[userPasportDataVidachy]) || $UserInfo[userPasportDataVidachy] == '') {
				$ERRORS[] = userPasportDataVidachy;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userPasportDataVidachy']) && $UserInfo['userPasportDataVidachy']!='') $ERRORStxt[] = userPasportDataVidachy;
				if(checkdate(substr($UserInfo[userPasportDataVidachy],3,2), substr($UserInfo[userPasportDataVidachy],0,2), substr($UserInfo[userPasportDataVidachy],6,4)) != true) $ERRORStxt[] = userPasportDataVidachy;	
			}


	
			if ($UserInfo['userSemeynoePologenie'] === 'женат / замужем') {
				// удаляем пробелы в начале и конце, а так же двойные пробелы в середине
				$UserInfo[userRoditeliNesovDeteySuprugFIO] = trim($UserInfo[userRoditeliNesovDeteySuprugFIO]);
				$UserInfo[userRoditeliNesovDeteySuprugFIO] = preg_replace("/ +/", " ", $UserInfo[userRoditeliNesovDeteySuprugFIO]);
				if(!isset($UserInfo[userRoditeliNesovDeteySuprugFIO]) || $UserInfo[userRoditeliNesovDeteySuprugFIO] == '') 
					$ERRORS[] = userRoditeliNesovDeteySuprugFIO;
				else {
					// должно быть 2 пробела
					$numSpaces = substr_count($UserInfo[userRoditeliNesovDeteySuprugFIO], ' ');
					if($numSpaces != 2) $ERRORStxt[] = userRoditeliNesovDeteySuprugFIO;	
				}


				if(!isset($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya]) || $UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya] == '') {
					$ERRORS[] = userRoditeliNesovDeteySuprugDataRogdeniya;
				} else {
					if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userRoditeliNesovDeteySuprugDataRogdeniya']) && $UserInfo['userRoditeliNesovDeteySuprugDataRogdeniya']!='') $ERRORStxt[] = userRoditeliNesovDeteySuprugDataRogdeniya;
					if(checkdate(substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],3,2), substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],0,2), substr($UserInfo[userRoditeliNesovDeteySuprugDataRogdeniya],6,4)) != true) $ERRORStxt[] = userRoditeliNesovDeteySuprugDataRogdeniya;	
				}

			
				if(!isset($UserInfo['userRoditeliNesovDeteySuprugDolg']) || $UserInfo['userRoditeliNesovDeteySuprugDolg']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugDolg; $ERRORS[] = userRoditeliNesovDeteySuprugDolgS; }
				if(!isset($UserInfo['userRoditeliNesovDeteySuprugZanyat']) || $UserInfo['userRoditeliNesovDeteySuprugZanyat']=='') { $ERRORS[] = userRoditeliNesovDeteySuprugZanyat; $ERRORS[] = userRoditeliNesovDeteySuprugZanyatS; }
				
				if($UserInfo['userRoditeliNesovDeteySuprugZanyat'] == 'работает'){
					if(!isset($UserInfo['suprugRabotaMesto']) || $UserInfo['suprugRabotaMesto']=='') { $ERRORS[] = suprugRabotaMesto; }
					if(!isset($UserInfo['suprugRabotaDolgnost']) || $UserInfo['suprugRabotaDolgnost']=='') { $ERRORS[] = suprugRabotaDolgnost; }
				}

				if ($UserInfo['userRoditeliNesovDeteySuprugDolg'] == 'да') {
					$MASSDAT['userRoditeliNesovDeteySuprugDolgOsnDolg'] = userRoditeliNesovDeteySuprugDolgOsnDolg;
					$MASSDAT['userRoditeliNesovDeteySuprugDolgSumPlatega'] = userRoditeliNesovDeteySuprugDolgSumPlatega;
				}
				
			} else {
				unset($UserInfo['userRoditeliNesovDeteySuprugDolg']);
			}

			
			if(!isset($UserInfo['userRegistrRavnoMestogitel'])) { $ERRORS[] = mestogitDIV; }
			
			if ($UserInfo['userRegistrRavnoMestogitel'] == 'не совпадает с адресом регистрации') {
				if(!isset($UserInfo['nGitelOblast']) || $UserInfo['nGitelOblast']=='') { $ERRORS[] = nGitelOblast; $ERRORS[] = nGitelOblastS; }
				if(!isset($UserInfo['nGitelRayon']) || $UserInfo['nGitelRayon']=='') { $ERRORS[] = nGitelRayon; $ERRORS[] = nGitelRayonS; }
				if(!isset($UserInfo['nGitelCity']) || $UserInfo['nGitelCity']=='') { $ERRORS[] = nGitelCity; $ERRORS[] = nGitelCityS; }
				if(!isset($UserInfo['nGitelUlicaTip']) || $UserInfo['nGitelUlicaTip']=='') { $ERRORS[] = nGitelUlicaTip; $ERRORS[] = nGitelUlicaTipS; }

				$MASSDAT['nGitelUlica'] = nGitelUlica;
				$MASSDAT['nGitelDom'] = nGitelDom;
				$MASSDAT['nGitelKorpus'] = nGitelKorpus;
				$MASSDAT['nGitelKvartira'] = nGitelKvartira;
			} 
	
			

			if ($UserInfo['nKreditUchregd']=='') $ERRORS[] = mestoGitKreditForm;
			if ($UserInfo['nKreditUchregd']=='в ином учреждении Банка')  {
				if(!isset($UserInfo['userKreditOther']) || $UserInfo['userKreditOther']=='') { $ERRORS[] = userKreditOther; $ERRORS[] = uchregdeniya; }
			} else {
				unset($UserInfo['userKreditOther']);
			}


			if ($UserInfo['userVoennoobyazannost'] == 'отсрочка от службы до') {
				if ($UserInfo['userVoennoobyazannostOtsrochkaDo']=='')  $ERRORS[] = userVoennoobyazannostOtsrochkaDo;
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userVoennoobyazannostOtsrochkaDo']) && $UserInfo['userVoennoobyazannostOtsrochkaDo']!='') $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;	
				if(checkdate(substr($UserInfo[userVoennoobyazannostOtsrochkaDo],3,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],0,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],6,4)) != true) $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;

			}

			$vowels = array("(", "_", ")", "-");

			$userTelefonMestogitelstva = str_replace($vowels, "", $UserInfo['userTelefonMestogitelstva']);
			$userTelefonMobilny = str_replace($vowels, "", $UserInfo['userTelefonMobilny']);
			$userTelefonRabota = str_replace($vowels, "", $UserInfo['userTelefonRabota']);

			if($userTelefonMestogitelstva == '')				$ERRORS[] = userTelefonMestogitelstva;
			elseif(strlen($userTelefonMestogitelstva) != 11)	$ERRORStxt[] = userTelefonMestogitelstva; 												

			if($userTelefonMobilny == '')						$ERRORS[] = userTelefonMobilny;
			elseif(strlen($userTelefonMobilny) != 11)			$ERRORStxt[] = userTelefonMobilny; 												

			if($userTelefonRabota == '')						$ERRORS[] = userTelefonRabota;
			elseif(strlen($userTelefonRabota) != 11)			$ERRORStxt[] = userTelefonRabota; 												



			if(!isset($UserInfo['userPol']) || $UserInfo['userPol']=='') { $ERRORS[] = userPol; $ERRORS[] = userPolS; }
			if(!isset($UserInfo['userVoennoobyazannost']) || $UserInfo['userVoennoobyazannost']=='') { $ERRORS[] = userVoennoobyazannost; $ERRORS[] = userVoennoobyazannostS; }
			if(!isset($UserInfo['nPropiskaOblast']) || $UserInfo['nPropiskaOblast']=='') { $ERRORS[] = nPropiskaOblast; $ERRORS[] = nPropiskaOblastS; }
			if(!isset($UserInfo['nPropiskaRayon']) || $UserInfo['nPropiskaRayon']=='') { $ERRORS[] = nPropiskaRayon; $ERRORS[] = nPropiskaRayonS; }
			if(!isset($UserInfo['nPropiskaCity']) || $UserInfo['nPropiskaCity']=='') { $ERRORS[] = nPropiskaCity; $ERRORS[] = nPropiskaCityS; }
			if(!isset($UserInfo['nPropiskaUlicaTip']) || $UserInfo['nPropiskaUlicaTip']=='') { $ERRORS[] = nPropiskaUlicaTip; $ERRORS[] = nPropiskaUlicaTipS; }
			// если вдруг недогрузился аякс запрос проверяем подгрузилось ли поле nPropiskaPodrAddrInput
			if($UserInfo['nPropiskaCity']!='' && $UserInfo['nPropiskaPodrAddrInput']=='') { 
				$numFil = DB::select_value("SELECT filial FROM soato WHERE number_soato=?",$UserInfo['nPropiskaCity']);
				$PODR_ADDR = DB::select_line(" SELECT f.filial_name, ft.type_name, f.num, m.name_type, m.name,f.street_type,f.street,f.home_number
												FROM filials as f, filials_type as ft,  map as m 
												WHERE ft.type_id=f.type AND f.city_id=m.idkey AND f.num=? AND f.subnum = ''",$numFil);
				$podrFullName = '';
				if ($PODR_ADDR[filial_name]) $podrFullName = $PODR_ADDR[filial_name];
				else 						 $podrFullName = $PODR_ADDR[type_name].' №'.$PODR_ADDR[num];
				$podrFullName .= ' - '.$PODR_ADDR[name_type].$PODR_ADDR[name].', '.$PODR_ADDR[street_type].$PODR_ADDR[street].', '.$PODR_ADDR[home_number];
				echo $UserInfo['nPropiskaPodrAddrInput'] = $podrFullName;
			}


			if(!isset($UserInfo['userDocument']) || $UserInfo['userDocument']=='') { $ERRORS[] = userDocument; $ERRORS[] = userDocumentS; }


			if(!isset($UserInfo['userObrazovanie']) || $UserInfo['userObrazovanie']=='') { $ERRORS[] = userObrazovanie; $ERRORS[] = userObrazovanieS; }
			if(!isset($UserInfo['userSemeynoePologenie']) || $UserInfo['userSemeynoePologenie']=='') { $ERRORS[] = userSemeynoePologenie; $ERRORS[] = userSemeynoePologenieS; }
			if(!isset($UserInfo['userChlenySemyi']) || $UserInfo['userChlenySemyi']=='') { $ERRORS[] = userChlenySemyi; $ERRORS[] = userChlenySemyiS; }

			//if(!preg_match('/^\d+$/', $UserInfo['userChlenySemyi']))  { $ERRORStxt[] = userChlenySemyi;}
			
			
			$MASSMAIN = array(
								'userFamiliya'=>userFamiliya,
								'userImya'=>userImya,
								'userOtchestvo'=>userOtchestvo,
								'nPropiskaUlica'=>nPropiskaUlica,
								'nPropiskaDom'=>nPropiskaDom,
								'nPropiskaKorpus'=>nPropiskaKorpus,
								'nPropiskaKvartira'=>nPropiskaKvartira,
								'userPasportSeriyaNomer'=>userPasportSeriyaNomer,
								'userPasportROVD'=>userPasportROVD,
							);
			
			if (isset($MASSDAT)) {
				$MASSDATA = array_merge($MASSDAT,$MASSMAIN);
			} else {
				$MASSDATA = $MASSMAIN;	
			}
			

			foreach ($UserInfo as $k=>$v) {
			  if ($v == '' && isset($MASSDATA[$k])) $ERRORS[] = $MASSDATA[$k];
			}
			


			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				
				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo[userRegistrRavnoMestogitel]=='совпадает с адресом регистрации') {
				  unset($UserInfo[nGitelOblast]);
 				  unset($UserInfo[nGitelRayon]);
 				  unset($UserInfo[nGitelCity]);
 				  unset($UserInfo[nGitelUlicaTip]);
 				  unset($UserInfo[nGitelUlica]);
 				  unset($UserInfo[nGitelDom]);
 				  unset($UserInfo[nGitelKorpus]);
 				  unset($UserInfo[nGitelKvartira]);
				}

				
				if($UserInfo['userRoditeliNesovDeteySuprugZanyat'] != 'работает'){
					unset($UserInfo['suprugRabotaMesto']);
					unset($UserInfo['suprugRabotaDolgnost']);
				}
				
				if ($UserInfo[userVoennoobyazannost]!='отсрочка от службы до') {
				  unset($UserInfo[userVoennoobyazannostOtsrochkaDo]);
				}			

				$GLOBALS['_SESSION']['card_design']['anketa'] = $UserInfo;

				$this->setSessionParam('step4_OK',true);
				$this->redirect($this->action.'&step=5#content');
				return 1;
			}

		}

		$CITYS_GITEL = DB::select_array("
							  SELECT idkey, cat_left, cat_right, cat_level,parkey as p,
							  IF (name_type!='',CONCAT((SELECT CONCAT(name_type,name) FROM map WHERE idkey=p ORDER BY name),', ',name_type,name),CONCAT(name_type,name))  AS name 
							  FROM map 
						  WHERE type IN (3,4) 
						  ORDER BY type DESC,name ASC");
		$where_2 = ''; $or_2 = '';
		foreach ($CITYS_GITEL as $city_gitel){
			$where_2 .= $or_2. '(cat_left<='.$city_gitel['cat_left'].' AND cat_right>='.$city_gitel['cat_left'].') ';
			$or_2 = ' OR ';
		}
		
		
		$FILIALS_ALL = DB::select_column("SELECT CONCAT(ft.type_name,' №',f.num,' - ',m.name_type,m.name,', ',f.street_type,f.street,', ',f.home_number) as k
FROM map as m, filials as f,filials_type as ft
WHERE f.type IN (1,2,3) AND f.type=ft.type_id AND f.subnum='' AND m.idkey=f.city_id AND f.num!=519 ORDER BY f.num");
		foreach ($FILIALS_ALL as $key =>$value) {
			if ( strpos($value, '№100') != false ) $FILIALS_ALL[$key] = 'Филиал №100 - г.Брест, бул.Космонавтов, 94';
			if ( strpos($value, '№510') != false ) $FILIALS_ALL[$key] = 'Филиал №510 - г.Минск, ул.Мясникова, 32';
			if ( strpos($value, '№795') != false ) $FILIALS_ALL[$key] = 'ЦА №795 - г.Минск, пр.Дзержинского, 18';
		}
		$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
		$FAMS = array('да' => 'да','нет' => 'нет');
		$FAMS2 = array('да' => 'да','нет' => 'нет','не располагаю информацией' => 'не располагаю информацией');
		
		$GRAGDANSTVO = array(
			  'гражданин Республики Беларусь' => 'гражданин Республики Беларусь',
			  'иностранный гражданин' => 'иностранный гражданин',
			  'лицо без гражданства' => 'лицо без гражданства'
		);

		$REZIDENTSTVO = array(
			  'резидент' => 'резидент',
			  'нерезидент' => 'нерезидент'
		);

		$MAIL_AVAIL = array(
			  'есть' => 'есть',
			  'нет' => 'нет'
		);
		
		$VOENNOOBYAZANNOST  = array(
			  'служил' => 'служил',
			  'невоеннообязанный' => 'невоеннообязанный',
			  'освобожден от воинской службы' => 'освобожден от воинской службы',
			  'отсрочка от службы до' => 'отсрочка от службы до',
		);

		$OBRAZOVANIE = array(
			  'высшее' => 'высшее',
			  'среднее специальное' => 'среднее специальное',
			  'среднее' => 'среднее',
			  'базовое' => 'базовое',
			  'без образования' => 'без образования',
		);

		$DOCUMENT_LICHNOST = array(
			  'паспорт гражданина Республики Беларусь' => 'паспорт гражданина Республики Беларусь',
			  'вид на жительство в Республике Беларусь' => 'вид на жительство в Республике Беларусь',
		);

		$SEMEYNOE = array(
			  'холост / не замужем' => 'холост / не замужем',
			  'женат / замужем' => 'женат / замужем',
			  'разведен / разведена' => 'разведен / разведена',
			  'вдовец / вдова' => 'вдовец / вдова'
		);


		$STATUS_SEMYI = array(
			  'многодетная семья' => 'многодетная семья',
			  'семья, имеющая 1-2 несовершеннолетних детей' => 'семья, имеющая 1-2 несовершеннолетних детей',
			  'семья, не имеющая несовершеннолетних детей' => 'семья, не имеющая несовершеннолетних детей',
			  'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей' => 'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей',
			  'одинокий гражданин' => 'одинокий гражданин',
		);

	
		$KREDIT_CEL = array(
			'потребительские нужды' => 'потребительские нужды',
			'финансирование недвижимости' => 'финансирование недвижимости',
			'приобретение автомобиля' => 'приобретение автомобиля',
			'овердрафт' => 'овердрафт',
			'иное' => 'иное',
		);

		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);

		$VAL = DB::select_column("SELECT val_name_ru_many FROM kurs_valuta WHERE val_name_ru_many!='' AND val_group IN (1,5) ORDER BY val_priority");
		foreach ($VAL as $k=>$v)  $VALUTY[$v] = $v;

		$CHLENYSEMYI = array('1' => '1','2' => '2','3' => '3','4' => '4','5' => '5','6' => '6','7' => '7 и более');
		$IGDIVENCY = array('нет' => 'нет','1' => '1','2' => '2','3' => '3','4' => '4','5' => '5 и более');

		$BIRTH_DATE = array('01' => '1','02' => '2','03' => '3','04' => '4','05' => '5','06' => '6','07' => '7','08' => '8','09' => '9','10' => '10','11' => '11','12' => '12','13' => '13','14' => '14','15' => '15','16' => '16','17' => '17','18' => '18','19' => '19','20' => '20','21' => '21','22' => '22','23' => '23','24' => '24','25' => '25','26' => '26','27' => '27','28' => '28','29' => '29','30' => '30','31' => '31');
		$BIRTH_MONTH = array('01' => 'января','02' => 'февраля','03' => 'марта','04' => 'апреля','05' => 'мая','06' => 'июня','07' => 'июля','08' => 'августа','09' => 'сентября','10' => 'октября','11' => 'ноября','12' => 'декабря');
		for($i=(date("Y")-100);$i<(date("Y")-15);$i++) $BIRTH_YEAR[$i]=$i;


		$NE_PORUCHITEL = array(
			'нет источника дохода' => 'нет источника дохода',
			'низкая платежеспособность' => 'низкая платежеспособность',
			'супруг(а) отказался(ась) выступить поручителем' => 'супруг(а) отказался(ась) выступить поручителем',
			'клиент отказался пояснить' => 'клиент отказался пояснить',
			'выбрана иная форма обеспечения' => 'выбрана иная форма обеспечения',
		);

		$ZANSUPRUG = array(
			'пенсионер' => 'пенсионер',
			'не работает/ведет домашнее хозяйство' => 'не работает/ведет домашнее хозяйство',
			'социальный отпуск' => 'социальный отпуск',
			'работает' => 'работает',
		);

		$TIP_ULICY = array(
			'Нет улицы' => 'Нет улицы',
			'Бульвар' => 'Бульвар',
			'Вал' => 'Вал',
			'Военная часть' => 'Военная часть',
			'Военный городок' => 'Военный городок',
			'Квартал' => 'Квартал',
			'Кольцо' => 'Кольцо',
			'Микрорайон' => 'Микрорайон',
			'Набережная' => 'Набережная',
			'Парк' => 'Парк',
			'Переулок' => 'Переулок',
			'Площадь' => 'Площадь',
			'Поселок' => 'Поселок',
			'Проезд' => 'Проезд',
			'Проспект' => 'Проспект',
			'Станция' => 'Станция',
			'Территория' => 'Территория',
			'Тракт' => 'Тракт',
			'Тупик' => 'Тупик',
			'Улица' => 'Улица',
			'Урочище' => 'Урочище',
			'Шоссе' => 'Шоссе',
		);
		
		$SFERA_DEYAT = array(
				'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
				'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
				'Гостиницы и рестораны' => 'Гостиницы и рестораны',
				'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
				'Здравоохранение' => 'Здравоохранение',
				'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
				'Легкая промышленность' => 'Легкая промышленность',
				'Научные исследования и разработки' => 'Научные исследования и разработки',
				'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
				'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
				'Образование' => 'Образование',
				'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
				'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
				'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
				'Прочие' => 'Прочие',
				'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
				'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
				'Страхование' => 'Страхование',
				'Строительство' => 'Строительство',
				'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
				'Торговля' => 'Торговля',
				'Транспорт' => 'Транспорт',
				'Транспорт воздушный' => 'Транспорт воздушный',
				'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
				'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
				'Финансовая деятельность' => 'Финансовая деятельность',
				'Электроэнергетика' => 'Электроэнергетика',
			);
		
		$DATA = array(
			'birth_date'=>$BIRTH_DATE,
			'birth_month'=>$BIRTH_MONTH,
			'birth_year'=>$BIRTH_YEAR,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'POLS' => $POLS,
			'FILIALS_ALL' => $FILIALS_ALL,
			'MAIL_AVAIL' => $MAIL_AVAIL,
			'ZANSUPRUG' => $ZANSUPRUG,
			'BANKI' => $BANKI,
			'FAMS' => $FAMS,
			'FAMS2' => $FAMS2,
			'VALUTY' => $VALUTY,
			'TIP_ULICY' => $TIP_ULICY,
			'KREDIT_CEL' => $KREDIT_CEL,
			'VOENNOOBYAZANNOST' => $VOENNOOBYAZANNOST,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'REZIDENTSTVO' => $REZIDENTSTVO,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'AVTO' => $AVTO,
			'OBRAZOVANIE' => $OBRAZOVANIE,
			'KOLVO_RABOTNIKOV' => $KOLVO_RABOTNIKOV,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'SEMEYNOE' => $SEMEYNOE,
			'CHLENYSEMYI' => $CHLENYSEMYI,
			'IGDIVENCY' => $IGDIVENCY,
			'NE_PORUCHITEL' => $NE_PORUCHITEL,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'UserInfo'=>$UserInfo,
			'SUDIMOST' => $SUDIMOST,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);

		$this->viewStep4_mini($DATA);
	}




	function doStep5_mini(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK') || !$this->getSessionParam('step4_OK')){
			echo 'Не выполнен шаг 1 или 2 или 3 или 4';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step5_OK') || $this->getSessionParam('step5_OK')=='')  $UserInfo =  $this->getSessionParam('anketa2');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('prev')){
			$this->setSessionParam('step5_OK',false);
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}

		if($this->getParam('next')){
		// Проверяем правильность заполнения полей
			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
			/*
			echo '<pre>';
			print_r ($UserInfo);
			echo '</pre>';			
			*/

			// валидность полей - проверяем заполнены ли и соответствие регулярке
				
			if ($UserInfo['dopinfoSudimost'] == 'да') {
				if(!isset($UserInfo['dopinfoSudimostValue']) || $UserInfo['dopinfoSudimostValue']=='') { $ERRORS[] = dopinfoSudimostValue; $ERRORS[] = dopinfoSudimostValueS; }
			}

			if ($UserInfo['userRabota'] == 'работа по контракту' || $UserInfo['userRabota'] == 'работа по гражданско-правовому договору') {
				if($UserInfo[userRabotaSrokKontraktaDo] == '') {
					$ERRORS[] = userRabotaSrokKontraktaDo;
				} else {
					if(!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo[userRabotaSrokKontraktaDo])) $ERRORStxt[] = userRabotaSrokKontraktaDo;
					if(checkdate(substr($UserInfo[userRabotaSrokKontraktaDo],3,2), substr($UserInfo[userRabotaSrokKontraktaDo],0,2), substr($UserInfo[userRabotaSrokKontraktaDo],6,4)) != true) $ERRORStxt[] = userRabotaSrokKontraktaDo;
				}

				if(!isset($UserInfo['dopinfoKolichestvoRAbotnikov']) || $UserInfo['dopinfoKolichestvoRAbotnikov']=='') { $ERRORS[] = dopinfoKolichestvoRAbotnikov; $ERRORS[] = dopinfoKolichestvoRAbotnikovS; }
			}  elseif ($UserInfo['userRabota']=='работа по трудовому договору' || $UserInfo['userRabota']=='предпринимательская деятельность') {
				if(!isset($UserInfo['dopinfoKolichestvoRAbotnikov']) || $UserInfo['dopinfoKolichestvoRAbotnikov']=='') { $ERRORS[] = dopinfoKolichestvoRAbotnikov; $ERRORS[] = dopinfoKolichestvoRAbotnikovS; }
			} 
				

			if ($UserInfo['userRabota'] != 'не работающий') {
				if(!isset($UserInfo['userRabotaSferaDeyat']) || $UserInfo['userRabotaSferaDeyat']=='') { $ERRORS[] = userRabotaSferaDeyat; $ERRORS[] = userRabotaSferaDeyatS; }
				$MASSDAT[userRabotaMestoRaboty] = userRabotaMestoRaboty;

				$vowels = array("(", "_", ")", "-");

				$MASSDAT[userRabotaDolgnost] = userRabotaDolgnost;
				if(!isset($UserInfo['userRabotaSrokKontrakta']) || $UserInfo['userRabotaSrokKontrakta']=='') { $ERRORS[] = userRabotaSrokKontrakta;					$ERRORS[] = userRabotaSrokKontraktaS; }

				if(!isset($UserInfo['dopinfoKolichestvoMestRaboty']) || $UserInfo['dopinfoKolichestvoMestRaboty']=='') { $ERRORS[] = dopinfoKolichestvoMestRaboty; $ERRORS[] = dopinfoKolichestvoMestRabotyS; }


			}

			
			if(!isset($UserInfo['userRabota']) || $UserInfo['userRabota']=='') { $ERRORS[] = userRabota; $ERRORS[] = userRabotaS; }
			if(!isset($UserInfo['userRabotaStatus']) || $UserInfo['userRabotaStatus']=='') { $ERRORS[] = userRabotaStatus; $ERRORS[] = userRabotaStatusS; }
			if(!isset($UserInfo['belarusbankVklad']) || $UserInfo['belarusbankVklad']=='') { $ERRORS[] = belarusbankVklad; $ERRORS[] = belarusbankVkladS; }
			if(!isset($UserInfo['belarusbankPlastikovayaKarta']) || $UserInfo['belarusbankPlastikovayaKarta']=='') { $ERRORS[] = belarusbankPlastikovayaKarta; $ERRORS[] = belarusbankPlastikovayaKartaS; }
			if(!isset($UserInfo['dopinfoHarakteristikaGilya']) || $UserInfo['dopinfoHarakteristikaGilya']=='') { $ERRORS[] = dopinfoHarakteristikaGilya; $ERRORS[] = dopinfoHarakteristikaGilyaS; }
			if(!isset($UserInfo['dopinfoSudimost']) || $UserInfo['dopinfoSudimost']=='') { $ERRORS[] = dopinfoSudimost; $ERRORS[] = dopinfoSudimostS; }
				
			$MASSMAIN = array();
			
			if (isset($MASSDAT)) {
				$MASSDATA = array_merge($MASSDAT,$MASSMAIN);	
			} else {
				$MASSDATA = $MASSMAIN;	
			}
			

			foreach ($UserInfo as $k=>$v) {
			  if ($v == '' && isset($MASSDATA[$k])) $ERRORS[] = $MASSDATA[$k];
			}
			



			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo['userRabota'] == 'иное' || $UserInfo['userRabota'] == 'не работающий') {
					unset($UserInfo[userRabotaSrokKontraktaDo]);
					unset($UserInfo[dopinfoKolichestvoRAbotnikov]);
				}elseif ($UserInfo['userRabota']=='работа по трудовому договору' || $UserInfo['userRabota']=='предпринимательская деятельность') {
					unset($UserInfo[userRabotaSrokKontraktaDo]);
				}

				//if ($UserInfo[userRabotaSferaDeyat]!='иная сфера деятельности')  unset($UserInfo[userSferaDrugaya]);
		
				$GLOBALS['_SESSION']['card_design']['anketa2'] = $UserInfo;
				//exit();
				$this->setSessionParam('step5_OK',true);
				if ($GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchFizLic'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['poruchUrLic'] ||
				        $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogImu'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogTransport'] ||
						$GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogCenBumag'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['zalogNedv'] ||
						$GLOBALS['_SESSION']['card_design']['CONSTANTS']['garantDeposit'] || $GLOBALS['_SESSION']['card_design']['CONSTANTS']['drFormyObesp']) {
					$this->redirect($this->action.'&step=6#content');
				} else {
					$this->redirect($this->action.'&step=7#content');
				}
				return 1;
			}

		}

			$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
			$FAMS = array('да' => 'да','нет' => 'нет');
			
			$SUDIMOST = array(
				  'привлекался(ась) к административной за последние 3 года, до 2 раз' => 'привлекался(ась) к административной за последние 3 года, до 2 раз',
				  'привлекался(ась) к административной за последние 3 года, более 2 раз' => 'привлекался(ась) к административной за последние 3 года, более 2 раз',
				  'возбуждалось уголовное дело, осужден(а), судимость погашена/снята' => 'возбуждалось уголовное дело, осужден(а), судимость погашена/снята',
				  'возбуждалось уголовное дело, осужден(а), судимость не погашена/не снята' => 'возбуждалось уголовное дело, осужден(а), судимость не погашена/не снята',
				  'возбуждалось уголовное дело, дело прекращено/оправдан' => 'возбуждалось уголовное дело, дело прекращено/оправдан',
			);

			$RABOTA = array(
				  'работа по контракту' => 'работа по контракту',
				  'работа по трудовому договору' => 'работа по трудовому договору',
				  'работа по гражданско-правовому договору' => 'работа по гражданско-правовому договору',
				  'предпринимательская деятельность' => 'предпринимательская деятельность',
				  'не работающий' => 'не работающий',
				  'иное' => 'иное',
			);


			$KOLVO_RABOTNIKOV = array(
			  'до 10' => 'до 10',
			  '11–100' => '11–100',
			  '101–1000' => '101–1000',
			  'более 1000' => 'более 1000',
			);

			$VID_NEDVIGIMOSTI = array(
			  'квартира' => 'квартира',
			  'дом' => 'дом',
			  'доля собственности на жилое помещение' => 'доля собственности на жилое помещение',
			  'земельный участок' => 'земельный участок',
			  'доля собственности на земельный участок' => 'доля собственности на земельный участок',
			  'дачный участок' => 'дачный участок',
			  'помещение нежилого фонда' => 'помещение нежилого фонда',
			);

			$GILIE = array(
			  'собственное' => 'собственное',
			  'государственное' => 'государственное',
			  'проживаю у родственников' => 'проживаю у родственников',
			  'служебное/социальное' => 'служебное/социальное',
			  'общежитие' => 'общежитие',
			  'арендованное' => 'арендованное',
			);

			$STAG_RABOTY = array(
				'ранее не работал' => 'ранее не работал',
				'первое место работы' => 'первое место работы',
				'менее 6 месяцев' => 'менее 6 месяцев',
				'от 6 месяцев до 1 года' => 'от 6 месяцев до 1 года',
				'от 1 года до 3 лет' => 'от 1 года до 3 лет',
				'от 3 до 5 лет' => 'от 3 до 5 лет',
				'от 5 до 10 лет' => 'от 5 до 10 лет',
				'более 10 лет' => 'более 10 лет',
			);

			$STAG_RABOTY_SEYCHAS = array(
				'менее 6 месяцев' => 'менее 6 месяцев',
				'от 6 месяцев до 1 года' => 'от 6 месяцев до 1 года',
				'от 1 года до 3 лет' => 'от 1 года до 3 лет',
				'от 3 до 5 лет' => 'от 3 до 5 лет',
				'от 5 до 10 лет' => 'от 5 до 10 лет',
				'более 10 лет' => 'более 10 лет',
			);

			$STATUS_RABOTA = array(
				  'учредитель/соучредитель' => 'учредитель/соучредитель',
				  'руководитель' => 'руководитель',
				  'госслужащий' => 'госслужащий',
				  'военнослужащий' => 'военнослужащий',
				  'служащий/специалист' => 'служащий/специалист',
				  'рабочий' => 'рабочий',
				  'пенсионер' => 'пенсионер',
				  'студент/учащийся' => 'студент/учащийся',
				  'учитель/преподаватель' => 'учитель/преподаватель',
				  'врач' => 'врач',
				  'научный работник/профессорский состав' => 'научный работник/профессорский состав',
				  'индивидуальный предприниматель' => 'индивидуальный предприниматель',
				  'ремесленник' => 'ремесленник',
				  'частный нотариус/адвокат' => 'частный нотариус/адвокат',
				  'фермер/крестьянин' => 'фермер/крестьянин',
				  'священнослужитель' => 'священнослужитель',
				  'деятель искусства/культуры' => 'деятель искусства/культуры',
				  'спортсмен' => 'спортсмен',
				  'не работающий' => 'не работающий',
			);
	
			$AVTO = array(
				  'легковой автомобиль' => 'легковой автомобиль',
				  'грузовой автомобиль' => 'грузовой автомобиль',
				  'автобус/микроавтобус' => 'автобус/микроавтобус',
				  'мототранспорт' => 'мототранспорт',
				  'яхта/катер' => 'яхта/катер',
				  'водный мотоцикл' => 'водный мотоцикл',
			);

			$ORG_FORMA = array(
				'Акционерные общества (ОАО, ЗАО)' => 'Акционерные общества (ОАО, ЗАО)',
				'Арендные предприятия' => 'Арендные предприятия',
				'Ассоциации, Союзы' => 'Ассоциации, Союзы',
				'Индивидуальные предприниматели' => 'Индивидуальные предприниматели',
				'Иностранные предприятия' => 'Иностранные предприятия',
				'Колхозы, Совхозы, Коллективные предприятия' => 'Колхозы, Совхозы, Коллективные предприятия',
				'Крестьянские (фермерские) хозяйства' => 'Крестьянские (фермерские) хозяйства',
				'Общества (ООО, ОДО)' => 'Общества (ООО, ОДО)',
				'Общественные и религиозные организации (объединения), Фонды' => 'Общественные и религиозные организации (объединения), Фонды',
				'Потребительские союзы, Общества, Кооперативы, ЖСПК' => 'Потребительские союзы, Общества, Кооперативы, ЖСПК',
				'Представительства, Филиалы' => 'Представительства, Филиалы',
				'Производственные объединения, Кооперативы' => 'Производственные объединения, Кооперативы',
				'Совместные общества и предприятия' => 'Совместные общества и предприятия',
				'Товарищества' => 'Товарищества',
				'Унитарные предприятия' => 'Унитарные предприятия',
				'Учреждения' => 'Учреждения',
			);

			$SFERA_DEYAT = array(
				'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
				'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
				'Гостиницы и рестораны' => 'Гостиницы и рестораны',
				'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
				'Здравоохранение' => 'Здравоохранение',
				'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
				'Легкая промышленность' => 'Легкая промышленность',
				'Научные исследования и разработки' => 'Научные исследования и разработки',
				'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
				'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
				'Образование' => 'Образование',
				'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
				'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
				'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
				'Прочие' => 'Прочие',
				'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
				'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
				'Страхование' => 'Страхование',
				'Строительство' => 'Строительство',
				'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
				'Торговля' => 'Торговля',
				'Транспорт' => 'Транспорт',
				'Транспорт воздушный' => 'Транспорт воздушный',
				'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
				'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
				'Финансовая деятельность' => 'Финансовая деятельность',
				'Электроэнергетика' => 'Электроэнергетика',
			);

		$MEST_RABOTY = array(
			  '0' => '0',
			  '1' => '1',
			  '2' => '2',
			  '3' => '3',
			  '4' => '4',
			  '5' => '5',
			  '6' => '6',
			  '7' => '7',
			  '8' => '8',
			  '9' => '9',
		);		

		$DATA = array(
			'birth_date'=>$BIRTH_DATE,
			'birth_month'=>$BIRTH_MONTH,
			'birth_year'=>$BIRTH_YEAR,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'POLS' => $POLS,
			'MEST_RABOTY' => $MEST_RABOTY,
			'MAIL_AVAIL' => $MAIL_AVAIL,
			'ZANSUPRUG' => $ZANSUPRUG,
			'BANKI' => $BANKI,
			'FAMS' => $FAMS,
			'VALUTY' => $VALUTY,
			'KREDIT_CEL' => $KREDIT_CEL,
			'VOENNOOBYAZANNOST' => $VOENNOOBYAZANNOST,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'ORG_FORMA' => $ORG_FORMA,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'REZIDENTSTVO' => $REZIDENTSTVO,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'VID_NEDVIGIMOSTI' => $VID_NEDVIGIMOSTI,
			'AVTO' => $AVTO,
			'OBRAZOVANIE' => $OBRAZOVANIE,
			'KOLVO_RABOTNIKOV' => $KOLVO_RABOTNIKOV,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STAG_RABOTY_SEYCHAS' => $STAG_RABOTY_SEYCHAS,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'SEMEYNOE' => $SEMEYNOE,
			'CHLENYSEMYI' => $CHLENYSEMYI,
			'IGDIVENCY' => $IGDIVENCY,
			'GILIE' => $GILIE,
			'UserInfo'=>$UserInfo,
			'SUDIMOST' => $SUDIMOST,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);

		$this->viewStep5_mini($DATA);
	}






	function doStep7_mini(){
		//echo '<pre>';
		//print_r ($GLOBALS['_SESSION']['card_design']);
		//echo '</pre>'; 
		
		// проверям был ли шаг поручительства
		/*if ($GLOBALS[_SESSION][card_design][CONSTANTS][poruchFizLic]!='') {
			//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
			if(!$this->getSessionParam('step1_OK')
			|| !$this->getSessionParam('step2_OK')
			|| !$this->getSessionParam('step4_OK')
			|| !$this->getSessionParam('step5_OK')
			|| !$this->getSessionParam('step6_OK')
			){
				echo 'Не выполнен шаг 1 или 2 или 4 или 5 или 6';
				$this->redirect($this->action.'');
				return 1;
			}

			if($this->getParam('prev')){
				$this->setSessionParam('step7_OK',false);
				$this->redirect($this->action.'&step=6#content');
				return 1;
			}
		} else {
			//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
			if(!$this->getSessionParam('step1_OK')
			|| !$this->getSessionParam('step2_OK')
			|| !$this->getSessionParam('step4_OK')
			|| !$this->getSessionParam('step5_OK')
			){
				echo 'Не выполнен шаг 1 или 2 или 4 или 5';
				$this->redirect($this->action.'');
				return 1;
			}

			if($this->getParam('prev')){
				$this->setSessionParam('step7_OK',false);
				$this->redirect($this->action.'&step=5#content');
				return 1;
			}			
		}*/


		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5';
			$this->redirect($this->action.'');
			return 1;
		}

		if (($GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 1 || $GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 2) && !$this->getSessionParam('step6_OK')) {
			echo 'Не выполнен шаг 6';
			$this->redirect($this->action.'');
			return 1;
		}

		if($this->getParam('prev')){
		   $this->setSessionParam('step7_OK',false);
		   $this->redirect($this->action.'&step=6#content');
		   return 1;
		}
		
		$FAMS = array('да' => 'да','нет' => 'нет');

		$KREDIT_CEL = array(
			'потребительские нужды' => 'потребительские нужды',
			'финансирование недвижимости' => 'финансирование недвижимости',
			'приобретение автомобиля' => 'приобретение автомобиля',
			'овердрафт' => 'овердрафт',
			'иное' => 'иное',
		);
		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);
		
		$VAL = DB::select_column("SELECT val_name_ru_many FROM kurs_valuta WHERE val_name_ru_many!='' AND val_group IN (1,5) ORDER BY val_priority");
		foreach ($VAL as $k=>$v)  $VALUTY[$v] = $v;
		
		$NARUSHENIYA_OPLATY  = array(
			'не допускал' => 'не допускал',
			'допускал наличие просроченной задолженности до 3 раз в течение последних 12 месяцев' => 'допускал наличие просроченной задолженности до 3 раз в течение последних 12 месяцев',
			'допускал наличие просроченной задолженности более 3 раз в течение последних 12 месяцев' => 'допускал наличие просроченной задолженности более 3 раз в течение последних 12 месяцев',
			'погашается поручителями (родственниками)' => 'погашается поручителями (родственниками)',
			'погашается по решению суда' => 'погашается по решению суда',
		);
		
		$UserInfo =  $this->getParam('userInfo');
		
		if ($this->getSessionParam('step7_OK') || $this->getSessionParam('step7_OK')=='')  $UserInfo =  $this->getSessionParam('kredity');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('next')){
			// Проверяем правильность заполнения полей
			$ERRORS = array();
			$ERRORStxt = array();

			if(!isset($UserInfo['dolgKredit']) || $UserInfo['dolgKredit']=='') { $ERRORS[] = dolgKredit; $ERRORS[] = dolgKreditS; }
			
			if($UserInfo['dolgKredit']=='да') {
				if($UserInfo['ostatokSummaBank1']=='')  $ERRORS[] = ostatokSummaBank1;
				if($UserInfo['ostatokPlategBank1']=='')  $ERRORS[] = ostatokPlategBank1;
				if(!isset($UserInfo['kreditNarusheniyaOplaty1']) || $UserInfo['kreditNarusheniyaOplaty1']=='') { $ERRORS[] = kreditNarusheniyaOplaty1; $ERRORS[] = kreditNarusheniyaOplaty1S; }
			
			
				if($UserInfo['ostatokSummaBank2']!='') {
					if($UserInfo['ostatokSummaBank2']=='')  $ERRORS[] = ostatokSummaBank2;
					if($UserInfo['ostatokPlategBank2']=='')  $ERRORS[] = ostatokPlategBank2;
					if(!isset($UserInfo['kreditNarusheniyaOplaty2']) || $UserInfo['kreditNarusheniyaOplaty2']=='') { $ERRORS[] = kreditNarusheniyaOplaty2; $ERRORS[] = kreditNarusheniyaOplaty2S; }
				}
			
				if($UserInfo['ostatokSummaBank3']!='') {
					if($UserInfo['ostatokSummaBank3']=='')  $ERRORS[] = ostatokSummaBank3;
					if($UserInfo['ostatokPlategBank3']=='')  $ERRORS[] = ostatokPlategBank3;
					if(!isset($UserInfo['kreditNarusheniyaOplaty3']) || $UserInfo['kreditNarusheniyaOplaty3']=='') { $ERRORS[] = kreditNarusheniyaOplaty3; $ERRORS[] = kreditNarusheniyaOplaty3S; }
				}
			
				if($UserInfo['ostatokSummaBank4']!='') {
					if($UserInfo['ostatokSummaBank4']=='')  $ERRORS[] = ostatokSummaBank4;
					if($UserInfo['ostatokPlategBank4']=='')  $ERRORS[] = ostatokPlategBank4;
					if(!isset($UserInfo['kreditNarusheniyaOplaty4']) || $UserInfo['kreditNarusheniyaOplaty4']=='') { $ERRORS[] = kreditNarusheniyaOplaty4; $ERRORS[] = kreditNarusheniyaOplaty4S; }
				}
			
				if($UserInfo['ostatokSummaBank5']!='') {
					if($UserInfo['ostatokSummaBank5']=='')  $ERRORS[] = ostatokSummaBank5;
					if($UserInfo['ostatokPlategBank5']=='')  $ERRORS[] = ostatokPlategBank5;
					if(!isset($UserInfo['kreditNarusheniyaOplaty5']) || $UserInfo['kreditNarusheniyaOplaty5']=='') { $ERRORS[] = kreditNarusheniyaOplaty5; $ERRORS[] = kreditNarusheniyaOplaty5S; }
				}
			
			
			}
			
			//if(!isset($UserInfo['kreditNarusheniyaOplaty']) || $UserInfo['kreditNarusheniyaOplaty']=='') { $ERRORS[] = kreditNarusheniyaOplaty; $ERRORS[] = kreditNarusheniyaOplatyS; }
			
			
			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				$GLOBALS['_SESSION']['card_design']['kredity'] = $UserInfo;
				$this->setSessionParam('step7_OK',true);
				$this->redirect($this->action.'&step=8#content');
				return 1;
			}

		}

		$DATA = array(
			'UserInfo' => $UserInfo,
			'KREDIT_CEL' => $KREDIT_CEL,
			'FAMS' => $FAMS,
			'VALUTY' => $VALUTY,
			'BANKI' => $BANKI,
			'NARUSHENIYA_OPLATY' => $NARUSHENIYA_OPLATY,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
			
		$this->viewStep7_mini($DATA);

	}





	function doStep8_mini(){
		/*
		echo '<pre>';
		print_r ($GLOBALS['_SESSION']['card_design']);
		echo '</pre>'; 	
		*/
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		|| !$this->getSessionParam('step7_OK')
		){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5 или 7';
			$this->redirect($this->action.'');
			return 1;
		}

		if (($GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 1 || $GLOBALS[_SESSION][card_design][CONSTANTS][kreditName] == 2) && !$this->getSessionParam('step6_OK')) {
			echo 'Не выполнен шаг 6';
			$this->redirect($this->action.'');
			return 1;
		}		

		if($this->getParam('prev1')){
			$this->setSessionParam('step1_OK',false);
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=1#content');
			return 1;
		}
		if($this->getParam('prev2')){
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}
		
		if($this->getParam('prev4')){
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}
		
		if($this->getParam('prev5')){
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=5#content');
			return 1;
		}
		
		if($this->getParam('prev7')){
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=7#content');
			return 1;
		}
		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);


		$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next')){
			$ERRORS = array();
			$ERRORStxt = array();

			
			 if($UserInfo['resultat']=='') $ERRORS[] = 'Вы не указали, каким образом вас уведомить о принятом решении по заявке на кредит';
			// Переходим к следующему шагу если все ОК
			if(!$ERRORS){

				foreach ($GLOBALS[_SESSION][card_design][anketa] as $k=>$v)
					$GLOBALS[_SESSION][card_design][anketa][$k] = htmlspecialchars_decode($GLOBALS[_SESSION][card_design][anketa][$k]);

				
				
				$GLOBALS['_SESSION']['card_design']['result'] = $UserInfo;
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['ANKETA_END'] = date("Y.m.d H:i");
				
				$this->setSessionParam('step8_OK',true);
					

				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchFizLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchFizLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchUrLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchUrLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogImu]) !== true) unset($GLOBALS[_SESSION][card_design][zalogImu]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogTransport]) !== true) unset($GLOBALS[_SESSION][card_design][zalogTransport]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogCenBumag]) !== true) unset($GLOBALS[_SESSION][card_design][zalogCenBumag]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogNedv]) !== true) unset($GLOBALS[_SESSION][card_design][zalogNedv]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][garantDeposit]) !== true) unset($GLOBALS[_SESSION][card_design][garantDeposit]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][drFormyObesp]) !== true) unset($GLOBALS[_SESSION][card_design][drFormyObesp]);

				// для софтклуба парсим на тип населенного пункта и название
				if(isset($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan])) {
					$arr1 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityType] = $arr1[tip];
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityName] = $arr1[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan])) {
					$arr2 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityType] = $arr2[tip];
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityName] = $arr2[name];
				}

				// закончили парсить
				//echo '<pre>';
				//print_r ($GLOBALS['_SESSION']['card_design']);
				//echo '</pre>';				
				//exit();	
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == 7) $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = '7 и более';
				
				$this->doPDF_mini($GLOBALS['_SESSION']['card_design']);
				

				


				
				/* в номерах телефонов оставляем только цифры для XML */
				/* телефоны  anketa */
				$anketaTel = array(userTelefonMestogitelstva,
										userTelefonRabota,
										userTelefonMobilny);


				$vowels = array("(", "_", ")", "-");

				foreach ($anketaTel as $v) {
					$tempVar ='';
					$tempVar = str_replace($vowels, "", $GLOBALS['_SESSION']['card_design']['anketa'][$v]);
					$GLOBALS['_SESSION']['card_design']['anketa'][$v] = substr($tempVar,2,strlen($tempVar));
				}	

				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == '7 и более') $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = 7;

				$massives = array (	CONSTANTS,
									kredit,
									anketa,
									anketa2,
									poruchFizLic,
									poruchUrLic,
									zalogImu,
									zalogTransport,
									zalogCenBumag,
									zalogNedv,
									garantDeposit,
									kredity);
				// убираем дефисы  для XML 
				foreach ($massives as $v) {
					foreach($GLOBALS['_SESSION']['card_design'][$v] as $kk=>$vv) {
						if ($vv == '-') {
							$GLOBALS['_SESSION']['card_design'][$v][$kk] = '';
						}
					}
				}
				//F::debug($GLOBALS['_SESSION']['card_design']);
				// для Минска возвращаем код СОАТО 5000000000, независимо от района
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'], '500000000') !== false ) 
					$GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'] = 5000000000;
				
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka'] = str_replace('.', ',', $GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka']);

				$this->doXML($GLOBALS['_SESSION']['card_design']);
				$this->redirect($this->action.'&step=9#content');
				return 1;
			}
		}

		if ($this->getSessionParam('step8_OK') || $this->getSessionParam('step8_OK')=='')  $UserInfo =  $GLOBALS['_SESSION']['card_design'];
		
		$DATA = array(
			'UserInfo' => $UserInfo,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
		
		$this->viewStep8_mini($DATA);

	}




	function doStep1_overdraft(){
		//$this->cleanAllSessionParams(); 
		

		if ($this->getParam('next') && $GLOBALS['_SESSION']['card_design']['step1_OK']!=1) { $UserInfo =  $this->getParam('userInfo'); }
		else { $UserInfo =  $this->getSessionParam('CONSTANTS');  }
		
		//if ($_SERVER['REMOTE_ADDR']=='10.200.10.241') F::debug($UserInfo);
	

		// ищем ставку реф на последнее число предыдущего месяца, т.к. ставка реф на след.день 
		$endDate = mktime(0, 0, 0, date('m')-1, 1, date("Y"));
		$dateNOW = date("Ymt",$endDate);
		$REF = CONSTS::getRef($dateNOW);

		$MASS = array(
		  'со сроком погашения 3 месяца',
		  'со сроком погашения 6 месяцев',
		  'со сроком погашения 6 месяцев (БЕЛКАРТ-ПРЕМИУМ)',
		  'со сроком погашения 6 месяцев (пакет услуг «Платинум»)',
		  'со сроком погашения 6 месяцев (пакет услуг «Премиум»)',
		  'со сроком погашения 6 месяцев (пакет услуг «Престиж»)',
		  'со сроком погашения 10 месяцев (пакет услуг «Премиум»)',
		  'со сроком погашения 24 месяца (пакет услуг «Оптимальный»)',
		  'со сроком погашения 24 месяца (пакет услуг «Престиж плюс»)'
		);

		foreach ($MASS as $k=>$v) {
			$MASS[htmlspecialchars($v, ENT_QUOTES, "windows-1251")] = $v;
			unset($MASS[$k]);
		}



		if($this->getParam('next')){
			// извлекаем здесь массив снова, чтобы брать данные именно из формы
			$UserInfo = $this->getParam('userInfo');
			$ERRORS = array();
			if($UserInfo['predostKredita']=='')  { $ERRORS[] = predostKredita; $ERRORS[] = predostKreditaSelect; }

			// Проверяем правильность заполнения полей
			if(empty($ERRORS)){

				if($UserInfo["predostKredita"] == 'с ежемесячным сроком погашения'  || 
					$UserInfo["predostKredita"] == 'со сроком погашения 3 месяца') {
					$this->setSessionParam('koefSrednemesDohod', 1);
				} elseif ($UserInfo["predostKredita"] ==  'со сроком погашения 6 месяцев (БЕЛКАРТ-ПРЕМИУМ)'  || 
					$UserInfo["predostKredita"] == 'со сроком погашения 6 месяцев (пакет услуг «Платинум»)'  || 
					$UserInfo["predostKredita"] == 'со сроком погашения 6 месяцев (пакет услуг «Премиум»)' ||
					$UserInfo["predostKredita"] == 'со сроком погашения 6 месяцев (пакет услуг «Престиж»)'  || 
					$UserInfo["predostKredita"] == 'со сроком погашения 6 месяцев') {
					$this->setSessionParam('koefSrednemesDohod', 4);
				}elseif ($UserInfo["predostKredita"] ==  'со сроком погашения 10 месяцев (пакет услуг «Премиум»)') {
					$this->setSessionParam('koefSrednemesDohod', 6);
				}

				$this->setSessionParam('sessionID',$GLOBALS['_COOKIE']['PHPSESSID']);
				$this->setSessionParam('step1_OK',true);
				$GLOBALS['_SESSION']['card_design']['CONSTANTS'] = $UserInfo;
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['ANKETA_START'] = date("Y.m.d H:i");
				$this->redirect($this->action.'&step=2#content');
				return 1;
			}
		}

		foreach ($UserInfo as $k=>$v) $UserInfo[$k] = htmlspecialchars($v, NULL, '');

		$DATA = array(
			'action' => $this->action,
			'REF'=>$REF,
			'MASS'=>$MASS,
			'ERRORS'=>$ERRORS,
			'UserInfo' => $UserInfo,
		);

		$this->viewStep1_overdraft($DATA);
	}

	function doStep2_overdraft(){
		//Проверяем выполнены ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')){
			echo 'Вы не ознакомились с условиями кредитования';
			$this->redirect($this->action.'');
			return 1;
		}
		
		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step2_OK') || $this->getSessionParam('step2_OK')=='')  $UserInfo =  $this->getSessionParam('kredit');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');

		if($this->getParam('prev')){
			$this->setSessionParam('step2_OK',false);
			$this->redirect($this->action.'&step=1#content');
			return 1;
		}
		
		$KREDIT_DOGOVORA = array(
			  '0' => '0',
			  '1' => '1',
			  '2' => '2',
			  '3' => '3',
			  '4' => '4',
			  '5' => '5',
			  '6' => '6',
		);

		
		if($this->getParam('next')){
			// Проверяем правильность заполнения полей
			$ERRORS = array();

			if($UserInfo['summaKredita']=='') $ERRORS[] = 'Вы не произвели расчет необходимой суммы овердрафта'; 
				
			// Переходим к следующему шагу если все ОК
			if(!$ERRORS){
				foreach ($UserInfo as $key => $value) {
					$UserInfo[$key] = str_replace(' ', '', $value);
				}

				$this->setSessionParam('step2_OK',true);
				$GLOBALS['_SESSION']['card_design']['kredit'] = $UserInfo;
				$this->redirect($this->action.'&step=4#content');
				return 1;
			}

		}

		$DATA = array(
			'session_id'=> $this->getSessionParam('session_id'),
			'koefSrednemesDohod'=> $this->getSessionParam('koefSrednemesDohod'),
			'CONSTANTS'=> $GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'KREDIT_DOGOVORA'=> $KREDIT_DOGOVORA,
			'UserInfo'=> $UserInfo,
			'ERRORS'=> $ERRORS,
		);

		$this->viewStep2_overdraft($DATA);
		//F::debug($DATA);
	}



	function doStep4_overdraft(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK') || !$this->getSessionParam('step2_OK')){
			echo 'Не выполнен шаг 1 или 2 или 3';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $this->getParam('userInfo');
		if ($this->getSessionParam('step4_OK') || $this->getSessionParam('step4_OK')=='')  $UserInfo =  $this->getSessionParam('anketa');
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');



		if($this->getParam('prev')){
			$this->setSessionParam('step4_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}
		if($this->getParam('next')){
		//	$ERRORStxt[] = userImy;	
		// Проверяем правильность заполнения полей

			$ERRORS = array();
			$ERRORStxt = array();
			$SAVEDATA = array();
			$MASSDAT = array();
			/*
			echo '<pre>';
			print_r ($UserInfo);
			echo '</pre>';			
			*/

			$UserInfo['userFamiliya'] = trim($UserInfo['userFamiliya']);
			$UserInfo['userImya'] = trim($UserInfo['userImya']);
			$UserInfo['userOtchestvo'] = trim($UserInfo['userOtchestvo']);

			// валидность полей - проверяем заполнены ли и соответствие регулярке
			if ($UserInfo['userFamiliya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userFamiliya']) || strlen($UserInfo['userFamiliya'])<2)) $ERRORStxt[] = userFamiliya;			
			if ($UserInfo['userImya']!='' && (!preg_match('/^[а-яА-ЯЁё-]+$/', $UserInfo['userImya']) || strlen($UserInfo['userImya'])<2)) $ERRORStxt[] = userImya;			
			if ($UserInfo['userOtchestvo']!='' && (!preg_match('/^[а-яА-ЯЁё]+$/', $UserInfo['userOtchestvo']) || strlen($UserInfo['userOtchestvo'])<2)) $ERRORStxt[] = userOtchestvo;			


			if ($UserInfo[userPasportSeriyaNomer]!='' && 
				(strlen($UserInfo[userPasportSeriyaNomer])!=9 ||
				!preg_match('/^[a-zA-Z0-9]+$/', $UserInfo[userPasportSeriyaNomer]) )  )
			$ERRORStxt[] = userPasportSeriyaNomer;	 	


			if ($UserInfo['userPasportLichnyNomer']=='') {
				$ERRORS[] = userPasportLichnyNomer;
			} else {
				$UserInfo['userPasportLichnyNomer'] = F::toupper($UserInfo['userPasportLichnyNomer']);
				if (strlen($UserInfo[userPasportLichnyNomer])!=14) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],0,7))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],7,1))) $ERRORStxt[] = userPasportLichnyNomer;
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],8,3))) $ERRORStxt[] = userPasportLichnyNomer;
				
				if (!preg_match("/[A-Z]/i", substr($UserInfo[userPasportLichnyNomer],11,2))) $ERRORStxt[] = userPasportLichnyNomer;
				//if (substr($UserInfo[userPasportLichnyNomer],11,2) != 'PB') $ERRORStxt[] = userPasportLichnyNomer;
				
				if (!is_numeric(substr($UserInfo[userPasportLichnyNomer],13,1))) $ERRORStxt[] = userPasportLichnyNomer;
				$masskontrol = array(
					'A'=>10, 'B'=>11, 'C'=>12, 'D'=>13, 'E'=>14, 'F'=>15, 'G'=>16, 'H'=>17, 'I'=>18, 'J'=>19, 'K'=>20, 'L'=>21, 'M'=>22, 
					'N'=>23, 'O'=>24, 'P'=>25, 'Q'=>26, 'R'=>27, 'S'=>28, 'T'=>29, 'U'=>30, 'V'=>31, 'W'=>32, 'X'=>33, 'Y'=>34, 'Z'=>35	);
				$kontrolNumber=7*$UserInfo[userPasportLichnyNomer]{0} + 3*$UserInfo[userPasportLichnyNomer]{1} + 1*$UserInfo[userPasportLichnyNomer]{2} + 
								7*$UserInfo[userPasportLichnyNomer]{3} + 3*$UserInfo[userPasportLichnyNomer]{4} + 1*$UserInfo[userPasportLichnyNomer]{5} + 		
								7*$UserInfo[userPasportLichnyNomer]{6} + 3*$masskontrol[$UserInfo[userPasportLichnyNomer]{7}] + 1*$UserInfo[userPasportLichnyNomer]{8} + 	
								7*$UserInfo[userPasportLichnyNomer]{9} + 3*$UserInfo[userPasportLichnyNomer]{10} + 1*$masskontrol[$UserInfo[userPasportLichnyNomer]{11}] + 	
								7*$masskontrol[$UserInfo[userPasportLichnyNomer]{12}];
				$kontrolNumber = substr($kontrolNumber,-1);
				if (substr($UserInfo[userPasportLichnyNomer],13,1) != $kontrolNumber) $ERRORStxt[] = userPasportLichnyNomer;
			}

			if(!isset($UserInfo[userBirth]) || $UserInfo[userBirth] == '') {
				$ERRORS[] = userBirth;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo[userBirth]) && $UserInfo[userBirth]!='') $ERRORStxt[] = userBirth;	
				$date_format = substr($UserInfo[userBirth],6,4).substr($UserInfo[userBirth],3,2).substr($UserInfo[userBirth],0,2);
				$temp_date = date ("Ymd", mktime(0, 0, 0, date("m"), date("d")+1, date("Y")-18));   // сегодня минус 18 лет
				if(checkdate(substr($UserInfo[userBirth],3,2), substr($UserInfo[userBirth],0,2), substr($UserInfo[userBirth],6,4)) != true) $ERRORStxt[] = userBirth;	
				if ($date_format>$temp_date) $ERRORStxt[] = userBirth;	
			}
	
			
			if(!isset($UserInfo[userPasportDataVidachy]) || $UserInfo[userPasportDataVidachy] == '') {
				$ERRORS[] = userPasportDataVidachy;
			} else {
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userPasportDataVidachy']) && $UserInfo['userPasportDataVidachy']!='') $ERRORStxt[] = userPasportDataVidachy;
				if(checkdate(substr($UserInfo[userPasportDataVidachy],3,2), substr($UserInfo[userPasportDataVidachy],0,2), substr($UserInfo[userPasportDataVidachy],6,4)) != true) $ERRORStxt[] = userPasportDataVidachy;	
			}

			
			if(!isset($UserInfo['userRegistrRavnoMestogitel'])) { $ERRORS[] = mestogitDIV; }
			
			if ($UserInfo['userRegistrRavnoMestogitel'] == 'не совпадает с адресом регистрации') {
				if(!isset($UserInfo['nGitelOblast']) || $UserInfo['nGitelOblast']=='') { $ERRORS[] = nGitelOblast; $ERRORS[] = nGitelOblastS; }
				if(!isset($UserInfo['nGitelRayon']) || $UserInfo['nGitelRayon']=='') { $ERRORS[] = nGitelRayon; $ERRORS[] = nGitelRayonS; }
				if(!isset($UserInfo['nGitelCity']) || $UserInfo['nGitelCity']=='') { $ERRORS[] = nGitelCity; $ERRORS[] = nGitelCityS; }
				if(!isset($UserInfo['nGitelUlicaTip']) || $UserInfo['nGitelUlicaTip']=='') { $ERRORS[] = nGitelUlicaTip; $ERRORS[] = nGitelUlicaTipS; }

				$MASSDAT['nGitelUlica'] = nGitelUlica;
				$MASSDAT['nGitelDom'] = nGitelDom;
				$MASSDAT['nGitelKorpus'] = nGitelKorpus;
				$MASSDAT['nGitelKvartira'] = nGitelKvartira;
			} 
	

			if(!isset($UserInfo['userOverdraftFilial']) || $UserInfo['userOverdraftFilial']=='') { $ERRORS[] = userOverdraftFilial; $ERRORS[] = userOverdraftFilialS; }



			if ($UserInfo['userVoennoobyazannost'] == 'отсрочка от службы до') {
				if ($UserInfo['userVoennoobyazannostOtsrochkaDo']=='')  $ERRORS[] = userVoennoobyazannostOtsrochkaDo;
				if (!preg_match('/^\d{2}\.\d{2}\.\d{4}$/', $UserInfo['userVoennoobyazannostOtsrochkaDo']) && $UserInfo['userVoennoobyazannostOtsrochkaDo']!='') $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;	
				if(checkdate(substr($UserInfo[userVoennoobyazannostOtsrochkaDo],3,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],0,2), substr($UserInfo[userVoennoobyazannostOtsrochkaDo],6,4)) != true) $ERRORStxt[] = userVoennoobyazannostOtsrochkaDo;
			}

			$vowels = array("(", "_", ")", "-");

			$userTelefonMestogitelstva = str_replace($vowels, "", $UserInfo['userTelefonMestogitelstva']);
			$userTelefonMobilny = str_replace($vowels, "", $UserInfo['userTelefonMobilny']);
			$userTelefonRabota = str_replace($vowels, "", $UserInfo['userTelefonRabota']);

			if($userTelefonMestogitelstva == '')				$ERRORS[] = userTelefonMestogitelstva;
			elseif(strlen($userTelefonMestogitelstva) != 11)	$ERRORStxt[] = userTelefonMestogitelstva; 												

			if($userTelefonMobilny == '')						$ERRORS[] = userTelefonMobilny;
			elseif(strlen($userTelefonMobilny) != 11)			$ERRORStxt[] = userTelefonMobilny; 												

			if($userTelefonRabota == '')						$ERRORS[] = userTelefonRabota;
			elseif(strlen($userTelefonRabota) != 11)			$ERRORStxt[] = userTelefonRabota; 												



			if(!isset($UserInfo['userPol']) || $UserInfo['userPol']=='') { $ERRORS[] = userPol; $ERRORS[] = userPolS; }
			if(!isset($UserInfo['userVoennoobyazannost']) || $UserInfo['userVoennoobyazannost']=='') { $ERRORS[] = userVoennoobyazannost; $ERRORS[] = userVoennoobyazannostS; }
			if(!isset($UserInfo['nPropiskaOblast']) || $UserInfo['nPropiskaOblast']=='') { $ERRORS[] = nPropiskaOblast; $ERRORS[] = nPropiskaOblastS; }
			if(!isset($UserInfo['nPropiskaRayon']) || $UserInfo['nPropiskaRayon']=='') { $ERRORS[] = nPropiskaRayon; $ERRORS[] = nPropiskaRayonS; }
			if(!isset($UserInfo['nPropiskaCity']) || $UserInfo['nPropiskaCity']=='') { $ERRORS[] = nPropiskaCity; $ERRORS[] = nPropiskaCityS; }
			if(!isset($UserInfo['nPropiskaUlicaTip']) || $UserInfo['nPropiskaUlicaTip']=='') { $ERRORS[] = nPropiskaUlicaTip; $ERRORS[] = nPropiskaUlicaTipS; }
			// если вдруг недогрузился аякс запрос проверяем подгрузилось ли поле nPropiskaPodrAddrInput
			if($UserInfo['nPropiskaCity']!='' && $UserInfo['nPropiskaPodrAddrInput']=='') { 
				$numFil = DB::select_value("SELECT filial FROM soato WHERE number_soato=?",$UserInfo['nPropiskaCity']);
				$PODR_ADDR = DB::select_line(" SELECT f.filial_name, ft.type_name, f.num, m.name_type, m.name,f.street_type,f.street,f.home_number
												FROM filials as f, filials_type as ft,  map as m 
												WHERE ft.type_id=f.type AND f.city_id=m.idkey AND f.num=? AND f.subnum = ''",$numFil);
				$podrFullName = '';
				if ($PODR_ADDR[filial_name]) $podrFullName = $PODR_ADDR[filial_name];
				else 						 $podrFullName = $PODR_ADDR[type_name].' №'.$PODR_ADDR[num];
				$podrFullName .= ' - '.$PODR_ADDR[name_type].$PODR_ADDR[name].', '.$PODR_ADDR[street_type].$PODR_ADDR[street].', '.$PODR_ADDR[home_number];
				echo $UserInfo['nPropiskaPodrAddrInput'] = $podrFullName;
			}


			if(!isset($UserInfo['userDocument']) || $UserInfo['userDocument']=='') { $ERRORS[] = userDocument; $ERRORS[] = userDocumentS; }


			if(!isset($UserInfo['userObrazovanie']) || $UserInfo['userObrazovanie']=='') { $ERRORS[] = userObrazovanie; $ERRORS[] = userObrazovanieS; }
			if(!isset($UserInfo['userSemeynoePologenie']) || $UserInfo['userSemeynoePologenie']=='') { $ERRORS[] = userSemeynoePologenie; $ERRORS[] = userSemeynoePologenieS; }
			if(!isset($UserInfo['userChlenySemyi']) || $UserInfo['userChlenySemyi']=='') { $ERRORS[] = userChlenySemyi; $ERRORS[] = userChlenySemyiS; }
			if(!isset($UserInfo['userNesovershennoletnieDeli']) || $UserInfo['userNesovershennoletnieDeli']=='') { $ERRORS[] = userNesovershennoletnieDeli; $ERRORS[] = userNesovershennoletnieDeliS; }

			//if(!preg_match('/^\d+$/', $UserInfo['userChlenySemyi']))  { $ERRORStxt[] = userChlenySemyi;}
			
			
			$MASSMAIN = array(
								'userFamiliya'=>userFamiliya,
								'userImya'=>userImya,
								'userOtchestvo'=>userOtchestvo,
								'nPropiskaUlica'=>nPropiskaUlica,
								'nPropiskaDom'=>nPropiskaDom,
								'nPropiskaKorpus'=>nPropiskaKorpus,
								'nPropiskaKvartira'=>nPropiskaKvartira,
								'userPasportSeriyaNomer'=>userPasportSeriyaNomer,
								'userPasportROVD'=>userPasportROVD,
							);
			
			if (isset($MASSDAT)) {
				$MASSDATA = array_merge($MASSDAT,$MASSMAIN);
			} else {
				$MASSDATA = $MASSMAIN;	
			}
			

			foreach ($UserInfo as $k=>$v) {
			  if ($v == '' && isset($MASSDATA[$k])) $ERRORS[] = $MASSDATA[$k];
			}
			


			// Переходим к следующему шагу если все ОК
			if(empty($ERRORS) && empty($ERRORStxt)){
				
				// убираем мусор если он есть и добавляем новые данные для последующей печати таблицы
				if ($UserInfo[userRegistrRavnoMestogitel]=='совпадает с адресом регистрации') {
				  unset($UserInfo[nGitelOblast]);
 				  unset($UserInfo[nGitelRayon]);
 				  unset($UserInfo[nGitelCity]);
 				  unset($UserInfo[nGitelUlicaTip]);
 				  unset($UserInfo[nGitelUlica]);
 				  unset($UserInfo[nGitelDom]);
 				  unset($UserInfo[nGitelKorpus]);
 				  unset($UserInfo[nGitelKvartira]);
				}


				
				if ($UserInfo[userVoennoobyazannost]!='отсрочка от службы до') {
				  unset($UserInfo[userVoennoobyazannostOtsrochkaDo]);
				}			

				$GLOBALS['_SESSION']['card_design']['anketa'] = $UserInfo;

				$this->setSessionParam('step4_OK',true);
				$this->redirect($this->action.'&step=5#content');
				return 1;
			}

		}

		$CITYS_GITEL = DB::select_array("
							  SELECT idkey, cat_left, cat_right, cat_level,parkey as p,
							  IF (name_type!='',CONCAT((SELECT CONCAT(name_type,name) FROM map WHERE idkey=p ORDER BY name),', ',name_type,name),CONCAT(name_type,name))  AS name 
							  FROM map 
						  WHERE type IN (3,4) 
						  ORDER BY type DESC,name ASC");
		$where_2 = ''; $or_2 = '';
		foreach ($CITYS_GITEL as $city_gitel){
			$where_2 .= $or_2. '(cat_left<='.$city_gitel['cat_left'].' AND cat_right>='.$city_gitel['cat_left'].') ';
			$or_2 = ' OR ';
		}
		
		
		$FILIALS_ALL = DB::select_column("SELECT CONCAT(ft.type_name,' №',f.num,' - ',m.name_type,m.name,', ',f.street_type,f.street,', ',f.home_number) as k
FROM map as m, filials as f,filials_type as ft
WHERE f.type IN (1,2,3) AND f.type=ft.type_id AND f.subnum='' AND m.idkey=f.city_id AND f.num!=519 ORDER BY f.num");
		foreach ($FILIALS_ALL as $key =>$value) {
			if ( strpos($value, '№100') != false ) $FILIALS_ALL[$key] = 'Филиал №100 - г.Брест, бул.Космонавтов, 94';
			if ( strpos($value, '№510') != false ) $FILIALS_ALL[$key] = 'Филиал №510 - г.Минск, ул.Мясникова, 32';
			if ( strpos($value, '№795') != false ) $FILIALS_ALL[$key] = 'ЦА №795 - г.Минск, пр.Дзержинского, 18';
		}
		$POLS = array('Мужской' => 'Мужской','Женский' => 'Женский');
		$FAMS = array('да' => 'да','нет' => 'нет');
		$FAMS2 = array('да' => 'да','нет' => 'нет','не располагаю информацией' => 'не располагаю информацией');
		
		$GRAGDANSTVO = array(
			  'гражданин Республики Беларусь' => 'гражданин Республики Беларусь',
			  'иностранный гражданин' => 'иностранный гражданин',
			  'лицо без гражданства' => 'лицо без гражданства'
		);

		$REZIDENTSTVO = array(
			  'резидент' => 'резидент',
			  'нерезидент' => 'нерезидент'
		);

		$MAIL_AVAIL = array(
			  'есть' => 'есть',
			  'нет' => 'нет'
		);
		
		$VOENNOOBYAZANNOST  = array(
			  'служил' => 'служил',
			  'невоеннообязанный' => 'невоеннообязанный',
			  'освобожден от воинской службы' => 'освобожден от воинской службы',
			  'отсрочка от службы до' => 'отсрочка от службы до',
		);

		$OBRAZOVANIE = array(
			  'высшее' => 'высшее',
			  'среднее специальное' => 'среднее специальное',
			  'среднее' => 'среднее',
			  'базовое' => 'базовое',
			  'без образования' => 'без образования',
		);

		$DOCUMENT_LICHNOST = array(
			  'паспорт гражданина Республики Беларусь' => 'паспорт гражданина Республики Беларусь',
			  'вид на жительство в Республике Беларусь' => 'вид на жительство в Республике Беларусь',
		);

		$SEMEYNOE = array(
			  'холост / не замужем' => 'холост / не замужем',
			  'женат / замужем' => 'женат / замужем',
			  'разведен / разведена' => 'разведен / разведена',
			  'вдовец / вдова' => 'вдовец / вдова'
		);


		$STATUS_SEMYI = array(
			  'многодетная семья' => 'многодетная семья',
			  'семья, имеющая 1-2 несовершеннолетних детей' => 'семья, имеющая 1-2 несовершеннолетних детей',
			  'семья, не имеющая несовершеннолетних детей' => 'семья, не имеющая несовершеннолетних детей',
			  'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей' => 'одинокие (овдовевшие, разведенные) граждане, воспитывающие несовершеннолетних детей',
			  'одинокий гражданин' => 'одинокий гражданин',
		);

	
		$KREDIT_CEL = array(
			'потребительские нужды' => 'потребительские нужды',
			'финансирование недвижимости' => 'финансирование недвижимости',
			'приобретение автомобиля' => 'приобретение автомобиля',
			'овердрафт' => 'овердрафт',
			'иное' => 'иное',
		);

		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);

		$VAL = DB::select_column("SELECT val_name_ru_many FROM kurs_valuta WHERE val_name_ru_many!='' AND val_group IN (1,5) ORDER BY val_priority");
		foreach ($VAL as $k=>$v)  $VALUTY[$v] = $v;

		$CHLENYSEMYI = array('1' => '1','2' => '2','3' => '3','4' => '4','5' => '5','6' => '6','7' => '7 и более');
		$IGDIVENCY = array('нет' => 'нет','1' => '1','2' => '2','3' => '3','4' => '4','5' => '5 и более');

		$BIRTH_DATE = array('01' => '1','02' => '2','03' => '3','04' => '4','05' => '5','06' => '6','07' => '7','08' => '8','09' => '9','10' => '10','11' => '11','12' => '12','13' => '13','14' => '14','15' => '15','16' => '16','17' => '17','18' => '18','19' => '19','20' => '20','21' => '21','22' => '22','23' => '23','24' => '24','25' => '25','26' => '26','27' => '27','28' => '28','29' => '29','30' => '30','31' => '31');
		$BIRTH_MONTH = array('01' => 'января','02' => 'февраля','03' => 'марта','04' => 'апреля','05' => 'мая','06' => 'июня','07' => 'июля','08' => 'августа','09' => 'сентября','10' => 'октября','11' => 'ноября','12' => 'декабря');
		for($i=(date("Y")-100);$i<(date("Y")-15);$i++) $BIRTH_YEAR[$i]=$i;


		$NE_PORUCHITEL = array(
			'нет источника дохода' => 'нет источника дохода',
			'низкая платежеспособность' => 'низкая платежеспособность',
			'супруг(а) отказался(ась) выступить поручителем' => 'супруг(а) отказался(ась) выступить поручителем',
			'клиент отказался пояснить' => 'клиент отказался пояснить',
			'выбрана иная форма обеспечения' => 'выбрана иная форма обеспечения',
		);


		$TIP_ULICY = array(
			'Нет улицы' => 'Нет улицы',
			'Бульвар' => 'Бульвар',
			'Вал' => 'Вал',
			'Военная часть' => 'Военная часть',
			'Военный городок' => 'Военный городок',
			'Квартал' => 'Квартал',
			'Кольцо' => 'Кольцо',
			'Микрорайон' => 'Микрорайон',
			'Набережная' => 'Набережная',
			'Парк' => 'Парк',
			'Переулок' => 'Переулок',
			'Площадь' => 'Площадь',
			'Поселок' => 'Поселок',
			'Проезд' => 'Проезд',
			'Проспект' => 'Проспект',
			'Станция' => 'Станция',
			'Территория' => 'Территория',
			'Тракт' => 'Тракт',
			'Тупик' => 'Тупик',
			'Улица' => 'Улица',
			'Урочище' => 'Урочище',
			'Шоссе' => 'Шоссе',
		);
		
		$SFERA_DEYAT = array(
				'Адвокатура, судебные органы, нотариат' => 'Адвокатура, судебные органы, нотариат',
				'Горнодобывающая, нефтеперерабатывающая промышленность' => 'Горнодобывающая, нефтеперерабатывающая промышленность',
				'Гостиницы и рестораны' => 'Гостиницы и рестораны',
				'Деятельность, связанная с вычислительной техникой' => 'Деятельность, связанная с вычислительной техникой',
				'Здравоохранение' => 'Здравоохранение',
				'Издательская деятельность, полиграфия' => 'Издательская деятельность, полиграфия',
				'Легкая промышленность' => 'Легкая промышленность',
				'Научные исследования и разработки' => 'Научные исследования и разработки',
				'Оборона, силовые ведомства' => 'Оборона, силовые ведомства',
				'Обрабатывающая промышленность' => 'Обрабатывающая промышленность',
				'Образование' => 'Образование',
				'Операции с недвижимостью, учлуги аренды' => 'Операции с недвижимостью, учлуги аренды',
				'Органы госуправления, госслужба' => 'Органы госуправления, госслужба',
				'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)' => 'Предоставдение коммунальных, социальных и персональных услуг (отдых, развлечения, культура, спорт)',
				'Прочие' => 'Прочие',
				'Связь, телевидение и радиовещание' => 'Связь, телевидение и радиовещание',
				'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство' => 'Сельское хозяйство, лесное хозяйство, рыбное хрзяйство',
				'Страхование' => 'Страхование',
				'Строительство' => 'Строительство',
				'Сфера услуг, рекламная деятельность' => 'Сфера услуг, рекламная деятельность',
				'Торговля' => 'Торговля',
				'Транспорт' => 'Транспорт',
				'Транспорт воздушный' => 'Транспорт воздушный',
				'Транспортирование по трубопроводам' => 'Транспортирование по трубопроводам',
				'Тяжелая промышленность, машиностроение' => 'Тяжелая промышленность, машиностроение',
				'Финансовая деятельность' => 'Финансовая деятельность',
				'Электроэнергетика' => 'Электроэнергетика',
			);
		
		$DATA = array(
			'birth_date'=>$BIRTH_DATE,
			'birth_month'=>$BIRTH_MONTH,
			'birth_year'=>$BIRTH_YEAR,
			'CONSTANTS'=>$GLOBALS['_SESSION']['card_design']['CONSTANTS'],
			'POLS' => $POLS,
			'FILIALS_ALL' => $FILIALS_ALL,
			'MAIL_AVAIL' => $MAIL_AVAIL,
			'BANKI' => $BANKI,
			'FAMS' => $FAMS,
			'FAMS2' => $FAMS2,
			'VALUTY' => $VALUTY,
			'TIP_ULICY' => $TIP_ULICY,
			'KREDIT_CEL' => $KREDIT_CEL,
			'VOENNOOBYAZANNOST' => $VOENNOOBYAZANNOST,
			'GRAGDANSTVO' => $GRAGDANSTVO,
			'RABOTA' => $RABOTA,
			'DOCUMENT_LICHNOST' => $DOCUMENT_LICHNOST,
			'REZIDENTSTVO' => $REZIDENTSTVO,
			'STATUS_RABOTA' => $STATUS_RABOTA,
			'AVTO' => $AVTO,
			'OBRAZOVANIE' => $OBRAZOVANIE,
			'KOLVO_RABOTNIKOV' => $KOLVO_RABOTNIKOV,
			'STAG_RABOTY' => $STAG_RABOTY,
			'STATUS_SEMYI' => $STATUS_SEMYI,
			'SEMEYNOE' => $SEMEYNOE,
			'CHLENYSEMYI' => $CHLENYSEMYI,
			'IGDIVENCY' => $IGDIVENCY,
			'NE_PORUCHITEL' => $NE_PORUCHITEL,
			'SFERA_DEYAT' => $SFERA_DEYAT,
			'UserInfo'=>$UserInfo,
			'SUDIMOST' => $SUDIMOST,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);

		$this->viewStep4_overdraft($DATA);
	}

	function doStep8_overdraft(){

		/*
		echo '<pre>';
		print_r ($GLOBALS['_SESSION']['card_design']);
		echo '</pre>'; 	
		*/
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		|| !$this->getSessionParam('step7_OK')
		){
			echo 'Не выполнен шаг 1 или 2 или 4 или 5 или 7';
			$this->redirect($this->action.'');
			return 1;
		}


		if($this->getParam('prev1')){
			$this->setSessionParam('step1_OK',false);
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=1#content');
			return 1;
		}
		if($this->getParam('prev2')){
			$this->setSessionParam('step2_OK',false);
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=2#content');
			return 1;
		}
		
		if($this->getParam('prev4')){
			$this->setSessionParam('step4_OK',false);
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=4#content');
			return 1;
		}
		
		if($this->getParam('prev5')){
			$this->setSessionParam('step5_OK',false);
			$this->setSessionParam('step6_OK',false);
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=5#content');
			return 1;
		}
		
		if($this->getParam('prev7')){
			$this->setSessionParam('step7_OK',false);
			$this->setSessionParam('step8_OK',false);
			$this->redirect($this->action.'&step=7#content');
			return 1;
		}
		$BANKI = array(
			'Беларусбанк' => 'ОАО "АСБ Беларусбанк"',
			'Белагропромбанк' => 'ОАО "Белагропромбанк"',
			'Белинвестбанк' => 'ОАО "Белинвестбанк"',
			'Паритетбанк' => 'ОАО "Паритетбанк"',
			'БПС-Сбербанк' => 'ОАО "БПС-Сбербанк"',
			'Приорбанк' => '"Приорбанк" ОАО',
			'Банк БелВЭБ' => 'ОАО "Банк БелВЭБ"',
			'БНБ–Банк' => 'ОАО "БНБ–Банк"',
			'Белгазпромбанк' => 'ОАО "Белгазпромбанк"',
			'АБСОЛЮТБАНК' => 'ЗАО "АБСОЛЮТБАНК"',
			'РРБ–Банк' => 'ЗАО "РРБ–Банк"',
			'МТБанк' => 'ЗАО "МТБанк"',
			'Технобанк' => 'ОАО "Технобанк"',
			'Франсабанк' => '"Франсабанк" ОАО',
			'Трастбанк' => 'ЗАО "Трастбанк"',
			'Банк ВТБ (Беларусь)' => 'ЗАО Банк ВТБ (Беларусь)',
			'Альфа–Банк' => 'ЗАО "Альфа–Банк"',
			'Банк Москва–Минск' => 'ОАО "Банк Москва–Минск"',
			'Дельта Банк' => 'ЗАО "Дельта Банк"',
			'Кредэксбанк' => 'ЗАО "Кредэксбанк"',
			'Международный резервный банк' => 'ОАО "Международный резервный банк"',
			'ХКБанк' => 'ОАО "ХКБанк"',
			'БТА Банк' => 'ЗАО "БТА Банк"',
			'БелСвиссБанк' => 'ЗАО "БелСвиссБанк"',
			'АКБ БЕЛРОСБАНК' => 'ЗАО "АКБ "БЕЛРОСБАНК"',
			'Идея Банк' => 'ЗАО "Идея Банк"',
			'Банк ББМБ' => 'ЗАО "Банк ББМБ"',
			'ТК Банк' => 'ЗАО "ТК Банк"',
			'Цептер Банк' => 'ЗАО "Цептер Банк"',
			'Евробанк' => 'ЗАО "Евробанк"',
			'Онербанк' => 'ЗАО "Онербанк"',
			'БИТ-Банк' => 'ЗАО "БИТ-Банк"',
		);


		$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next'))	$UserInfo =  $this->getParam('userInfo');
		
		if($this->getParam('next')){
			$ERRORS = array();
			$ERRORStxt = array();

			
			 if($UserInfo['resultat']=='') $ERRORS[] = 'Вы не указали, каким образом вас уведомить о принятом решении по заявке на овердрафт';
			// Переходим к следующему шагу если все ОК
			if(!$ERRORS){

				foreach ($GLOBALS[_SESSION][card_design][anketa] as $k=>$v)
					$GLOBALS[_SESSION][card_design][anketa][$k] = htmlspecialchars_decode($GLOBALS[_SESSION][card_design][anketa][$k]);

				
				
				$GLOBALS['_SESSION']['card_design']['result'] = $UserInfo;
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['ANKETA_END'] = date("Y.m.d H:i");
				
				$this->setSessionParam('step8_OK',true);
					

				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchFizLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchFizLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][poruchUrLic]) !== true) unset($GLOBALS[_SESSION][card_design][poruchUrLic]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogImu]) !== true) unset($GLOBALS[_SESSION][card_design][zalogImu]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogTransport]) !== true) unset($GLOBALS[_SESSION][card_design][zalogTransport]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogCenBumag]) !== true) unset($GLOBALS[_SESSION][card_design][zalogCenBumag]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][zalogNedv]) !== true) unset($GLOBALS[_SESSION][card_design][zalogNedv]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][garantDeposit]) !== true) unset($GLOBALS[_SESSION][card_design][garantDeposit]);
				//if (isset($GLOBALS[_SESSION][card_design][CONSTANTS][drFormyObesp]) !== true) unset($GLOBALS[_SESSION][card_design][drFormyObesp]);

				// для софтклуба парсим на тип населенного пункта и название
				if(isset($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan])) {
					$arr1 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nPropiskaCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityType] = $arr1[tip];
					$GLOBALS[_SESSION][card_design][anketa][nPropiskaCityName] = $arr1[name];
				}
				
				if(isset($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan])) {
					$arr2 = $this->parseCityName($GLOBALS[_SESSION][card_design][anketa][nGitelCitSpan]);
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityType] = $arr2[tip];
					$GLOBALS[_SESSION][card_design][anketa][nGitelCityName] = $arr2[name];
				}

				// закончили парсить
				//echo '<pre>';
				//print_r ($GLOBALS['_SESSION']['card_design']);
				//echo '</pre>';				
				//exit();	
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == 5) $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = '5 и более';
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == 7) $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = '7 и более';
				
				$this->doPDF_overdraft($GLOBALS['_SESSION']['card_design']);
				

				


				
				/* в номерах телефонов оставляем только цифры для XML */
				/* телефоны  anketa */
				$anketaTel = array(userTelefonMestogitelstva,
										userTelefonRabota,
										userTelefonMobilny);

				$vowels = array("(", "_", ")", "-");

				foreach ($anketaTel as $v) {
					$tempVar ='';
					$tempVar = str_replace($vowels, "", $GLOBALS['_SESSION']['card_design']['anketa'][$v]);
					$GLOBALS['_SESSION']['card_design']['anketa'][$v] = substr($tempVar,2,strlen($tempVar));
				}	

				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == 'нет') $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = '0';
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] == '5 и более') $GLOBALS['_SESSION']['card_design']['anketa']['userNesovershennoletnieDeli'] = 5;
				if ($GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] == '7 и более') $GLOBALS['_SESSION']['card_design']['anketa']['userChlenySemyi'] = 7;

				$massives = array (	CONSTANTS,
									kredit,
									anketa,
									anketa2,
									poruchFizLic,
									poruchUrLic,
									zalogImu,
									zalogTransport,
									zalogCenBumag,
									zalogNedv,
									garantDeposit,
									kredity);
				// убираем дефисы  для XML 
				foreach ($massives as $v) {
					foreach($GLOBALS['_SESSION']['card_design'][$v] as $kk=>$vv) {
						if ($vv == '-') {
							$GLOBALS['_SESSION']['card_design'][$v][$kk] = '';
						}
					}
				}
				//F::debug($GLOBALS['_SESSION']['card_design']);
				// для Минска возвращаем код СОАТО 5000000000, независимо от района
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'], '500000000') !== false ) 
					$GLOBALS['_SESSION']['card_design']['anketa']['nPropiskaCity'] = 5000000000;
				if (strpos($GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'], '500000000') !== false )
					$GLOBALS['_SESSION']['card_design']['anketa']['nGitelCity'] = 5000000000;
				
				$GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka'] = str_replace('.', ',', $GLOBALS['_SESSION']['card_design']['CONSTANTS']['procentnayaStavka']);

				unset($GLOBALS['_SESSION']['card_design']['CONSTANTS']['cardNum9Digits']);
				
				$this->doXML($GLOBALS['_SESSION']['card_design']);
				$this->redirect($this->action.'&step=9#content');
				return 1;
			}
		}

		if ($this->getSessionParam('step8_OK') || $this->getSessionParam('step8_OK')=='')  $UserInfo =  $GLOBALS['_SESSION']['card_design'];
		
		$DATA = array(
			'UserInfo' => $UserInfo,
			'ERRORS'=>$ERRORS,
			'ERRORStxt'=>$ERRORStxt,
		);
		
		$this->viewStep8_overdraft($DATA);

	}

	function doStep9_overdraft(){
		//Проверяем выполнены-ли предыдущие шаги. Если нет - редирект на начало.
		if(!$this->getSessionParam('step1_OK')
		|| !$this->getSessionParam('step2_OK')
		|| !$this->getSessionParam('step4_OK')
		|| !$this->getSessionParam('step5_OK')
		|| !$this->getSessionParam('step7_OK')
		|| !$this->getSessionParam('step8_OK')
		){
			echo 'Не выполнен шаг 1, или 2, или 4, или 5, или 7, или 8';
			$this->redirect($this->action.'');
			return 1;
		}

		$UserInfo =  $GLOBALS['_SESSION']['card_design'];

		$F_fil = F::rus2translit($UserInfo[anketa][userOverdraftFilial]);

		$F_surname = F::rus2translit($UserInfo[anketa][userFamiliya].'_'.$UserInfo[anketa][userImya][0].$UserInfo[anketa][userOtchestvo][0]);
		$F_name = HOME_URL.'/mod/kredit_bez_poruchiteley/site/XML/'.date("Y.m.d H.i").'-'.substr($F_fil,strpos($F_fil, "№")+1,3).'-'.$F_surname.'.pdf';

		$DATA = array(
			'UserInfo' => $UserInfo,
			'way' => $F_name,
		);
		$this->viewStep9_overdraft($DATA);
		//вернуть строку
		unset($GLOBALS['_SESSION']['card_design']);
	}

}
?>
